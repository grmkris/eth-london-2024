{
  "id": "f4c618c23f6f48918ea45869094e60a6",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
      },
      "contracts/DecentralizedBetting.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface ISocialOracle {\n    function addQuestion(uint256 _id, uint256 _deadline) external;\n    function getQuestionOutcome(uint256 _questionId) external view returns (bool outcome, bool determined);\n}\n\ninterface IMatchNFT {\n    function mint(uint256 eventId, address to) external;\n}\n\n\ncontract DecentralizedBetting {\n    struct Bet {\n        uint256 amount;\n        bool prediction;\n    }\n\n    struct Event {\n        uint256 id;\n        uint256 timestamp;\n        bool outcome;\n        bool resolved;\n        uint256 totalPot;\n        uint256 winningPot;\n        bool emergencyStop;\n    }\n\n    address public owner;\n    uint256 private nextEventId;\n    IERC20 public bettingToken; // ERC20 token for betting (liquidity token)\n\n    mapping(uint256 => Event) public events;\n    mapping(uint256 => mapping(address => Bet)) public bets;\n\n    address public socialOracleAddress;\n    address public matchNFTAddress;\n\n    constructor(address _socialOracleAddress, address _matchNFTAddress, address _bettingTokenAddress) {\n        owner = msg.sender;\n        nextEventId = 1;\n        socialOracleAddress = _socialOracleAddress;\n        matchNFTAddress = _matchNFTAddress;\n        bettingToken = IERC20(_bettingTokenAddress);\n    }\n\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function.\");\n        _;\n    }\n\n    modifier eventNotResolved(uint256 eventId) {\n        require(!events[eventId].resolved, \"Event has been resolved.\");\n        _;\n    }\n\n    function createEvent(uint256 timestamp) external {\n        uint256 eventId = nextEventId++;\n        events[eventId].id = eventId;\n        events[eventId].timestamp = timestamp;\n\n        // Assuming SocialOracle has a function to add a question directly\n        // and the deadline is set as the event's timestamp\n        ISocialOracle(socialOracleAddress).addQuestion(eventId, timestamp);\n        IMatchNFT(matchNFTAddress).mint(eventId, msg.sender);\n    }\n\n\n    function placeBet(uint256 eventId, bool prediction, uint256 amount) external eventNotResolved(eventId) {\n        require(!events[eventId].emergencyStop, \"Betting is temporarily suspended.\");\n        require(bettingToken.transferFrom(msg.sender, address(this), amount), \"Failed to transfer bet tokens.\");\n        require(bets[eventId][msg.sender].amount == 0, \"User has already placed a bet.\");\n        require(events[eventId].id != 0, \"Invalid event ID.\");\n\n        bets[eventId][msg.sender] = Bet({\n            amount: amount,\n            prediction: prediction\n        });\n\n        events[eventId].totalPot += amount;\n        if (prediction) {\n            events[eventId].winningPot += amount;\n        }\n    }\n\n    function resolveEvent(uint256 eventId) external eventNotResolved(eventId) {\n        require(events[eventId].id != 0, \"Invalid event ID.\");\n        // require(block.timestamp >= events[eventId].timestamp, \"Event has not occurred yet.\");\n\n        // Get outcome from SocialOracle\n        (bool outcome, bool determined) = ISocialOracle(socialOracleAddress).getQuestionOutcome(eventId);\n        require(determined, \"Question outcome not determined yet.\");\n\n        events[eventId].outcome = outcome;\n        events[eventId].resolved = true;\n    }\n\n\n    function claimWinnings(uint256 eventId) external {\n        require(events[eventId].resolved, \"Event has not been resolved.\");\n        Bet storage bet = bets[eventId][msg.sender];\n        require(bet.amount > 0, \"User has no bet to claim.\");\n\n        uint256 winnings = 0;\n\n        if (bet.prediction == events[eventId].outcome) {\n            // Calculate the user's share of the winnings\n            uint256 totalPot = events[eventId].totalPot;\n            uint256 winningPot = events[eventId].winningPot;\n            if (winningPot > 0) { // Ensure there is no division by zero\n                winnings = (bet.amount * totalPot) / winningPot;\n            }\n\n            // Reset the bet amount to prevent reclamation\n            bet.amount = 0;\n\n            // Ensure the contract has enough tokens to pay out the winnings\n            uint256 contractTokenBalance = bettingToken.balanceOf(address(this));\n            require(contractTokenBalance >= winnings, \"Insufficient contract token balance to pay out winnings.\");\n\n            // Transfer the winnings to the user\n            require(bettingToken.transfer(msg.sender, winnings), \"Failed to transfer winnings.\");\n        } else {\n            // If the user didn't win, just reset their bet\n            bet.amount = 0;\n        }\n    }\n\n    function toggleEmergencyStop(uint256 eventId) external onlyOwner {\n        events[eventId].emergencyStop = !events[eventId].emergencyStop;\n    }\n\n    function withdraw() external onlyOwner {\n        uint256 amount = bettingToken.balanceOf(address(this));\n        require(bettingToken.transfer(owner, amount), \"Failed to transfer tokens.\");\n\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 200,
        "details": {
          "yulDetails": {
            "optimizerSteps": "u"
          }
        }
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ]
          },
          "id": 78,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:0",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 77,
              "linearizedBaseContracts": [
                77
              ],
              "name": "IERC20",
              "nameLocation": "212:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:158:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 11,
                  "name": "Transfer",
                  "nameLocation": "394:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "419:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "403:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "403:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "441:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "425:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "453:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "445:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "402:57:0"
                  },
                  "src": "388:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:148:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 20,
                  "name": "Approval",
                  "nameLocation": "625:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "650:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "634:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 16,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "673:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "657:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 18,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "690:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "682:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:63:0"
                  },
                  "src": "619:78:0"
                },
                {
                  "documentation": {
                    "id": 21,
                    "nodeType": "StructuredDocumentation",
                    "src": "703:66:0",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 26,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "820:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:0"
                  },
                  "scope": 77,
                  "src": "774:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:72:0",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 34,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "931:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:0"
                  },
                  "returnParameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "971:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:0"
                  },
                  "scope": 77,
                  "src": "912:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 35,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:202:0",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 44,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1202:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1219:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1211:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1231:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1223:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1210:28:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1257:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1256:6:0"
                  },
                  "scope": 77,
                  "src": "1193:70:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:264:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 54,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1547:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1565:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1557:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1580:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1572:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1572:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:32:0"
                  },
                  "returnParameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1612:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1611:9:0"
                  },
                  "scope": 77,
                  "src": "1538:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1627:642:0",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 64,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2283:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2299:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2291:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2316:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2308:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:33:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2342:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2341:6:0"
                  },
                  "scope": 77,
                  "src": "2274:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 65,
                    "nodeType": "StructuredDocumentation",
                    "src": "2354:287:0",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 76,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2655:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2676:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2668:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2668:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2690:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2682:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2682:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2702:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2694:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2694:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2667:42:0"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2728:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2727:6:0"
                  },
                  "scope": 77,
                  "src": "2646:88:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 78,
              "src": "202:2534:0",
              "usedErrors": [],
              "usedEvents": [
                11,
                20
              ]
            }
          ],
          "src": "106:2631:0"
        },
        "id": 0
      },
      "contracts/DecentralizedBetting.sol": {
        "ast": {
          "absolutePath": "contracts/DecentralizedBetting.sol",
          "exportedSymbols": {
            "DecentralizedBetting": [
              546
            ],
            "IERC20": [
              77
            ],
            "IMatchNFT": [
              105
            ],
            "ISocialOracle": [
              97
            ]
          },
          "id": 547,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 79,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 80,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 547,
              "sourceUnit": 78,
              "src": "57:56:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISocialOracle",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 97,
              "linearizedBaseContracts": [
                97
              ],
              "name": "ISocialOracle",
              "nameLocation": "125:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "938cfd67",
                  "id": 87,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addQuestion",
                  "nameLocation": "154:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 82,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "174:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 87,
                        "src": "166:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "166:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "_deadline",
                        "nameLocation": "187:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 87,
                        "src": "179:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "179:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "165:32:1"
                  },
                  "returnParameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "206:0:1"
                  },
                  "scope": 97,
                  "src": "145:62:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "25aaf905",
                  "id": 96,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getQuestionOutcome",
                  "nameLocation": "221:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 90,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "_questionId",
                        "nameLocation": "248:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "240:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "240:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "239:21:1"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 92,
                        "mutability": "mutable",
                        "name": "outcome",
                        "nameLocation": "289:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "284:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 91,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "284:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "determined",
                        "nameLocation": "303:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "298:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "283:31:1"
                  },
                  "scope": 97,
                  "src": "212:103:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 547,
              "src": "115:202:1",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IMatchNFT",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 105,
              "linearizedBaseContracts": [
                105
              ],
              "name": "IMatchNFT",
              "nameLocation": "329:9:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "94bf804d",
                  "id": 104,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "354:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "367:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "359:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "359:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "384:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "376:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "376:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "358:29:1"
                  },
                  "returnParameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "396:0:1"
                  },
                  "scope": 105,
                  "src": "345:52:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 547,
              "src": "319:80:1",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "DecentralizedBetting",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 546,
              "linearizedBaseContracts": [
                546
              ],
              "name": "DecentralizedBetting",
              "nameLocation": "411:20:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "DecentralizedBetting.Bet",
                  "id": 110,
                  "members": [
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "467:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "459:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "459:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 109,
                      "mutability": "mutable",
                      "name": "prediction",
                      "nameLocation": "488:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "483:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "483:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Bet",
                  "nameLocation": "445:3:1",
                  "nodeType": "StructDefinition",
                  "scope": 546,
                  "src": "438:67:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DecentralizedBetting.Event",
                  "id": 125,
                  "members": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "542:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "534:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "534:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 114,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "562:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "554:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "554:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "outcome",
                      "nameLocation": "586:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "581:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "581:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "resolved",
                      "nameLocation": "608:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "603:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "603:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 120,
                      "mutability": "mutable",
                      "name": "totalPot",
                      "nameLocation": "634:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "626:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 119,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "626:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "winningPot",
                      "nameLocation": "660:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "652:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "652:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 124,
                      "mutability": "mutable",
                      "name": "emergencyStop",
                      "nameLocation": "685:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 125,
                      "src": "680:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "680:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Event",
                  "nameLocation": "518:5:1",
                  "nodeType": "StructDefinition",
                  "scope": 546,
                  "src": "511:194:1",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 127,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "726:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "711:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "nextEventId",
                  "nameLocation": "753:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "737:27:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "43425e88",
                  "id": 132,
                  "mutability": "mutable",
                  "name": "bettingToken",
                  "nameLocation": "784:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "770:26:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$77",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 131,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 130,
                      "name": "IERC20",
                      "nameLocations": [
                        "770:6:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 77,
                      "src": "770:6:1"
                    },
                    "referencedDeclaration": 77,
                    "src": "770:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0b791430",
                  "id": 137,
                  "mutability": "mutable",
                  "name": "events",
                  "nameLocation": "881:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "848:39:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                    "typeString": "mapping(uint256 => struct DecentralizedBetting.Event)"
                  },
                  "typeName": {
                    "id": 136,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 133,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "856:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "848:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 135,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 134,
                        "name": "Event",
                        "nameLocations": [
                          "867:5:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 125,
                        "src": "867:5:1"
                      },
                      "referencedDeclaration": 125,
                      "src": "867:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Event_$125_storage_ptr",
                        "typeString": "struct DecentralizedBetting.Event"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f644b3bb",
                  "id": 144,
                  "mutability": "mutable",
                  "name": "bets",
                  "nameLocation": "944:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "893:55:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$_$",
                    "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet))"
                  },
                  "typeName": {
                    "id": 143,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 138,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "901:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "893:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$_$",
                      "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 142,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 139,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "920:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "912:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$",
                        "typeString": "mapping(address => struct DecentralizedBetting.Bet)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 141,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 140,
                          "name": "Bet",
                          "nameLocations": [
                            "931:3:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 110,
                          "src": "931:3:1"
                        },
                        "referencedDeclaration": 110,
                        "src": "931:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$110_storage_ptr",
                          "typeString": "struct DecentralizedBetting.Bet"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "30658198",
                  "id": 146,
                  "mutability": "mutable",
                  "name": "socialOracleAddress",
                  "nameLocation": "970:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "955:34:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9a2e8240",
                  "id": 148,
                  "mutability": "mutable",
                  "name": "matchNFTAddress",
                  "nameLocation": "1010:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "995:30:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 180,
                    "nodeType": "Block",
                    "src": "1130:209:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 157,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "1140:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 158,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1148:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1152:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1148:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1140:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "1140:18:1"
                      },
                      {
                        "expression": {
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 162,
                            "name": "nextEventId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1168:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1182:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1168:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 165,
                        "nodeType": "ExpressionStatement",
                        "src": "1168:15:1"
                      },
                      {
                        "expression": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 166,
                            "name": "socialOracleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1193:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 167,
                            "name": "_socialOracleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "1215:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1193:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "1193:42:1"
                      },
                      {
                        "expression": {
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 170,
                            "name": "matchNFTAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "1245:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 171,
                            "name": "_matchNFTAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152,
                            "src": "1263:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1245:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "1245:34:1"
                      },
                      {
                        "expression": {
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 174,
                            "name": "bettingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "1289:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 176,
                                "name": "_bettingTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 154,
                                "src": "1311:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 175,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1304:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1304:28:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1289:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 179,
                        "nodeType": "ExpressionStatement",
                        "src": "1289:43:1"
                      }
                    ]
                  },
                  "id": 181,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "_socialOracleAddress",
                        "nameLocation": "1052:20:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "1044:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1044:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "_matchNFTAddress",
                        "nameLocation": "1082:16:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "1074:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1074:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "_bettingTokenAddress",
                        "nameLocation": "1108:20:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "1100:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1100:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1043:86:1"
                  },
                  "returnParameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1130:0:1"
                  },
                  "scope": 546,
                  "src": "1032:307:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "1367:94:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 184,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1385:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1389:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1385:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 186,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "1399:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1385:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e2e",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1406:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                                "typeString": "literal_string \"Only owner can call this function.\""
                              },
                              "value": "Only owner can call this function."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                                "typeString": "literal_string \"Only owner can call this function.\""
                              }
                            ],
                            "id": 183,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1377:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1377:66:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "1377:66:1"
                      },
                      {
                        "id": 191,
                        "nodeType": "PlaceholderStatement",
                        "src": "1453:1:1"
                      }
                    ]
                  },
                  "id": 193,
                  "name": "onlyOwner",
                  "nameLocation": "1355:9:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1364:2:1"
                  },
                  "src": "1346:115:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "1510:90:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1528:25:1",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 198,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "1529:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 200,
                                  "indexExpression": {
                                    "id": 199,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "1536:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1529:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$125_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 201,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1545:8:1",
                                "memberName": "resolved",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 118,
                                "src": "1529:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4576656e7420686173206265656e207265736f6c7665642e",
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1555:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_52a1acb2d1a25435bd0079d3441dae800274afaf2e0ac3e6a407b9e6733ed0ed",
                                "typeString": "literal_string \"Event has been resolved.\""
                              },
                              "value": "Event has been resolved."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_52a1acb2d1a25435bd0079d3441dae800274afaf2e0ac3e6a407b9e6733ed0ed",
                                "typeString": "literal_string \"Event has been resolved.\""
                              }
                            ],
                            "id": 197,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1520:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1520:62:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 205,
                        "nodeType": "ExpressionStatement",
                        "src": "1520:62:1"
                      },
                      {
                        "id": 206,
                        "nodeType": "PlaceholderStatement",
                        "src": "1592:1:1"
                      }
                    ]
                  },
                  "id": 208,
                  "name": "eventNotResolved",
                  "nameLocation": "1476:16:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "1501:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "1493:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1492:17:1"
                  },
                  "src": "1467:133:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 249,
                    "nodeType": "Block",
                    "src": "1655:407:1",
                    "statements": [
                      {
                        "assignments": [
                          214
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 214,
                            "mutability": "mutable",
                            "name": "eventId",
                            "nameLocation": "1673:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 249,
                            "src": "1665:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 213,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1665:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 217,
                        "initialValue": {
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1683:13:1",
                          "subExpression": {
                            "id": 215,
                            "name": "nextEventId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1683:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1665:31:1"
                      },
                      {
                        "expression": {
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 218,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "1706:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 220,
                              "indexExpression": {
                                "id": 219,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "1713:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1706:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$125_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1722:2:1",
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 112,
                            "src": "1706:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 222,
                            "name": "eventId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "1727:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1706:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "1706:28:1"
                      },
                      {
                        "expression": {
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 225,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "1744:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 227,
                              "indexExpression": {
                                "id": 226,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "1751:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1744:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$125_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1760:9:1",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 114,
                            "src": "1744:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 229,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "1772:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1744:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "1744:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 236,
                              "name": "eventId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "1974:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 237,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "1983:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 233,
                                  "name": "socialOracleAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 146,
                                  "src": "1941:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 232,
                                "name": "ISocialOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "1927:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISocialOracle_$97_$",
                                  "typeString": "type(contract ISocialOracle)"
                                }
                              },
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1927:34:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISocialOracle_$97",
                                "typeString": "contract ISocialOracle"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1962:11:1",
                            "memberName": "addQuestion",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87,
                            "src": "1927:46:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1927:66:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "1927:66:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 244,
                              "name": "eventId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "2035:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 245,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2044:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2048:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2044:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 241,
                                  "name": "matchNFTAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "2013:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 240,
                                "name": "IMatchNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "2003:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMatchNFT_$105_$",
                                  "typeString": "type(contract IMatchNFT)"
                                }
                              },
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2003:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMatchNFT_$105",
                                "typeString": "contract IMatchNFT"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2030:4:1",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 104,
                            "src": "2003:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2003:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 248,
                        "nodeType": "ExpressionStatement",
                        "src": "2003:52:1"
                      }
                    ]
                  },
                  "functionSelector": "977d996d",
                  "id": 250,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createEvent",
                  "nameLocation": "1615:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1635:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "1627:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1627:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1626:19:1"
                  },
                  "returnParameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1655:0:1"
                  },
                  "scope": 546,
                  "src": "1606:456:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 337,
                    "nodeType": "Block",
                    "src": "2172:608:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2190:30:1",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 263,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "2191:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 265,
                                  "indexExpression": {
                                    "id": 264,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 252,
                                    "src": "2198:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2191:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$125_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 266,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2207:13:1",
                                "memberName": "emergencyStop",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 124,
                                "src": "2191:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657474696e672069732074656d706f726172696c792073757370656e6465642e",
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2222:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a43c32c6bd75a941910da7f2376eccfceb77541edab81c68bc9b8ce1daccb3d",
                                "typeString": "literal_string \"Betting is temporarily suspended.\""
                              },
                              "value": "Betting is temporarily suspended."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4a43c32c6bd75a941910da7f2376eccfceb77541edab81c68bc9b8ce1daccb3d",
                                "typeString": "literal_string \"Betting is temporarily suspended.\""
                              }
                            ],
                            "id": 262,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2182:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2182:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 270,
                        "nodeType": "ExpressionStatement",
                        "src": "2182:76:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 274,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2302:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2306:6:1",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2302:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 278,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2322:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DecentralizedBetting_$546",
                                        "typeString": "contract DecentralizedBetting"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DecentralizedBetting_$546",
                                        "typeString": "contract DecentralizedBetting"
                                      }
                                    ],
                                    "id": 277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2314:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 276,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2314:7:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2314:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 280,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 256,
                                  "src": "2329:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 272,
                                  "name": "bettingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "2276:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$77",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2289:12:1",
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 76,
                                "src": "2276:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2276:60:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f207472616e736665722062657420746f6b656e732e",
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2338:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ce1579c3fe0b1f8ac112c0f9696b22f977ffc3f906cd0d38d66077cfabfdba0",
                                "typeString": "literal_string \"Failed to transfer bet tokens.\""
                              },
                              "value": "Failed to transfer bet tokens."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ce1579c3fe0b1f8ac112c0f9696b22f977ffc3f906cd0d38d66077cfabfdba0",
                                "typeString": "literal_string \"Failed to transfer bet tokens.\""
                              }
                            ],
                            "id": 271,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2268:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2268:103:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 284,
                        "nodeType": "ExpressionStatement",
                        "src": "2268:103:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 286,
                                      "name": "bets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 144,
                                      "src": "2389:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet storage ref))"
                                      }
                                    },
                                    "id": 288,
                                    "indexExpression": {
                                      "id": 287,
                                      "name": "eventId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 252,
                                      "src": "2394:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2389:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$",
                                      "typeString": "mapping(address => struct DecentralizedBetting.Bet storage ref)"
                                    }
                                  },
                                  "id": 291,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 289,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2403:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2407:6:1",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2403:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2389:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$110_storage",
                                    "typeString": "struct DecentralizedBetting.Bet storage ref"
                                  }
                                },
                                "id": 292,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2415:6:1",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 107,
                                "src": "2389:32:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2425:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2389:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "557365722068617320616c726561647920706c616365642061206265742e",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2428:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96913544ff29fe8a60e7cae7a4daaed83d4e1a5a149a55fc3f7b64553246f3ee",
                                "typeString": "literal_string \"User has already placed a bet.\""
                              },
                              "value": "User has already placed a bet."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_96913544ff29fe8a60e7cae7a4daaed83d4e1a5a149a55fc3f7b64553246f3ee",
                                "typeString": "literal_string \"User has already placed a bet.\""
                              }
                            ],
                            "id": 285,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2381:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2381:80:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 297,
                        "nodeType": "ExpressionStatement",
                        "src": "2381:80:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 299,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "2479:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 301,
                                  "indexExpression": {
                                    "id": 300,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 252,
                                    "src": "2486:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2479:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$125_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 302,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2495:2:1",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 112,
                                "src": "2479:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2501:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2479:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206576656e742049442e",
                              "id": 305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2504:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d",
                                "typeString": "literal_string \"Invalid event ID.\""
                              },
                              "value": "Invalid event ID."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d",
                                "typeString": "literal_string \"Invalid event ID.\""
                              }
                            ],
                            "id": 298,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2471:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2471:53:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 307,
                        "nodeType": "ExpressionStatement",
                        "src": "2471:53:1"
                      },
                      {
                        "expression": {
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 308,
                                "name": "bets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 144,
                                "src": "2535:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet storage ref))"
                                }
                              },
                              "id": 312,
                              "indexExpression": {
                                "id": 309,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "2540:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2535:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$",
                                "typeString": "mapping(address => struct DecentralizedBetting.Bet storage ref)"
                              }
                            },
                            "id": 313,
                            "indexExpression": {
                              "expression": {
                                "id": 310,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2549:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2553:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2549:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2535:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$110_storage",
                              "typeString": "struct DecentralizedBetting.Bet storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 315,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "2589:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 316,
                                "name": "prediction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 254,
                                "src": "2621:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 314,
                              "name": "Bet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "2563:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Bet_$110_storage_ptr_$",
                                "typeString": "type(struct DecentralizedBetting.Bet storage pointer)"
                              }
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "2581:6:1",
                              "2609:10:1"
                            ],
                            "names": [
                              "amount",
                              "prediction"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2563:79:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$110_memory_ptr",
                              "typeString": "struct DecentralizedBetting.Bet memory"
                            }
                          },
                          "src": "2535:107:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$110_storage",
                            "typeString": "struct DecentralizedBetting.Bet storage ref"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "2535:107:1"
                      },
                      {
                        "expression": {
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 320,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "2653:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 322,
                              "indexExpression": {
                                "id": 321,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "2660:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2653:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$125_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2669:8:1",
                            "memberName": "totalPot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 120,
                            "src": "2653:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 324,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "2681:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2653:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 326,
                        "nodeType": "ExpressionStatement",
                        "src": "2653:34:1"
                      },
                      {
                        "condition": {
                          "id": 327,
                          "name": "prediction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "2701:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 336,
                        "nodeType": "IfStatement",
                        "src": "2697:77:1",
                        "trueBody": {
                          "id": 335,
                          "nodeType": "Block",
                          "src": "2713:61:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 328,
                                      "name": "events",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 137,
                                      "src": "2727:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                        "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                      }
                                    },
                                    "id": 330,
                                    "indexExpression": {
                                      "id": 329,
                                      "name": "eventId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 252,
                                      "src": "2734:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2727:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Event_$125_storage",
                                      "typeString": "struct DecentralizedBetting.Event storage ref"
                                    }
                                  },
                                  "id": 331,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2743:10:1",
                                  "memberName": "winningPot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 122,
                                  "src": "2727:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 332,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 256,
                                  "src": "2757:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2727:36:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 334,
                              "nodeType": "ExpressionStatement",
                              "src": "2727:36:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "1a38cac6",
                  "id": 338,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 259,
                          "name": "eventId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "2163:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 260,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 258,
                        "name": "eventNotResolved",
                        "nameLocations": [
                          "2146:16:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 208,
                        "src": "2146:16:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2146:25:1"
                    }
                  ],
                  "name": "placeBet",
                  "nameLocation": "2078:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "2095:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "2087:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2087:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "prediction",
                        "nameLocation": "2109:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "2104:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2104:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2129:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "2121:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2121:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2086:50:1"
                  },
                  "returnParameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2172:0:1"
                  },
                  "scope": 546,
                  "src": "2069:711:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 386,
                    "nodeType": "Block",
                    "src": "2860:469:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 347,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "2878:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 349,
                                  "indexExpression": {
                                    "id": 348,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 340,
                                    "src": "2885:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2878:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$125_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 350,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2894:2:1",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 112,
                                "src": "2878:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2900:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2878:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206576656e742049442e",
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2903:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d",
                                "typeString": "literal_string \"Invalid event ID.\""
                              },
                              "value": "Invalid event ID."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d",
                                "typeString": "literal_string \"Invalid event ID.\""
                              }
                            ],
                            "id": 346,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2870:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2870:53:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 355,
                        "nodeType": "ExpressionStatement",
                        "src": "2870:53:1"
                      },
                      {
                        "assignments": [
                          357,
                          359
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 357,
                            "mutability": "mutable",
                            "name": "outcome",
                            "nameLocation": "3078:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 386,
                            "src": "3073:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 356,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3073:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 359,
                            "mutability": "mutable",
                            "name": "determined",
                            "nameLocation": "3092:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 386,
                            "src": "3087:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 358,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3087:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 366,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 364,
                              "name": "eventId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "3160:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 361,
                                  "name": "socialOracleAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 146,
                                  "src": "3120:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 360,
                                "name": "ISocialOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "3106:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISocialOracle_$97_$",
                                  "typeString": "type(contract ISocialOracle)"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3106:34:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISocialOracle_$97",
                                "typeString": "contract ISocialOracle"
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3141:18:1",
                            "memberName": "getQuestionOutcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 96,
                            "src": "3106:53:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_bool_$",
                              "typeString": "function (uint256) view external returns (bool,bool)"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3106:62:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3072:96:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 368,
                              "name": "determined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "3186:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5175657374696f6e206f7574636f6d65206e6f742064657465726d696e6564207965742e",
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3198:38:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_16e238f7883fb4fb82ddbc44a9f331fb5f3a15ef3e1511f41f4c80bef4c39405",
                                "typeString": "literal_string \"Question outcome not determined yet.\""
                              },
                              "value": "Question outcome not determined yet."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_16e238f7883fb4fb82ddbc44a9f331fb5f3a15ef3e1511f41f4c80bef4c39405",
                                "typeString": "literal_string \"Question outcome not determined yet.\""
                              }
                            ],
                            "id": 367,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3178:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3178:59:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 371,
                        "nodeType": "ExpressionStatement",
                        "src": "3178:59:1"
                      },
                      {
                        "expression": {
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 372,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "3248:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 374,
                              "indexExpression": {
                                "id": 373,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 340,
                                "src": "3255:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3248:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$125_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3264:7:1",
                            "memberName": "outcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 116,
                            "src": "3248:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 376,
                            "name": "outcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "3274:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3248:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 378,
                        "nodeType": "ExpressionStatement",
                        "src": "3248:33:1"
                      },
                      {
                        "expression": {
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 379,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "3291:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 381,
                              "indexExpression": {
                                "id": 380,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 340,
                                "src": "3298:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3291:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$125_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3307:8:1",
                            "memberName": "resolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 118,
                            "src": "3291:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3318:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3291:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "3291:31:1"
                      }
                    ]
                  },
                  "functionSelector": "bed524d6",
                  "id": 387,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 343,
                          "name": "eventId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 340,
                          "src": "2851:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 344,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 342,
                        "name": "eventNotResolved",
                        "nameLocations": [
                          "2834:16:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 208,
                        "src": "2834:16:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2834:25:1"
                    }
                  ],
                  "name": "resolveEvent",
                  "nameLocation": "2795:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "2816:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "2808:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2807:17:1"
                  },
                  "returnParameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2860:0:1"
                  },
                  "scope": 546,
                  "src": "2786:543:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 500,
                    "nodeType": "Block",
                    "src": "3385:1240:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 393,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 137,
                                  "src": "3403:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                    "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                  }
                                },
                                "id": 395,
                                "indexExpression": {
                                  "id": 394,
                                  "name": "eventId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 389,
                                  "src": "3410:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3403:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Event_$125_storage",
                                  "typeString": "struct DecentralizedBetting.Event storage ref"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3419:8:1",
                              "memberName": "resolved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 118,
                              "src": "3403:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4576656e7420686173206e6f74206265656e207265736f6c7665642e",
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3429:30:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c2a178c9284e5d0a5c9fbf1b3a7f27d86500c02009f06d49123410a5e03b3a1d",
                                "typeString": "literal_string \"Event has not been resolved.\""
                              },
                              "value": "Event has not been resolved."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c2a178c9284e5d0a5c9fbf1b3a7f27d86500c02009f06d49123410a5e03b3a1d",
                                "typeString": "literal_string \"Event has not been resolved.\""
                              }
                            ],
                            "id": 392,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3395:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3395:65:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 399,
                        "nodeType": "ExpressionStatement",
                        "src": "3395:65:1"
                      },
                      {
                        "assignments": [
                          402
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 402,
                            "mutability": "mutable",
                            "name": "bet",
                            "nameLocation": "3482:3:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 500,
                            "src": "3470:15:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$110_storage_ptr",
                              "typeString": "struct DecentralizedBetting.Bet"
                            },
                            "typeName": {
                              "id": 401,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 400,
                                "name": "Bet",
                                "nameLocations": [
                                  "3470:3:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 110,
                                "src": "3470:3:1"
                              },
                              "referencedDeclaration": 110,
                              "src": "3470:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$110_storage_ptr",
                                "typeString": "struct DecentralizedBetting.Bet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 409,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 403,
                              "name": "bets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "3488:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet storage ref))"
                              }
                            },
                            "id": 405,
                            "indexExpression": {
                              "id": 404,
                              "name": "eventId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3493:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3488:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$110_storage_$",
                              "typeString": "mapping(address => struct DecentralizedBetting.Bet storage ref)"
                            }
                          },
                          "id": 408,
                          "indexExpression": {
                            "expression": {
                              "id": 406,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3502:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3506:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3502:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3488:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$110_storage",
                            "typeString": "struct DecentralizedBetting.Bet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3470:43:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 411,
                                  "name": "bet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 402,
                                  "src": "3531:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$110_storage_ptr",
                                    "typeString": "struct DecentralizedBetting.Bet storage pointer"
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3535:6:1",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 107,
                                "src": "3531:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3544:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3531:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5573657220686173206e6f2062657420746f20636c61696d2e",
                              "id": 415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3547:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_40d556fd9e2a3fa92702df8f90e763972d93be83403bff576df4ecf8e3433fba",
                                "typeString": "literal_string \"User has no bet to claim.\""
                              },
                              "value": "User has no bet to claim."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_40d556fd9e2a3fa92702df8f90e763972d93be83403bff576df4ecf8e3433fba",
                                "typeString": "literal_string \"User has no bet to claim.\""
                              }
                            ],
                            "id": 410,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3523:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3523:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "3523:52:1"
                      },
                      {
                        "assignments": [
                          419
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 419,
                            "mutability": "mutable",
                            "name": "winnings",
                            "nameLocation": "3594:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 500,
                            "src": "3586:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 418,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3586:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 421,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3605:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3586:20:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 422,
                              "name": "bet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "3621:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$110_storage_ptr",
                                "typeString": "struct DecentralizedBetting.Bet storage pointer"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3625:10:1",
                            "memberName": "prediction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 109,
                            "src": "3621:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 424,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "3639:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 426,
                              "indexExpression": {
                                "id": 425,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 389,
                                "src": "3646:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3639:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$125_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3655:7:1",
                            "memberName": "outcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 116,
                            "src": "3639:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3621:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 498,
                          "nodeType": "Block",
                          "src": "4520:99:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 492,
                                    "name": "bet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 402,
                                    "src": "4594:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bet_$110_storage_ptr",
                                      "typeString": "struct DecentralizedBetting.Bet storage pointer"
                                    }
                                  },
                                  "id": 494,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4598:6:1",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 107,
                                  "src": "4594:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4607:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4594:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 497,
                              "nodeType": "ExpressionStatement",
                              "src": "4594:14:1"
                            }
                          ]
                        },
                        "id": 499,
                        "nodeType": "IfStatement",
                        "src": "3617:1002:1",
                        "trueBody": {
                          "id": 491,
                          "nodeType": "Block",
                          "src": "3664:850:1",
                          "statements": [
                            {
                              "assignments": [
                                430
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 430,
                                  "mutability": "mutable",
                                  "name": "totalPot",
                                  "nameLocation": "3744:8:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 491,
                                  "src": "3736:16:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 429,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3736:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 435,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 431,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "3755:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 433,
                                  "indexExpression": {
                                    "id": 432,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 389,
                                    "src": "3762:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3755:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$125_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 434,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3771:8:1",
                                "memberName": "totalPot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 120,
                                "src": "3755:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3736:43:1"
                            },
                            {
                              "assignments": [
                                437
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 437,
                                  "mutability": "mutable",
                                  "name": "winningPot",
                                  "nameLocation": "3801:10:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 491,
                                  "src": "3793:18:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 436,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3793:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 442,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 438,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "3814:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 440,
                                  "indexExpression": {
                                    "id": 439,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 389,
                                    "src": "3821:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3814:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$125_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 441,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3830:10:1",
                                "memberName": "winningPot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 122,
                                "src": "3814:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3793:47:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 443,
                                  "name": "winningPot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 437,
                                  "src": "3858:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3871:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3858:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 457,
                              "nodeType": "IfStatement",
                              "src": "3854:139:1",
                              "trueBody": {
                                "id": 456,
                                "nodeType": "Block",
                                "src": "3874:119:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 454,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 446,
                                        "name": "winnings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 419,
                                        "src": "3931:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 453,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 450,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 447,
                                                  "name": "bet",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 402,
                                                  "src": "3943:3:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Bet_$110_storage_ptr",
                                                    "typeString": "struct DecentralizedBetting.Bet storage pointer"
                                                  }
                                                },
                                                "id": 448,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3947:6:1",
                                                "memberName": "amount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 107,
                                                "src": "3943:10:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 449,
                                                "name": "totalPot",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 430,
                                                "src": "3956:8:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "3943:21:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 451,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "3942:23:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 452,
                                          "name": "winningPot",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 437,
                                          "src": "3968:10:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3942:36:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3931:47:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 455,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3931:47:1"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 458,
                                    "name": "bet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 402,
                                    "src": "4066:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bet_$110_storage_ptr",
                                      "typeString": "struct DecentralizedBetting.Bet storage pointer"
                                    }
                                  },
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4070:6:1",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 107,
                                  "src": "4066:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4079:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4066:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 463,
                              "nodeType": "ExpressionStatement",
                              "src": "4066:14:1"
                            },
                            {
                              "assignments": [
                                465
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 465,
                                  "mutability": "mutable",
                                  "name": "contractTokenBalance",
                                  "nameLocation": "4180:20:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 491,
                                  "src": "4172:28:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 464,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4172:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 473,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 470,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "4234:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DecentralizedBetting_$546",
                                          "typeString": "contract DecentralizedBetting"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DecentralizedBetting_$546",
                                          "typeString": "contract DecentralizedBetting"
                                        }
                                      ],
                                      "id": 469,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4226:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 468,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4226:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4226:13:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 466,
                                    "name": "bettingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "4203:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 467,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4216:9:1",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34,
                                  "src": "4203:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4203:37:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4172:68:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 477,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 475,
                                      "name": "contractTokenBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 465,
                                      "src": "4262:20:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 476,
                                      "name": "winnings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 419,
                                      "src": "4286:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4262:32:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e7420636f6e747261637420746f6b656e2062616c616e636520746f20706179206f75742077696e6e696e67732e",
                                    "id": 478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4296:58:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_1f1378895f958f6daeac352844485658be6102d41c2620eb8751e332f410e0e3",
                                      "typeString": "literal_string \"Insufficient contract token balance to pay out winnings.\""
                                    },
                                    "value": "Insufficient contract token balance to pay out winnings."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_1f1378895f958f6daeac352844485658be6102d41c2620eb8751e332f410e0e3",
                                      "typeString": "literal_string \"Insufficient contract token balance to pay out winnings.\""
                                    }
                                  ],
                                  "id": 474,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4254:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4254:101:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 480,
                              "nodeType": "ExpressionStatement",
                              "src": "4254:101:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 484,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "4449:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 485,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4453:6:1",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "4449:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 486,
                                        "name": "winnings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 419,
                                        "src": "4461:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 482,
                                        "name": "bettingToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 132,
                                        "src": "4427:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$77",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4440:8:1",
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 44,
                                      "src": "4427:21:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4427:43:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f207472616e736665722077696e6e696e67732e",
                                    "id": 488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4472:30:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7d4097a0e02e3d051c0ae94d67f2668e5325d0dbb6d1aff863a329ebbd962933",
                                      "typeString": "literal_string \"Failed to transfer winnings.\""
                                    },
                                    "value": "Failed to transfer winnings."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_7d4097a0e02e3d051c0ae94d67f2668e5325d0dbb6d1aff863a329ebbd962933",
                                      "typeString": "literal_string \"Failed to transfer winnings.\""
                                    }
                                  ],
                                  "id": 481,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4419:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4419:84:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 490,
                              "nodeType": "ExpressionStatement",
                              "src": "4419:84:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "677bd9ff",
                  "id": 501,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimWinnings",
                  "nameLocation": "3345:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 389,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "3367:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 501,
                        "src": "3359:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3359:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3358:17:1"
                  },
                  "returnParameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3385:0:1"
                  },
                  "scope": 546,
                  "src": "3336:1289:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "4696:79:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 508,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "4706:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 510,
                              "indexExpression": {
                                "id": 509,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "4713:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4706:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$125_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4722:13:1",
                            "memberName": "emergencyStop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 124,
                            "src": "4706:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4738:30:1",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 512,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 137,
                                  "src": "4739:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$125_storage_$",
                                    "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                  }
                                },
                                "id": 514,
                                "indexExpression": {
                                  "id": 513,
                                  "name": "eventId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "4746:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4739:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Event_$125_storage",
                                  "typeString": "struct DecentralizedBetting.Event storage ref"
                                }
                              },
                              "id": 515,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4755:13:1",
                              "memberName": "emergencyStop",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 124,
                              "src": "4739:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4706:62:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "4706:62:1"
                      }
                    ]
                  },
                  "functionSelector": "8822e6fd",
                  "id": 520,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 506,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 505,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4686:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "4686:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4686:9:1"
                    }
                  ],
                  "name": "toggleEmergencyStop",
                  "nameLocation": "4640:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "4668:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "4660:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4660:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4659:17:1"
                  },
                  "returnParameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4696:0:1"
                  },
                  "scope": 546,
                  "src": "4631:144:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 544,
                    "nodeType": "Block",
                    "src": "4820:157:1",
                    "statements": [
                      {
                        "assignments": [
                          526
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 526,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "4838:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 544,
                            "src": "4830:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 525,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4830:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 534,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 531,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4878:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DecentralizedBetting_$546",
                                    "typeString": "contract DecentralizedBetting"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DecentralizedBetting_$546",
                                    "typeString": "contract DecentralizedBetting"
                                  }
                                ],
                                "id": 530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4870:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 529,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4870:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4870:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 527,
                              "name": "bettingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "4847:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4860:9:1",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "4847:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4847:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4830:54:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 538,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "4924:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 539,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 526,
                                  "src": "4931:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 536,
                                  "name": "bettingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "4902:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$77",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4915:8:1",
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "4902:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4902:36:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f207472616e7366657220746f6b656e732e",
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4940:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c2605e1b045afb947ac1141198e08cac2c988860907302569f029bd11f8e418f",
                                "typeString": "literal_string \"Failed to transfer tokens.\""
                              },
                              "value": "Failed to transfer tokens."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c2605e1b045afb947ac1141198e08cac2c988860907302569f029bd11f8e418f",
                                "typeString": "literal_string \"Failed to transfer tokens.\""
                              }
                            ],
                            "id": 535,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4894:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4894:75:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 543,
                        "nodeType": "ExpressionStatement",
                        "src": "4894:75:1"
                      }
                    ]
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 545,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 523,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 522,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4810:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 193,
                        "src": "4810:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4810:9:1"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "4790:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4798:2:1"
                  },
                  "returnParameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4820:0:1"
                  },
                  "scope": 546,
                  "src": "4781:196:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 547,
              "src": "402:4577:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:4948:1"
        },
        "id": 1
      }
    },
    "contracts": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"
        }
      },
      "contracts/DecentralizedBetting.sol": {
        "DecentralizedBetting": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_socialOracleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_matchNFTAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_bettingTokenAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "bets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "prediction",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "bettingToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                }
              ],
              "name": "claimWinnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "createEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "events",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "outcome",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "resolved",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "totalPot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "winningPot",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "emergencyStop",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "matchNFTAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "prediction",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "placeBet",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                }
              ],
              "name": "resolveEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "socialOracleAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                }
              ],
              "name": "toggleEmergencyStop",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 174,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_addresst_address_fromMemory": {
                  "entryPoint": 189,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "allocate_memory": {
                  "entryPoint": 116,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 141,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constructor_DecentralizedBetting": {
                  "entryPoint": 436,
                  "id": 181,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 338,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 327,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 305,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_DecentralizedBetting": {
                  "entryPoint": 244,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 3
                },
                "finalize_allocation": {
                  "entryPoint": 76,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 54,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 397,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 284,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_address_to_address": {
                  "entryPoint": 349,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_contract_IERC20_to_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint256_to_uint256": {
                  "entryPoint": 408,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 156,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523462000031576200001f62000018620000f4565b91620001b4565b6040516112a86200020b82396112a890f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160a01b031690565b90565b6001600160a01b038116036200003157565b905051906200008b826200009c565b9091606082840312620000315762000099620000da8484620000ae565b936040620000ec8260208701620000ae565b9401620000ae565b62000117620014b3803803806200010b8162000074565b928339810190620000bd565b909192565b906001600160a01b03905b9181191691161790565b62000099906200008d906001600160a01b031682565b620000999062000131565b620000999062000147565b906200017162000099620001799262000152565b82546200011c565b9055565b6200009962000099620000999290565b906000199062000127565b90620001ac6200009962000179926200017d565b82546200018d565b91620001fc6200020292620001f46200008b95620001d43360006200015d565b620001ec620001e460016200017d565b600162000198565b60056200015d565b60066200015d565b62000152565b60026200015d56fe6080604052600436101561001257600080fd5b60003560e01c80630b791430146100d25780631a38cac6146100cd57806330658198146100c85780633ccfd60b146100c357806343425e88146100be578063677bd9ff146100b95780638822e6fd146100b45780638da5cb5b146100af578063977d996d146100aa5780639a2e8240146100a5578063bed524d6146100a05763f644b3bb036100e0576104bc565b61043e565b610423565b6103ff565b6103e4565b6103c1565b6103a9565b610382565b61031f565b6102f8565b61028a565b61020d565b805b036100e057565b600080fd5b905035906100f2826100d7565b565b906020828203126100e057610108916100e5565b90565b6101086101086101089290565b906101229061010b565b600052602052604060002090565b6101089081565b6101089054610130565b610108905b60ff1690565b6101089054610141565b6101089060081c610146565b6101089054610156565b610177906003610118565b61018081610137565b9161018d60018301610137565b9161019a6002820161014c565b916101a760028301610162565b916101b460038201610137565b9161010860056101c660048501610137565b930161014c565b9052565b90815260e08101979695909490939092909160208601521515604085015215156060840152608083015260a082015260c0016100f29115159052565b346100e0576102416102286102233660046100f4565b61016c565b9361023897959793919360405190565b978897886101d1565b0390f35b8015156100d9565b905035906100f282610245565b90916060828403126100e05761010861027384846100e5565b936040610283826020870161024d565b94016100e5565b346100e0576102a361029d36600461025a565b916109be565b604051005b60009103126100e057565b610108916008021c5b6001600160a01b031690565b9061010891546102b3565b610108600060056102c8565b6101cd906102bc565b6020810192916100f291906102df565b346100e0576103083660046102a8565b6102416103136102d3565b604051918291826102e8565b346100e05761032f3660046102a8565b6102a3610bd8565b610108600060026102c8565b610108906102bc906001600160a01b031682565b61010890610343565b61010890610357565b6101cd90610360565b6020810192916100f29190610369565b346100e0576103923660046102a8565b61024161039d610337565b60405191829182610372565b346100e0576102a36103bc3660046100f4565b610d6e565b346100e0576102a36103d43660046100f4565b610f90565b6101086000806102c8565b346100e0576103f43660046102a8565b6102416103136103d9565b346100e0576102a36104123660046100f4565b610fd1565b610108600060066102c8565b346100e0576104333660046102a8565b610241610313610417565b346100e0576102a36104513660046100f4565b611269565b6100d9816102bc565b905035906100f282610456565b91906040838203126100e05761010890602061048882866100e5565b940161045f565b9061012290610360565b906104a86104ad926004610118565b61048f565b9061010860016101c684610137565b346100e0576104d56104cf36600461046c565b90610499565b906102416104e260405190565b92839283908152901515602082015260400190565b156104fe57565b60405162461bcd60e51b815260206004820152601860248201527f4576656e7420686173206265656e207265736f6c7665642e00000000000000006044820152606490fd5b906100f2929161056e610569610565600261055f856003610118565b01610162565b1590565b6104f7565b610819565b1561057a57565b60405162461bcd60e51b815260206004820152602160248201527f42657474696e672069732074656d706f726172696c792073757370656e6465646044820152601760f91b6064820152608490fd5b610108906102bc565b61010890546105c9565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761061457604052565b6105dc565b905051906100f282610245565b906020828203126100e05761010891610619565b6040906106646100f2949695939661065a606084019860008501906102df565b60208301906102df565b0152565b6040513d6000823e3d90fd5b1561067b57565b60405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f207472616e736665722062657420746f6b656e732e00006044820152606490fd5b156106c757565b60405162461bcd60e51b815260206004820152601e60248201527f557365722068617320616c726561647920706c616365642061206265742e00006044820152606490fd5b1561071357565b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21032bb32b73a1024a21760791b6044820152606490fd5b906100f261075960405190565b92836105f2565b610108604061074c565b90600019905b9181191691161790565b9061078a6101086107919261010b565b825461076a565b9055565b9060ff90610770565b151590565b906107b361010861079192151590565b8254610795565b60016107e060206100f2946107d96107d3600083015190565b8661077a565b0151151590565b91016107a3565b906100f2916107ba565b634e487b7160e01b600052601160045260246000fd5b9190820180921161081457565b6107f1565b6003929161083d61083861056560056108328689610118565b0161014c565b610573565b61088960208461085561085060026105d2565b610360565b61085e30610360565b600061086960405190565b80968195829461087d6323b872dd60e01b90565b8452336004850161063a565b03925af180156109b9576108a59160009161098a575b50610674565b6004906108e16108ca60006108c46108bd8787610118565b339061048f565b01610137565b6108db6108d7600061010b565b9190565b146106c0565b6109076108f360006108c48689610118565b6109006108d7600061010b565b141561070c565b610934610912610760565b61091a868252565b821515602082015261092f6108bd8686610118565b6107e7565b61095b856109428582610118565b016109558661095083610137565b610807565b9061077a565b610966575b50505050565b6109766109559261098195610118565b019161095083610137565b38808080610960565b6109ac915060203d6020116109b2575b6109a481836105f2565b810190610626565b3861089f565b503d61099a565b610668565b906100f29291610543565b156109d057565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b6064820152608490fd5b610a44610a35610a3060006105d2565b6102bc565b610a3e336102bc565b146109c9565b6100f2610ad4565b905051906100f2826100d7565b906020828203126100e05761010891610a4c565b9160206100f2929493610664604082019660008301906102df565b15610a8f57565b60405162461bcd60e51b815260206004820152601a60248201527f4661696c656420746f207472616e7366657220746f6b656e732e0000000000006044820152606490fd5b610b146020610ae661085060026105d2565b610aef30610360565b90610af960405190565b938492839182916370a0823160e01b5b8352600483016102e8565b03915afa9081156109b957610b7091602091600091610bab575b50610b3c61085060026105d2565b610b4660006105d2565b6000610b5160405190565b809681958294610b6563a9059cbb60e01b90565b845260048401610a6d565b03925af180156109b9576100f291600091610b8c575b50610a88565b610ba5915060203d6020116109b2576109a481836105f2565b38610b86565b610bcb9150823d8411610bd1575b610bc381836105f2565b810190610a59565b38610b2e565b503d610bb9565b6100f2610a20565b15610be757565b60405162461bcd60e51b815260206004820152601c60248201527f4576656e7420686173206e6f74206265656e207265736f6c7665642e000000006044820152606490fd5b15610c3357565b60405162461bcd60e51b815260206004820152601960248201527f5573657220686173206e6f2062657420746f20636c61696d2e000000000000006044820152606490fd5b8181029291811591840414171561081457565b634e487b7160e01b600052601260045260246000fd5b8115610cab570490565b610c8b565b15610cb757565b60405162461bcd60e51b815260206004820152603860248201527f496e73756666696369656e7420636f6e747261637420746f6b656e2062616c6160448201527f6e636520746f20706179206f75742077696e6e696e67732e00000000000000006064820152608490fd5b15610d2957565b60405162461bcd60e51b815260206004820152601c60248201527f4661696c656420746f207472616e736665722077696e6e696e67732e000000006044820152606490fd5b600390610d88610d83600261055f8486610118565b610be0565b610d996101086108bd836004610118565b610da281610137565b92610dbb600094610db56108d78761010b565b11610c2c565b610dc48461010b565b92610dd16001840161014c565b610dec610de661079e60026108328688610118565b91151590565b03610f465790610e1460046108c484610e0e856108c4610e6a9a999882610118565b94610118565b90838211610f1b575b5050610e349084610e2d8161010b565b910161077a565b6020610e4361085060026105d2565b610e4c30610360565b90610e5660405190565b948592839182916370a0823160e01b610b09565b03915afa9081156109b957610e90610ec392602094600091610efe575b50821115610cb0565b610e9d61085060026105d2565b90610ea760405190565b948593849283919063a9059cbb60e01b83523360048401610a6d565b03925af180156109b9576100f291600091610edf575b50610d22565b610ef8915060203d6020116109b2576109a481836105f2565b38610ed9565b610f159150853d8711610bd157610bc381836105f2565b38610e87565b82935090610f39610f3e92610f3488610e349601610137565b610c78565b610ca1565b919038610e1d565b5050916100f2920161077a565b6100f290610f67610a35610a3060006105d2565b6100f2906005610f8a610f8261056583610832866003610118565b926003610118565b016107a3565b6100f290610f53565b60001981146108145760010190565b9081526040810192916100f29160200152565b9081526040810192916100f291602001906102df565b610fdb6001610137565b90610fef610fe883610f99565b600161077a565b611006826000611000826003610118565b0161077a565b611017816001611000856003610118565b61102761085061085060056105d2565b803b156100e05761105c60009291839261104060405190565b948593849283919063938cfd6760e01b83528960048401610fa8565b03925af180156109b9576110db575b5061107c61085061085060066105d2565b803b156100e0576110b260009291839261109560405190565b94859384928391906394bf804d60e01b8352339060048401610fbb565b03925af180156109b9576110c35750565b6100f29060006110d381836105f2565b8101906102a8565b6110eb9060006110d381836105f2565b3861106b565b6100f29061110b610569610565600261055f856003610118565b6111af565b91906040838203126100e05761010890602061112c8286610619565b9401610619565b1561113a57565b60405162461bcd60e51b8152602060048201526024808201527f5175657374696f6e206f7574636f6d65206e6f742064657465726d696e6564206044820152633cb2ba1760e11b6064820152608490fd5b9061ff009060081b610770565b906111a861010861079192151590565b825461118b565b60036111c36108f360006108c48585610118565b6111d361085061085060056105d2565b604080516325aaf90560e01b81526004810185905291829060249082905afa80156109b9576100f29360019361122961122e93600295600080919092611234575b5061121e90611133565b85610f8a8585610118565b610118565b01611198565b61121e925061125b915060403d604011611262575b61125381836105f2565b810190611110565b9091611214565b503d611249565b6100f2906110f156fea264697066735822122051f3676ba2dba36d19c8a52a4b71b1101b866bd1fb9245bb77abfd9806499dc864736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x31 JUMPI PUSH3 0x1F PUSH3 0x18 PUSH3 0xF4 JUMP JUMPDEST SWAP2 PUSH3 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A8 PUSH3 0x20B DUP3 CODECOPY PUSH2 0x12A8 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x6E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x36 JUMP JUMPDEST SWAP1 PUSH3 0x8B PUSH3 0x83 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH3 0x31 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x8B DUP3 PUSH3 0x9C JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH3 0x31 JUMPI PUSH3 0x99 PUSH3 0xDA DUP5 DUP5 PUSH3 0xAE JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH3 0xEC DUP3 PUSH1 0x20 DUP8 ADD PUSH3 0xAE JUMP JUMPDEST SWAP5 ADD PUSH3 0xAE JUMP JUMPDEST PUSH3 0x117 PUSH3 0x14B3 DUP1 CODESIZE SUB DUP1 PUSH3 0x10B DUP2 PUSH3 0x74 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xBD JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x8D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x131 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x147 JUMP JUMPDEST SWAP1 PUSH3 0x171 PUSH3 0x99 PUSH3 0x179 SWAP3 PUSH3 0x152 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x11C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x99 PUSH3 0x99 PUSH3 0x99 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH3 0x127 JUMP JUMPDEST SWAP1 PUSH3 0x1AC PUSH3 0x99 PUSH3 0x179 SWAP3 PUSH3 0x17D JUMP JUMPDEST DUP3 SLOAD PUSH3 0x18D JUMP JUMPDEST SWAP2 PUSH3 0x1FC PUSH3 0x202 SWAP3 PUSH3 0x1F4 PUSH3 0x8B SWAP6 PUSH3 0x1D4 CALLER PUSH1 0x0 PUSH3 0x15D JUMP JUMPDEST PUSH3 0x1EC PUSH3 0x1E4 PUSH1 0x1 PUSH3 0x17D JUMP JUMPDEST PUSH1 0x1 PUSH3 0x198 JUMP JUMPDEST PUSH1 0x5 PUSH3 0x15D JUMP JUMPDEST PUSH1 0x6 PUSH3 0x15D JUMP JUMPDEST PUSH3 0x152 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x15D JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB791430 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x1A38CAC6 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x30658198 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x43425E88 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x677BD9FF EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x8822E6FD EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x977D996D EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x9A2E8240 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xBED524D6 EQ PUSH2 0xA0 JUMPI PUSH4 0xF644B3BB SUB PUSH2 0xE0 JUMPI PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0xE0 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0xD7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP2 PUSH2 0xE5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x108 PUSH2 0x108 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x122 SWAP1 PUSH2 0x10B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x108 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x108 SWAP1 SLOAD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x108 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 SWAP1 SLOAD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH1 0x8 SHR PUSH2 0x146 JUMP JUMPDEST PUSH2 0x108 SWAP1 SLOAD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x177 SWAP1 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x137 JUMP JUMPDEST SWAP2 PUSH2 0x18D PUSH1 0x1 DUP4 ADD PUSH2 0x137 JUMP JUMPDEST SWAP2 PUSH2 0x19A PUSH1 0x2 DUP3 ADD PUSH2 0x14C JUMP JUMPDEST SWAP2 PUSH2 0x1A7 PUSH1 0x2 DUP4 ADD PUSH2 0x162 JUMP JUMPDEST SWAP2 PUSH2 0x1B4 PUSH1 0x3 DUP3 ADD PUSH2 0x137 JUMP JUMPDEST SWAP2 PUSH2 0x108 PUSH1 0x5 PUSH2 0x1C6 PUSH1 0x4 DUP6 ADD PUSH2 0x137 JUMP JUMPDEST SWAP4 ADD PUSH2 0x14C JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD SWAP8 SWAP7 SWAP6 SWAP1 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xF2 SWAP2 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x241 PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x16C JUMP JUMPDEST SWAP4 PUSH2 0x238 SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x1D1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xD9 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0x245 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 PUSH2 0x273 DUP5 DUP5 PUSH2 0xE5 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x283 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x24D JUMP JUMPDEST SWAP5 ADD PUSH2 0xE5 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x25A JUMP JUMPDEST SWAP2 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xE0 JUMPI JUMP JUMPDEST PUSH2 0x108 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x108 SWAP2 SLOAD PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x0 PUSH1 0x5 PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x1CD SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x313 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2E8 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x0 PUSH1 0x2 PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x2BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x1CD SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x39D PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x372 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xD6E JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x0 DUP1 PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x313 PUSH2 0x3D9 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x0 PUSH1 0x6 PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x313 PUSH2 0x417 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1269 JUMP JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0x2BC JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0x456 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP1 PUSH1 0x20 PUSH2 0x488 DUP3 DUP7 PUSH2 0xE5 JUMP JUMPDEST SWAP5 ADD PUSH2 0x45F JUMP JUMPDEST SWAP1 PUSH2 0x122 SWAP1 PUSH2 0x360 JUMP JUMPDEST SWAP1 PUSH2 0x4A8 PUSH2 0x4AD SWAP3 PUSH1 0x4 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST SWAP1 PUSH2 0x108 PUSH1 0x1 PUSH2 0x1C6 DUP5 PUSH2 0x137 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x4D5 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x46C JUMP JUMPDEST SWAP1 PUSH2 0x499 JUMP JUMPDEST SWAP1 PUSH2 0x241 PUSH2 0x4E2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 SWAP1 DUP2 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4FE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420686173206265656E207265736F6C7665642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xF2 SWAP3 SWAP2 PUSH2 0x56E PUSH2 0x569 PUSH2 0x565 PUSH1 0x2 PUSH2 0x55F DUP6 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x162 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST ISZERO PUSH2 0x57A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E672069732074656D706F726172696C792073757370656E646564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x108 SWAP1 SLOAD PUSH2 0x5C9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x614 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP2 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x664 PUSH2 0xF2 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x65A PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x67B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E736665722062657420746F6B656E732E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x6C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C726561647920706C616365642061206265742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x713 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x24B73B30B634B21032BB32B73A1024A217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xF2 PUSH2 0x759 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x40 PUSH2 0x74C JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x78A PUSH2 0x108 PUSH2 0x791 SWAP3 PUSH2 0x10B JUMP JUMPDEST DUP3 SLOAD PUSH2 0x76A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x770 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x7B3 PUSH2 0x108 PUSH2 0x791 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x795 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x7E0 PUSH1 0x20 PUSH2 0xF2 SWAP5 PUSH2 0x7D9 PUSH2 0x7D3 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x77A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x7A3 JUMP JUMPDEST SWAP1 PUSH2 0xF2 SWAP2 PUSH2 0x7BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x814 JUMPI JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x3 SWAP3 SWAP2 PUSH2 0x83D PUSH2 0x838 PUSH2 0x565 PUSH1 0x5 PUSH2 0x832 DUP7 DUP10 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH2 0x889 PUSH1 0x20 DUP5 PUSH2 0x855 PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x85E ADDRESS PUSH2 0x360 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH2 0x87D PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD PUSH2 0x63A JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0x8A5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x98A JUMPI JUMPDEST POP PUSH2 0x674 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x8E1 PUSH2 0x8CA PUSH1 0x0 PUSH2 0x8C4 PUSH2 0x8BD DUP8 DUP8 PUSH2 0x118 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x48F JUMP JUMPDEST ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x8DB PUSH2 0x8D7 PUSH1 0x0 PUSH2 0x10B JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x8F3 PUSH1 0x0 PUSH2 0x8C4 DUP7 DUP10 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x900 PUSH2 0x8D7 PUSH1 0x0 PUSH2 0x10B JUMP JUMPDEST EQ ISZERO PUSH2 0x70C JUMP JUMPDEST PUSH2 0x934 PUSH2 0x912 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x91A DUP7 DUP3 MSTORE JUMP JUMPDEST DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x92F PUSH2 0x8BD DUP7 DUP7 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x95B DUP6 PUSH2 0x942 DUP6 DUP3 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x955 DUP7 PUSH2 0x950 DUP4 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x966 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x976 PUSH2 0x955 SWAP3 PUSH2 0x981 SWAP6 PUSH2 0x118 JUMP JUMPDEST ADD SWAP2 PUSH2 0x950 DUP4 PUSH2 0x137 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x960 JUMP JUMPDEST PUSH2 0x9AC SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9B2 JUMPI JUMPDEST PUSH2 0x9A4 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x626 JUMP JUMPDEST CODESIZE PUSH2 0x89F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x99A JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST SWAP1 PUSH2 0xF2 SWAP3 SWAP2 PUSH2 0x543 JUMP JUMPDEST ISZERO PUSH2 0x9D0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xA44 PUSH2 0xA35 PUSH2 0xA30 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xA3E CALLER PUSH2 0x2BC JUMP JUMPDEST EQ PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xAD4 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0xD7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP2 PUSH2 0xA4C JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xF2 SWAP3 SWAP5 SWAP4 PUSH2 0x664 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST ISZERO PUSH2 0xA8F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E732E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xB14 PUSH1 0x20 PUSH2 0xAE6 PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xAEF ADDRESS PUSH2 0x360 JUMP JUMPDEST SWAP1 PUSH2 0xAF9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x2E8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xB70 SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xBAB JUMPI JUMPDEST POP PUSH2 0xB3C PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xB46 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB51 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH2 0xB65 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xA6D JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB8C JUMPI JUMPDEST POP PUSH2 0xA88 JUMP JUMPDEST PUSH2 0xBA5 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9B2 JUMPI PUSH2 0x9A4 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST CODESIZE PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xBCB SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xBD1 JUMPI JUMPDEST PUSH2 0xBC3 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA59 JUMP JUMPDEST CODESIZE PUSH2 0xB2E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xA20 JUMP JUMPDEST ISZERO PUSH2 0xBE7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420686173206E6F74206265656E207265736F6C7665642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xC33 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220686173206E6F2062657420746F20636C61696D2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x814 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xCAB JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0xC8B JUMP JUMPDEST ISZERO PUSH2 0xCB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E747261637420746F6B656E2062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E636520746F20706179206F75742077696E6E696E67732E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xD29 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E736665722077696E6E696E67732E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 SWAP1 PUSH2 0xD88 PUSH2 0xD83 PUSH1 0x2 PUSH2 0x55F DUP5 DUP7 PUSH2 0x118 JUMP JUMPDEST PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0xD99 PUSH2 0x108 PUSH2 0x8BD DUP4 PUSH1 0x4 PUSH2 0x118 JUMP JUMPDEST PUSH2 0xDA2 DUP2 PUSH2 0x137 JUMP JUMPDEST SWAP3 PUSH2 0xDBB PUSH1 0x0 SWAP5 PUSH2 0xDB5 PUSH2 0x8D7 DUP8 PUSH2 0x10B JUMP JUMPDEST GT PUSH2 0xC2C JUMP JUMPDEST PUSH2 0xDC4 DUP5 PUSH2 0x10B JUMP JUMPDEST SWAP3 PUSH2 0xDD1 PUSH1 0x1 DUP5 ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0xDEC PUSH2 0xDE6 PUSH2 0x79E PUSH1 0x2 PUSH2 0x832 DUP7 DUP9 PUSH2 0x118 JUMP JUMPDEST SWAP2 ISZERO ISZERO SWAP1 JUMP JUMPDEST SUB PUSH2 0xF46 JUMPI SWAP1 PUSH2 0xE14 PUSH1 0x4 PUSH2 0x8C4 DUP5 PUSH2 0xE0E DUP6 PUSH2 0x8C4 PUSH2 0xE6A SWAP11 SWAP10 SWAP9 DUP3 PUSH2 0x118 JUMP JUMPDEST SWAP5 PUSH2 0x118 JUMP JUMPDEST SWAP1 DUP4 DUP3 GT PUSH2 0xF1B JUMPI JUMPDEST POP POP PUSH2 0xE34 SWAP1 DUP5 PUSH2 0xE2D DUP2 PUSH2 0x10B JUMP JUMPDEST SWAP2 ADD PUSH2 0x77A JUMP JUMPDEST PUSH1 0x20 PUSH2 0xE43 PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xE4C ADDRESS PUSH2 0x360 JUMP JUMPDEST SWAP1 PUSH2 0xE56 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL PUSH2 0xB09 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xE90 PUSH2 0xEC3 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0xEFE JUMPI JUMPDEST POP DUP3 GT ISZERO PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xE9D PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST SWAP1 PUSH2 0xEA7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD PUSH2 0xA6D JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xEDF JUMPI JUMPDEST POP PUSH2 0xD22 JUMP JUMPDEST PUSH2 0xEF8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9B2 JUMPI PUSH2 0x9A4 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST CODESIZE PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF15 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0xBD1 JUMPI PUSH2 0xBC3 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST CODESIZE PUSH2 0xE87 JUMP JUMPDEST DUP3 SWAP4 POP SWAP1 PUSH2 0xF39 PUSH2 0xF3E SWAP3 PUSH2 0xF34 DUP9 PUSH2 0xE34 SWAP7 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xCA1 JUMP JUMPDEST SWAP2 SWAP1 CODESIZE PUSH2 0xE1D JUMP JUMPDEST POP POP SWAP2 PUSH2 0xF2 SWAP3 ADD PUSH2 0x77A JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0xF67 PUSH2 0xA35 PUSH2 0xA30 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x5 PUSH2 0xF8A PUSH2 0xF82 PUSH2 0x565 DUP4 PUSH2 0x832 DUP7 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST SWAP3 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x814 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xF2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xF2 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH2 0xFDB PUSH1 0x1 PUSH2 0x137 JUMP JUMPDEST SWAP1 PUSH2 0xFEF PUSH2 0xFE8 DUP4 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x1006 DUP3 PUSH1 0x0 PUSH2 0x1000 DUP3 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x77A JUMP JUMPDEST PUSH2 0x1017 DUP2 PUSH1 0x1 PUSH2 0x1000 DUP6 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x1027 PUSH2 0x850 PUSH2 0x850 PUSH1 0x5 PUSH2 0x5D2 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xE0 JUMPI PUSH2 0x105C PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH2 0x1040 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x938CFD67 PUSH1 0xE0 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD PUSH2 0xFA8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0x10DB JUMPI JUMPDEST POP PUSH2 0x107C PUSH2 0x850 PUSH2 0x850 PUSH1 0x6 PUSH2 0x5D2 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xE0 JUMPI PUSH2 0x10B2 PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH2 0x1095 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x94BF804D PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 PUSH1 0x4 DUP5 ADD PUSH2 0xFBB JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0x10C3 JUMPI POP JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x0 PUSH2 0x10D3 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x10EB SWAP1 PUSH1 0x0 PUSH2 0x10D3 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST CODESIZE PUSH2 0x106B JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x110B PUSH2 0x569 PUSH2 0x565 PUSH1 0x2 PUSH2 0x55F DUP6 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x11AF JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP1 PUSH1 0x20 PUSH2 0x112C DUP3 DUP7 PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD PUSH2 0x619 JUMP JUMPDEST ISZERO PUSH2 0x113A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5175657374696F6E206F7574636F6D65206E6F742064657465726D696E656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3CB2BA17 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x770 JUMP JUMPDEST SWAP1 PUSH2 0x11A8 PUSH2 0x108 PUSH2 0x791 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x118B JUMP JUMPDEST PUSH1 0x3 PUSH2 0x11C3 PUSH2 0x8F3 PUSH1 0x0 PUSH2 0x8C4 DUP6 DUP6 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x11D3 PUSH2 0x850 PUSH2 0x850 PUSH1 0x5 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x25AAF905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xF2 SWAP4 PUSH1 0x1 SWAP4 PUSH2 0x1229 PUSH2 0x122E SWAP4 PUSH1 0x2 SWAP6 PUSH1 0x0 DUP1 SWAP2 SWAP1 SWAP3 PUSH2 0x1234 JUMPI JUMPDEST POP PUSH2 0x121E SWAP1 PUSH2 0x1133 JUMP JUMPDEST DUP6 PUSH2 0xF8A DUP6 DUP6 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x121E SWAP3 POP PUSH2 0x125B SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x1262 JUMPI JUMPDEST PUSH2 0x1253 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1110 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1214 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1249 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x10F1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD RETURN PUSH8 0x6BA2DBA36D19C8A5 0x2A 0x4B PUSH18 0xB1101B866BD1FB9245BB77ABFD9806499DC8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "402:4577:1:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;402:4577:1;;;;;;-1:-1:-1;;;;;402:4577:1;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;402:4577:1;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;402:4577:1;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::o;:::-;;-1:-1:-1;;;;;402:4577:1;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;402:4577:1;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;;402:4577:1;;;;;;;;;;:::i;:::-;;;;:::i;1032:307::-;;1245:34;1304:28;1032:307;1193:42;1289:43;1032:307;1140:18;1148:10;1140:18;;:::i;:::-;1168:15;;1182:1;1168:15;:::i;:::-;1182:1;1168:15;:::i;:::-;1193:42;;:::i;:::-;1245:34;;:::i;:::-;1304:28;:::i;:::-;1289:43;;:::i"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 680,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 1119,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 589,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 1574,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_boolt_bool_fromMemory": {
                  "entryPoint": 4368,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_fromMemory": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 1561,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 2636,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 244,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 229,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256_fromMemory": {
                  "entryPoint": 2649,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256t_address": {
                  "entryPoint": 1132,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_uint256t_boolt_uint256": {
                  "entryPoint": 602,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_address": {
                  "entryPoint": 735,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": 1594,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 2669,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_contract_IERC20": {
                  "entryPoint": 873,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_stringliteral": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_0fce": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_16e2": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_16e238f7883fb4fb82ddbc44a9f331fb5f3a15ef3e1511f41f4c80bef4c39405": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_1f13": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_2ce1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_40d5": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_4a43": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_4a43c32c6bd75a941910da7f2376eccfceb77541edab81c68bc9b8ce1daccb3d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_52a1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_7d40": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_7d4097a0e02e3d051c0ae94d67f2668e5325d0dbb6d1aff863a329ebbd962933": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_9691": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_c260": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_c2605e1b045afb947ac1141198e08cac2c988860907302569f029bd11f8e418f": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_c2a1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_d6e1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 744,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_contract_IERC20": {
                  "entryPoint": 882,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_0fce": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_1f13": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_2ce1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_40d5": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_52a1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_c2a1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_address": {
                  "entryPoint": 4027,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 461,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 4008,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_bool_bool_uint256_uint256_bool": {
                  "entryPoint": 465,
                  "id": null,
                  "parameterSlots": 8,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 1868,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_struct_struct_Bet_storage_ptr": {
                  "entryPoint": 1888,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2055,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 3233,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 3192,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IMatchNFT": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_ISocialOracle": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bool_to_bool": {
                  "entryPoint": 1950,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DecentralizedBetting_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_address": {
                  "entryPoint": 864,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IMatchNFT_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_ISocialOracle_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_struct_Bet_storage_to_struct_Bet_ptr": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 855,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IMatchNFT": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_ISocialOracle": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 835,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 267,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_struct_to_storage_from_struct_Bet_to_struct_Bet": {
                  "entryPoint": 1978,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "external_fun_bets": {
                  "entryPoint": 1212,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_bettingToken": {
                  "entryPoint": 898,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_claimWinnings": {
                  "entryPoint": 937,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_createEvent": {
                  "entryPoint": 1023,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_events": {
                  "entryPoint": 525,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_matchNFTAddress": {
                  "entryPoint": 1059,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 996,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_placeBet": {
                  "entryPoint": 650,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_resolveEvent": {
                  "entryPoint": 1086,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_socialOracleAddress": {
                  "entryPoint": 760,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_toggleEmergencyStop": {
                  "entryPoint": 961,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_withdraw": {
                  "entryPoint": 799,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 691,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_1t_bool": {
                  "entryPoint": 342,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_bool": {
                  "entryPoint": 321,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_contract_IERC20": {
                  "entryPoint": 1481,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_uint256": {
                  "entryPoint": 304,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1522,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_claimWinnings": {
                  "entryPoint": 3438,
                  "id": 501,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_createEvent": {
                  "entryPoint": 4049,
                  "id": 250,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_placeBet": {
                  "entryPoint": 2494,
                  "id": 338,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_placeBet_inner": {
                  "entryPoint": 2073,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_resolveEvent": {
                  "entryPoint": 4713,
                  "id": 387,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_resolveEvent_inner": {
                  "entryPoint": 4527,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_toggleEmergencyStop": {
                  "entryPoint": 3984,
                  "id": 520,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_toggleEmergencyStop_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_withdraw": {
                  "entryPoint": 3032,
                  "id": 545,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_withdraw_inner": {
                  "entryPoint": 2772,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "getter_fun_bets": {
                  "entryPoint": 1177,
                  "id": 144,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "getter_fun_bettingToken": {
                  "entryPoint": 823,
                  "id": 132,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_events": {
                  "entryPoint": 364,
                  "id": 137,
                  "parameterSlots": 1,
                  "returnSlots": 7
                },
                "getter_fun_matchNFTAddress": {
                  "entryPoint": 1047,
                  "id": 148,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_owner": {
                  "entryPoint": 985,
                  "id": 127,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_socialOracleAddress": {
                  "entryPoint": 723,
                  "id": 146,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 3993,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_struct_Bet_storage_of_address": {
                  "entryPoint": 1167,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_mapping_address_struct_Bet_storage_of_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_struct_Event_storage_of_uint256": {
                  "entryPoint": 280,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_eventNotResolved": {
                  "entryPoint": 4337,
                  "id": 208,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_eventNotResolved_260": {
                  "entryPoint": 1347,
                  "id": 208,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "modifier_onlyOwner": {
                  "entryPoint": 3923,
                  "id": 193,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_523": {
                  "entryPoint": 2592,
                  "id": 193,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 2033,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 3211,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1500,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 712,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": 354,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_contract_IERC20": {
                  "entryPoint": 1490,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_t_bool": {
                  "entryPoint": 332,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 311,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 1728,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_0fce": {
                  "entryPoint": 2505,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_16e2": {
                  "entryPoint": 4403,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_1f13": {
                  "entryPoint": 3248,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_2ce1": {
                  "entryPoint": 1652,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_40d5": {
                  "entryPoint": 3116,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_4a43": {
                  "entryPoint": 1395,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_52a1": {
                  "entryPoint": 1271,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_7d40": {
                  "entryPoint": 3362,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c260": {
                  "entryPoint": 2696,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c2a1": {
                  "entryPoint": 3040,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_d6e1": {
                  "entryPoint": 1804,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 1640,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_0": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_8_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "store_literal_in_memory_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_16e238f7883fb4fb82ddbc44a9f331fb5f3a15ef3e1511f41f4c80bef4c39405": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_1f1378895f958f6daeac352844485658be6102d41c2620eb8751e332f410e0e3": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_2ce1579c3fe0b1f8ac112c0f9696b22f977ffc3f906cd0d38d66077cfabfdba0": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_40d556fd9e2a3fa92702df8f90e763972d93be83403bff576df4ecf8e3433fba": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_4a43c32c6bd75a941910da7f2376eccfceb77541edab81c68bc9b8ce1daccb3d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_52a1acb2d1a25435bd0079d3441dae800274afaf2e0ac3e6a407b9e6733ed0ed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_7d4097a0e02e3d051c0ae94d67f2668e5325d0dbb6d1aff863a329ebbd962933": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_96913544ff29fe8a60e7cae7a4daaed83d4e1a5a149a55fc3f7b64553246f3ee": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_c2605e1b045afb947ac1141198e08cac2c988860907302569f029bd11f8e418f": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_c2a178c9284e5d0a5c9fbf1b3a7f27d86500c02009f06d49123410a5e03b3a1d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_shift": {
                  "entryPoint": 1898,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 1941,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_1": {
                  "entryPoint": 4491,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_bool_to_bool": {
                  "entryPoint": 4504,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_t_bool": {
                  "entryPoint": 1955,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_struct_Bet_to_struct_Bet": {
                  "entryPoint": 2023,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint256_to_uint256": {
                  "entryPoint": 1914,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 1110,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 581,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 215,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "write_to_memory_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c80630b791430146100d25780631a38cac6146100cd57806330658198146100c85780633ccfd60b146100c357806343425e88146100be578063677bd9ff146100b95780638822e6fd146100b45780638da5cb5b146100af578063977d996d146100aa5780639a2e8240146100a5578063bed524d6146100a05763f644b3bb036100e0576104bc565b61043e565b610423565b6103ff565b6103e4565b6103c1565b6103a9565b610382565b61031f565b6102f8565b61028a565b61020d565b805b036100e057565b600080fd5b905035906100f2826100d7565b565b906020828203126100e057610108916100e5565b90565b6101086101086101089290565b906101229061010b565b600052602052604060002090565b6101089081565b6101089054610130565b610108905b60ff1690565b6101089054610141565b6101089060081c610146565b6101089054610156565b610177906003610118565b61018081610137565b9161018d60018301610137565b9161019a6002820161014c565b916101a760028301610162565b916101b460038201610137565b9161010860056101c660048501610137565b930161014c565b9052565b90815260e08101979695909490939092909160208601521515604085015215156060840152608083015260a082015260c0016100f29115159052565b346100e0576102416102286102233660046100f4565b61016c565b9361023897959793919360405190565b978897886101d1565b0390f35b8015156100d9565b905035906100f282610245565b90916060828403126100e05761010861027384846100e5565b936040610283826020870161024d565b94016100e5565b346100e0576102a361029d36600461025a565b916109be565b604051005b60009103126100e057565b610108916008021c5b6001600160a01b031690565b9061010891546102b3565b610108600060056102c8565b6101cd906102bc565b6020810192916100f291906102df565b346100e0576103083660046102a8565b6102416103136102d3565b604051918291826102e8565b346100e05761032f3660046102a8565b6102a3610bd8565b610108600060026102c8565b610108906102bc906001600160a01b031682565b61010890610343565b61010890610357565b6101cd90610360565b6020810192916100f29190610369565b346100e0576103923660046102a8565b61024161039d610337565b60405191829182610372565b346100e0576102a36103bc3660046100f4565b610d6e565b346100e0576102a36103d43660046100f4565b610f90565b6101086000806102c8565b346100e0576103f43660046102a8565b6102416103136103d9565b346100e0576102a36104123660046100f4565b610fd1565b610108600060066102c8565b346100e0576104333660046102a8565b610241610313610417565b346100e0576102a36104513660046100f4565b611269565b6100d9816102bc565b905035906100f282610456565b91906040838203126100e05761010890602061048882866100e5565b940161045f565b9061012290610360565b906104a86104ad926004610118565b61048f565b9061010860016101c684610137565b346100e0576104d56104cf36600461046c565b90610499565b906102416104e260405190565b92839283908152901515602082015260400190565b156104fe57565b60405162461bcd60e51b815260206004820152601860248201527f4576656e7420686173206265656e207265736f6c7665642e00000000000000006044820152606490fd5b906100f2929161056e610569610565600261055f856003610118565b01610162565b1590565b6104f7565b610819565b1561057a57565b60405162461bcd60e51b815260206004820152602160248201527f42657474696e672069732074656d706f726172696c792073757370656e6465646044820152601760f91b6064820152608490fd5b610108906102bc565b61010890546105c9565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761061457604052565b6105dc565b905051906100f282610245565b906020828203126100e05761010891610619565b6040906106646100f2949695939661065a606084019860008501906102df565b60208301906102df565b0152565b6040513d6000823e3d90fd5b1561067b57565b60405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f207472616e736665722062657420746f6b656e732e00006044820152606490fd5b156106c757565b60405162461bcd60e51b815260206004820152601e60248201527f557365722068617320616c726561647920706c616365642061206265742e00006044820152606490fd5b1561071357565b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21032bb32b73a1024a21760791b6044820152606490fd5b906100f261075960405190565b92836105f2565b610108604061074c565b90600019905b9181191691161790565b9061078a6101086107919261010b565b825461076a565b9055565b9060ff90610770565b151590565b906107b361010861079192151590565b8254610795565b60016107e060206100f2946107d96107d3600083015190565b8661077a565b0151151590565b91016107a3565b906100f2916107ba565b634e487b7160e01b600052601160045260246000fd5b9190820180921161081457565b6107f1565b6003929161083d61083861056560056108328689610118565b0161014c565b610573565b61088960208461085561085060026105d2565b610360565b61085e30610360565b600061086960405190565b80968195829461087d6323b872dd60e01b90565b8452336004850161063a565b03925af180156109b9576108a59160009161098a575b50610674565b6004906108e16108ca60006108c46108bd8787610118565b339061048f565b01610137565b6108db6108d7600061010b565b9190565b146106c0565b6109076108f360006108c48689610118565b6109006108d7600061010b565b141561070c565b610934610912610760565b61091a868252565b821515602082015261092f6108bd8686610118565b6107e7565b61095b856109428582610118565b016109558661095083610137565b610807565b9061077a565b610966575b50505050565b6109766109559261098195610118565b019161095083610137565b38808080610960565b6109ac915060203d6020116109b2575b6109a481836105f2565b810190610626565b3861089f565b503d61099a565b610668565b906100f29291610543565b156109d057565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b6064820152608490fd5b610a44610a35610a3060006105d2565b6102bc565b610a3e336102bc565b146109c9565b6100f2610ad4565b905051906100f2826100d7565b906020828203126100e05761010891610a4c565b9160206100f2929493610664604082019660008301906102df565b15610a8f57565b60405162461bcd60e51b815260206004820152601a60248201527f4661696c656420746f207472616e7366657220746f6b656e732e0000000000006044820152606490fd5b610b146020610ae661085060026105d2565b610aef30610360565b90610af960405190565b938492839182916370a0823160e01b5b8352600483016102e8565b03915afa9081156109b957610b7091602091600091610bab575b50610b3c61085060026105d2565b610b4660006105d2565b6000610b5160405190565b809681958294610b6563a9059cbb60e01b90565b845260048401610a6d565b03925af180156109b9576100f291600091610b8c575b50610a88565b610ba5915060203d6020116109b2576109a481836105f2565b38610b86565b610bcb9150823d8411610bd1575b610bc381836105f2565b810190610a59565b38610b2e565b503d610bb9565b6100f2610a20565b15610be757565b60405162461bcd60e51b815260206004820152601c60248201527f4576656e7420686173206e6f74206265656e207265736f6c7665642e000000006044820152606490fd5b15610c3357565b60405162461bcd60e51b815260206004820152601960248201527f5573657220686173206e6f2062657420746f20636c61696d2e000000000000006044820152606490fd5b8181029291811591840414171561081457565b634e487b7160e01b600052601260045260246000fd5b8115610cab570490565b610c8b565b15610cb757565b60405162461bcd60e51b815260206004820152603860248201527f496e73756666696369656e7420636f6e747261637420746f6b656e2062616c6160448201527f6e636520746f20706179206f75742077696e6e696e67732e00000000000000006064820152608490fd5b15610d2957565b60405162461bcd60e51b815260206004820152601c60248201527f4661696c656420746f207472616e736665722077696e6e696e67732e000000006044820152606490fd5b600390610d88610d83600261055f8486610118565b610be0565b610d996101086108bd836004610118565b610da281610137565b92610dbb600094610db56108d78761010b565b11610c2c565b610dc48461010b565b92610dd16001840161014c565b610dec610de661079e60026108328688610118565b91151590565b03610f465790610e1460046108c484610e0e856108c4610e6a9a999882610118565b94610118565b90838211610f1b575b5050610e349084610e2d8161010b565b910161077a565b6020610e4361085060026105d2565b610e4c30610360565b90610e5660405190565b948592839182916370a0823160e01b610b09565b03915afa9081156109b957610e90610ec392602094600091610efe575b50821115610cb0565b610e9d61085060026105d2565b90610ea760405190565b948593849283919063a9059cbb60e01b83523360048401610a6d565b03925af180156109b9576100f291600091610edf575b50610d22565b610ef8915060203d6020116109b2576109a481836105f2565b38610ed9565b610f159150853d8711610bd157610bc381836105f2565b38610e87565b82935090610f39610f3e92610f3488610e349601610137565b610c78565b610ca1565b919038610e1d565b5050916100f2920161077a565b6100f290610f67610a35610a3060006105d2565b6100f2906005610f8a610f8261056583610832866003610118565b926003610118565b016107a3565b6100f290610f53565b60001981146108145760010190565b9081526040810192916100f29160200152565b9081526040810192916100f291602001906102df565b610fdb6001610137565b90610fef610fe883610f99565b600161077a565b611006826000611000826003610118565b0161077a565b611017816001611000856003610118565b61102761085061085060056105d2565b803b156100e05761105c60009291839261104060405190565b948593849283919063938cfd6760e01b83528960048401610fa8565b03925af180156109b9576110db575b5061107c61085061085060066105d2565b803b156100e0576110b260009291839261109560405190565b94859384928391906394bf804d60e01b8352339060048401610fbb565b03925af180156109b9576110c35750565b6100f29060006110d381836105f2565b8101906102a8565b6110eb9060006110d381836105f2565b3861106b565b6100f29061110b610569610565600261055f856003610118565b6111af565b91906040838203126100e05761010890602061112c8286610619565b9401610619565b1561113a57565b60405162461bcd60e51b8152602060048201526024808201527f5175657374696f6e206f7574636f6d65206e6f742064657465726d696e6564206044820152633cb2ba1760e11b6064820152608490fd5b9061ff009060081b610770565b906111a861010861079192151590565b825461118b565b60036111c36108f360006108c48585610118565b6111d361085061085060056105d2565b604080516325aaf90560e01b81526004810185905291829060249082905afa80156109b9576100f29360019361122961122e93600295600080919092611234575b5061121e90611133565b85610f8a8585610118565b610118565b01611198565b61121e925061125b915060403d604011611262575b61125381836105f2565b810190611110565b9091611214565b503d611249565b6100f2906110f156fea264697066735822122051f3676ba2dba36d19c8a52a4b71b1101b866bd1fb9245bb77abfd9806499dc864736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB791430 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x1A38CAC6 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x30658198 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x43425E88 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x677BD9FF EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x8822E6FD EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x977D996D EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x9A2E8240 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xBED524D6 EQ PUSH2 0xA0 JUMPI PUSH4 0xF644B3BB SUB PUSH2 0xE0 JUMPI PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0xE0 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0xD7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP2 PUSH2 0xE5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x108 PUSH2 0x108 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x122 SWAP1 PUSH2 0x10B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x108 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x108 SWAP1 SLOAD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x108 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 SWAP1 SLOAD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH1 0x8 SHR PUSH2 0x146 JUMP JUMPDEST PUSH2 0x108 SWAP1 SLOAD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x177 SWAP1 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x137 JUMP JUMPDEST SWAP2 PUSH2 0x18D PUSH1 0x1 DUP4 ADD PUSH2 0x137 JUMP JUMPDEST SWAP2 PUSH2 0x19A PUSH1 0x2 DUP3 ADD PUSH2 0x14C JUMP JUMPDEST SWAP2 PUSH2 0x1A7 PUSH1 0x2 DUP4 ADD PUSH2 0x162 JUMP JUMPDEST SWAP2 PUSH2 0x1B4 PUSH1 0x3 DUP3 ADD PUSH2 0x137 JUMP JUMPDEST SWAP2 PUSH2 0x108 PUSH1 0x5 PUSH2 0x1C6 PUSH1 0x4 DUP6 ADD PUSH2 0x137 JUMP JUMPDEST SWAP4 ADD PUSH2 0x14C JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD SWAP8 SWAP7 SWAP6 SWAP1 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xF2 SWAP2 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x241 PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x16C JUMP JUMPDEST SWAP4 PUSH2 0x238 SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x1D1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xD9 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0x245 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 PUSH2 0x273 DUP5 DUP5 PUSH2 0xE5 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x283 DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x24D JUMP JUMPDEST SWAP5 ADD PUSH2 0xE5 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x25A JUMP JUMPDEST SWAP2 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xE0 JUMPI JUMP JUMPDEST PUSH2 0x108 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x108 SWAP2 SLOAD PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x0 PUSH1 0x5 PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x1CD SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x313 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2E8 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x0 PUSH1 0x2 PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x2BC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x1CD SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x39D PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x372 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xD6E JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x0 DUP1 PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x313 PUSH2 0x3D9 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x0 PUSH1 0x6 PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x313 PUSH2 0x417 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x2A3 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1269 JUMP JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0x2BC JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0x456 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP1 PUSH1 0x20 PUSH2 0x488 DUP3 DUP7 PUSH2 0xE5 JUMP JUMPDEST SWAP5 ADD PUSH2 0x45F JUMP JUMPDEST SWAP1 PUSH2 0x122 SWAP1 PUSH2 0x360 JUMP JUMPDEST SWAP1 PUSH2 0x4A8 PUSH2 0x4AD SWAP3 PUSH1 0x4 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST SWAP1 PUSH2 0x108 PUSH1 0x1 PUSH2 0x1C6 DUP5 PUSH2 0x137 JUMP JUMPDEST CALLVALUE PUSH2 0xE0 JUMPI PUSH2 0x4D5 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x46C JUMP JUMPDEST SWAP1 PUSH2 0x499 JUMP JUMPDEST SWAP1 PUSH2 0x241 PUSH2 0x4E2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 SWAP1 DUP2 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4FE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420686173206265656E207265736F6C7665642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xF2 SWAP3 SWAP2 PUSH2 0x56E PUSH2 0x569 PUSH2 0x565 PUSH1 0x2 PUSH2 0x55F DUP6 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x162 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST ISZERO PUSH2 0x57A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E672069732074656D706F726172696C792073757370656E646564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x108 SWAP1 SLOAD PUSH2 0x5C9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x614 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP2 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x664 PUSH2 0xF2 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x65A PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x67B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E736665722062657420746F6B656E732E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x6C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C726561647920706C616365642061206265742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x713 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x24B73B30B634B21032BB32B73A1024A217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xF2 PUSH2 0x759 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x108 PUSH1 0x40 PUSH2 0x74C JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x78A PUSH2 0x108 PUSH2 0x791 SWAP3 PUSH2 0x10B JUMP JUMPDEST DUP3 SLOAD PUSH2 0x76A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x770 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x7B3 PUSH2 0x108 PUSH2 0x791 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x795 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x7E0 PUSH1 0x20 PUSH2 0xF2 SWAP5 PUSH2 0x7D9 PUSH2 0x7D3 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x77A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x7A3 JUMP JUMPDEST SWAP1 PUSH2 0xF2 SWAP2 PUSH2 0x7BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x814 JUMPI JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x3 SWAP3 SWAP2 PUSH2 0x83D PUSH2 0x838 PUSH2 0x565 PUSH1 0x5 PUSH2 0x832 DUP7 DUP10 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH2 0x889 PUSH1 0x20 DUP5 PUSH2 0x855 PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x85E ADDRESS PUSH2 0x360 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH2 0x87D PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD PUSH2 0x63A JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0x8A5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x98A JUMPI JUMPDEST POP PUSH2 0x674 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x8E1 PUSH2 0x8CA PUSH1 0x0 PUSH2 0x8C4 PUSH2 0x8BD DUP8 DUP8 PUSH2 0x118 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x48F JUMP JUMPDEST ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x8DB PUSH2 0x8D7 PUSH1 0x0 PUSH2 0x10B JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x8F3 PUSH1 0x0 PUSH2 0x8C4 DUP7 DUP10 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x900 PUSH2 0x8D7 PUSH1 0x0 PUSH2 0x10B JUMP JUMPDEST EQ ISZERO PUSH2 0x70C JUMP JUMPDEST PUSH2 0x934 PUSH2 0x912 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x91A DUP7 DUP3 MSTORE JUMP JUMPDEST DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x92F PUSH2 0x8BD DUP7 DUP7 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x95B DUP6 PUSH2 0x942 DUP6 DUP3 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x955 DUP7 PUSH2 0x950 DUP4 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x966 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x976 PUSH2 0x955 SWAP3 PUSH2 0x981 SWAP6 PUSH2 0x118 JUMP JUMPDEST ADD SWAP2 PUSH2 0x950 DUP4 PUSH2 0x137 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x960 JUMP JUMPDEST PUSH2 0x9AC SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9B2 JUMPI JUMPDEST PUSH2 0x9A4 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x626 JUMP JUMPDEST CODESIZE PUSH2 0x89F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x99A JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST SWAP1 PUSH2 0xF2 SWAP3 SWAP2 PUSH2 0x543 JUMP JUMPDEST ISZERO PUSH2 0x9D0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xA44 PUSH2 0xA35 PUSH2 0xA30 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xA3E CALLER PUSH2 0x2BC JUMP JUMPDEST EQ PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xAD4 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xF2 DUP3 PUSH2 0xD7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP2 PUSH2 0xA4C JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xF2 SWAP3 SWAP5 SWAP4 PUSH2 0x664 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST ISZERO PUSH2 0xA8F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E732E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xB14 PUSH1 0x20 PUSH2 0xAE6 PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xAEF ADDRESS PUSH2 0x360 JUMP JUMPDEST SWAP1 PUSH2 0xAF9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x2E8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xB70 SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xBAB JUMPI JUMPDEST POP PUSH2 0xB3C PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xB46 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB51 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH2 0xB65 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xA6D JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB8C JUMPI JUMPDEST POP PUSH2 0xA88 JUMP JUMPDEST PUSH2 0xBA5 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9B2 JUMPI PUSH2 0x9A4 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST CODESIZE PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xBCB SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xBD1 JUMPI JUMPDEST PUSH2 0xBC3 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA59 JUMP JUMPDEST CODESIZE PUSH2 0xB2E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xA20 JUMP JUMPDEST ISZERO PUSH2 0xBE7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420686173206E6F74206265656E207265736F6C7665642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xC33 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220686173206E6F2062657420746F20636C61696D2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x814 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xCAB JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0xC8B JUMP JUMPDEST ISZERO PUSH2 0xCB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E747261637420746F6B656E2062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E636520746F20706179206F75742077696E6E696E67732E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xD29 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E736665722077696E6E696E67732E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 SWAP1 PUSH2 0xD88 PUSH2 0xD83 PUSH1 0x2 PUSH2 0x55F DUP5 DUP7 PUSH2 0x118 JUMP JUMPDEST PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0xD99 PUSH2 0x108 PUSH2 0x8BD DUP4 PUSH1 0x4 PUSH2 0x118 JUMP JUMPDEST PUSH2 0xDA2 DUP2 PUSH2 0x137 JUMP JUMPDEST SWAP3 PUSH2 0xDBB PUSH1 0x0 SWAP5 PUSH2 0xDB5 PUSH2 0x8D7 DUP8 PUSH2 0x10B JUMP JUMPDEST GT PUSH2 0xC2C JUMP JUMPDEST PUSH2 0xDC4 DUP5 PUSH2 0x10B JUMP JUMPDEST SWAP3 PUSH2 0xDD1 PUSH1 0x1 DUP5 ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0xDEC PUSH2 0xDE6 PUSH2 0x79E PUSH1 0x2 PUSH2 0x832 DUP7 DUP9 PUSH2 0x118 JUMP JUMPDEST SWAP2 ISZERO ISZERO SWAP1 JUMP JUMPDEST SUB PUSH2 0xF46 JUMPI SWAP1 PUSH2 0xE14 PUSH1 0x4 PUSH2 0x8C4 DUP5 PUSH2 0xE0E DUP6 PUSH2 0x8C4 PUSH2 0xE6A SWAP11 SWAP10 SWAP9 DUP3 PUSH2 0x118 JUMP JUMPDEST SWAP5 PUSH2 0x118 JUMP JUMPDEST SWAP1 DUP4 DUP3 GT PUSH2 0xF1B JUMPI JUMPDEST POP POP PUSH2 0xE34 SWAP1 DUP5 PUSH2 0xE2D DUP2 PUSH2 0x10B JUMP JUMPDEST SWAP2 ADD PUSH2 0x77A JUMP JUMPDEST PUSH1 0x20 PUSH2 0xE43 PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xE4C ADDRESS PUSH2 0x360 JUMP JUMPDEST SWAP1 PUSH2 0xE56 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL PUSH2 0xB09 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xE90 PUSH2 0xEC3 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0xEFE JUMPI JUMPDEST POP DUP3 GT ISZERO PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xE9D PUSH2 0x850 PUSH1 0x2 PUSH2 0x5D2 JUMP JUMPDEST SWAP1 PUSH2 0xEA7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD PUSH2 0xA6D JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xEDF JUMPI JUMPDEST POP PUSH2 0xD22 JUMP JUMPDEST PUSH2 0xEF8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9B2 JUMPI PUSH2 0x9A4 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST CODESIZE PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF15 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0xBD1 JUMPI PUSH2 0xBC3 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST CODESIZE PUSH2 0xE87 JUMP JUMPDEST DUP3 SWAP4 POP SWAP1 PUSH2 0xF39 PUSH2 0xF3E SWAP3 PUSH2 0xF34 DUP9 PUSH2 0xE34 SWAP7 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xCA1 JUMP JUMPDEST SWAP2 SWAP1 CODESIZE PUSH2 0xE1D JUMP JUMPDEST POP POP SWAP2 PUSH2 0xF2 SWAP3 ADD PUSH2 0x77A JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0xF67 PUSH2 0xA35 PUSH2 0xA30 PUSH1 0x0 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x5 PUSH2 0xF8A PUSH2 0xF82 PUSH2 0x565 DUP4 PUSH2 0x832 DUP7 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST SWAP3 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x814 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xF2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xF2 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST PUSH2 0xFDB PUSH1 0x1 PUSH2 0x137 JUMP JUMPDEST SWAP1 PUSH2 0xFEF PUSH2 0xFE8 DUP4 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x1006 DUP3 PUSH1 0x0 PUSH2 0x1000 DUP3 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x77A JUMP JUMPDEST PUSH2 0x1017 DUP2 PUSH1 0x1 PUSH2 0x1000 DUP6 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x1027 PUSH2 0x850 PUSH2 0x850 PUSH1 0x5 PUSH2 0x5D2 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xE0 JUMPI PUSH2 0x105C PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH2 0x1040 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x938CFD67 PUSH1 0xE0 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD PUSH2 0xFA8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0x10DB JUMPI JUMPDEST POP PUSH2 0x107C PUSH2 0x850 PUSH2 0x850 PUSH1 0x6 PUSH2 0x5D2 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xE0 JUMPI PUSH2 0x10B2 PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH2 0x1095 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x94BF804D PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 PUSH1 0x4 DUP5 ADD PUSH2 0xFBB JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0x10C3 JUMPI POP JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x0 PUSH2 0x10D3 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x10EB SWAP1 PUSH1 0x0 PUSH2 0x10D3 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST CODESIZE PUSH2 0x106B JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x110B PUSH2 0x569 PUSH2 0x565 PUSH1 0x2 PUSH2 0x55F DUP6 PUSH1 0x3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x11AF JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xE0 JUMPI PUSH2 0x108 SWAP1 PUSH1 0x20 PUSH2 0x112C DUP3 DUP7 PUSH2 0x619 JUMP JUMPDEST SWAP5 ADD PUSH2 0x619 JUMP JUMPDEST ISZERO PUSH2 0x113A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5175657374696F6E206F7574636F6D65206E6F742064657465726D696E656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3CB2BA17 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x770 JUMP JUMPDEST SWAP1 PUSH2 0x11A8 PUSH2 0x108 PUSH2 0x791 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x118B JUMP JUMPDEST PUSH1 0x3 PUSH2 0x11C3 PUSH2 0x8F3 PUSH1 0x0 PUSH2 0x8C4 DUP6 DUP6 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x11D3 PUSH2 0x850 PUSH2 0x850 PUSH1 0x5 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x25AAF905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH2 0xF2 SWAP4 PUSH1 0x1 SWAP4 PUSH2 0x1229 PUSH2 0x122E SWAP4 PUSH1 0x2 SWAP6 PUSH1 0x0 DUP1 SWAP2 SWAP1 SWAP3 PUSH2 0x1234 JUMPI JUMPDEST POP PUSH2 0x121E SWAP1 PUSH2 0x1133 JUMP JUMPDEST DUP6 PUSH2 0xF8A DUP6 DUP6 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST ADD PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x121E SWAP3 POP PUSH2 0x125B SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x1262 JUMPI JUMPDEST PUSH2 0x1253 DUP2 DUP4 PUSH2 0x5F2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1110 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1214 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1249 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH2 0x10F1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD RETURN PUSH8 0x6BA2DBA36D19C8A5 0x2A 0x4B PUSH18 0xB1101B866BD1FB9245BB77ABFD9806499DC8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "402:4577:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;848:39::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;402:4577::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;402:4577:1;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;402:4577:1;;;;;;;;;:::i;955:34::-;;;;;:::i;402:4577::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;770:26::-;;;;;:::i;402:4577::-;;;;;-1:-1:-1;;;;;402:4577:1;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;711:20::-;;;;;:::i;402:4577::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;995:30::-;;;;;:::i;402:4577::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;893:55::-;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;402:4577::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;1467:133;;1592:1;1467:133;;1520:62;1528:25;1529:24;;:15;;:6;:15;:::i;:::-;:24;;:::i;:::-;1528:25;;402:4577;1528:25;1520:62;:::i;:::-;1592:1;:::i;402:4577::-;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;402:4577:1;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;402:4577:1;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;2069:711::-;2191:6;;2069:711;2182:76;2190:30;2191:29;;:15;2069:711;2191:6;:15;:::i;:::-;:29;;:::i;2190:30::-;2182:76;:::i;:::-;2276:60;;:12;:25;:12;;;:::i;:::-;:25;:::i;:::-;2314:13;2322:4;2314:13;:::i;:::-;2276:60;;402:4577;;;;2276:60;;;;;;;;:25;402:4577;;;;2276:60;;;2302:10;2276:60;;;;:::i;:::-;;;;;;;;;2268:103;2276:60;;;;;2069:711;2268:103;;:::i;:::-;2389:4;:13;2381:80;2389:32;;:25;:13;;;;:::i;:::-;2302:10;2389:25;;:::i;:::-;:32;;:::i;:::-;:37;;2425:1;2389:37;:::i;:::-;;402:4577;;2389:37;;2381:80;:::i;:::-;2471:53;2479:18;2425:1;2479:15;;;;:::i;:18::-;:23;;2425:1;2479:23;:::i;:::-;;;2471:53;:::i;:::-;2535:107;2563:79;;:::i;:::-;;;;402:4577;;2563:79;402:4577;;;2563:79;;;402:4577;2535:25;:13;;;;:::i;:25::-;:107;:::i;:::-;2653:34;:15;;;;;:::i;:::-;:24;:34;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;2697:77;;2069:711;;;;;:::o;2697:77::-;2727:15;:36;:15;:36;:15;;:::i;:::-;:26;:36;;;;:::i;:::-;2697:77;;;;;;2276:60;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;2069:711::-;;;;;;:::i;402:4577::-;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;402:4577:1;;;;;;;1346:115;1377:66;1385:19;1399:5;;;:::i;:::-;1385:19;:::i;:::-;;:10;:19;:::i;:::-;;1377:66;:::i;:::-;1453:1;;:::i;402:4577::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;4781:196;4847:37;;:22;:12;;;:::i;:22::-;4870:13;4878:4;4870:13;:::i;:::-;4847:37;;402:4577;;;;4847:37;;;;;;;;-1:-1:-1;;;4847:37:1;;;;;;;:::i;:::-;;;;;;;;;;4902:36;4847:37;4902:36;4847:37;;;;;4781:196;4902:12;:21;:12;;;:::i;:21::-;4924:5;;;:::i;:::-;4902:36;;402:4577;;;;4902:36;;;;;;;;:21;402:4577;;;;4902:36;;;;;;;:::i;:::-;;;;;;;;;4894:75;4902:36;;;;;4781:196;4894:75;;:::i;4902:36::-;;;;;;;;;;;;;;:::i;:::-;;;;4847:37;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;4781:196;;;:::i;402:4577::-;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;3336:1289;3403:6;:15;3395:65;3403:24;;:15;;;;:::i;:24::-;3395:65;:::i;:::-;3470:43;3488:25;:13;;:4;:13;:::i;3470:43::-;3531:10;;;:::i;:::-;3544:1;3523:52;3544:1;3531:14;;;;;:::i;:::-;;3523:52;:::i;:::-;3586:20;;;:::i;:::-;3621:14;;;;;;:::i;:::-;:41;;3639:23;;:15;;;;:::i;3621:41::-;;402:4577;;;;3621:41;;3617:1002;;3755:15;3814:26;3488:4;3814:15;3755;:24;:15;;4203:37;3755:15;;;;;:::i;:24::-;3814:15;;:::i;:26::-;3858:14;;;;3854:139;;3617:1002;4066:14;;;;;;;;:::i;:::-;:10;;:14;:::i;:::-;4203:37;:22;:12;;;:::i;:22::-;4226:13;4234:4;4226:13;:::i;:::-;4203:37;;402:4577;;;;4203:37;;;;;;;;-1:-1:-1;;;4203:37:1;402:4577;4203:37;;;;;;;;;;4254:101;4427:43;4203:37;4427:43;4203:37;;;;;3617:1002;-1:-1:-1;4262:32:1;-1:-1:-1;4262:32:1;4254:101;:::i;:::-;4427:21;:12;;;:::i;:21::-;:43;;402:4577;;;;4427:43;;;;;;;;;-1:-1:-1;;;4427:43:1;;3502:10;3488:4;4427:43;;;:::i;:::-;;;;;;;;;4419:84;4427:43;;;;;3617:1002;4419:84;;:::i;4427:43::-;;;;;;;;;;;;;;:::i;:::-;;;;4203:37;;;;;;;;;;;;;;:::i;:::-;;;;3854:139;3943:10;;;;:21;3942:36;3943:10;;;4066:14;3943:10;;;:::i;:::-;:21;:::i;:::-;3942:36;:::i;:::-;3854:139;;;;;3617:1002;4594:10;;;:14;:10;;:14;:::i;1346:115::-;1453:1;1346:115;1377:66;1385:19;1399:5;;;:::i;1377:66::-;4706:62;4631:144;4706:29;:15;4738:30;4739:29;:15;;;:6;:15;:::i;4738:30::-;4706:15;4739:6;4706:15;:::i;:::-;:29;:62;:::i;4631:144::-;;;;:::i;402:4577::-;-1:-1:-1;;402:4577:1;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1606:456::-;1683:13;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;1706:28;:15;:18;:15;;:6;:15;:::i;:::-;:18;:28;:::i;:::-;1744:37;:15;:25;:15;;1706:6;1744:15;:::i;:37::-;1927:46;:34;1941:19;;;:::i;1927:46::-;:66;;;;;;;;;;;;402:4577;;;;1927:66;;;;;;;;;-1:-1:-1;;;1927:66:1;;;;;;;:::i;:::-;;;;;;;;;;;1606:456;2013:15;2003:31;:26;2013:15;;;:::i;2003:31::-;:52;;;;;;;;;;;;402:4577;;;;2003:52;;;;;;;;;-1:-1:-1;;;2003:52:1;;2044:10;2003:52;;;;;:::i;:::-;;;;;;;;;;;1606:456;:::o;2003:52::-;;;;;;;;:::i;:::-;;;;;:::i;1927:66::-;;;;;;;;:::i;:::-;;;;1467:133;1592:1;1467:133;1520:62;1528:25;1529:24;;:15;;:6;:15;:::i;1520:62::-;1592:1;:::i;402:4577::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;402:4577:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2786:543::-;2878:6;2870:53;2878:18;;:15;;;;:::i;2870:53::-;3106;:34;3120:19;;;:::i;3106:53::-;:62;402:4577;;-1:-1:-1;;;3106:62:1;;;;;402:4577;;;;;;;;;;3106:62;;;;;;3291:31;3106:62;3318:4;3106:62;3248:33;3291:15;3106:62;3291:24;3106:62;;;;;;;;2786:543;3178:59;;;;:::i;:::-;3248:15;;;;;:::i;:33::-;3291:15;:::i;:::-;:24;:31;:::i;3106:62::-;3178:59;3106:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2786:543;;;;:::i"
            },
            "methodIdentifiers": {
              "bets(uint256,address)": "f644b3bb",
              "bettingToken()": "43425e88",
              "claimWinnings(uint256)": "677bd9ff",
              "createEvent(uint256)": "977d996d",
              "events(uint256)": "0b791430",
              "matchNFTAddress()": "9a2e8240",
              "owner()": "8da5cb5b",
              "placeBet(uint256,bool,uint256)": "1a38cac6",
              "resolveEvent(uint256)": "bed524d6",
              "socialOracleAddress()": "30658198",
              "toggleEmergencyStop(uint256)": "8822e6fd",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_socialOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_matchNFTAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bettingTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prediction\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bettingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"claimWinnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"createEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningPot\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"emergencyStop\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"matchNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prediction\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"resolveEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"socialOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"toggleEmergencyStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentralizedBetting.sol\":\"DecentralizedBetting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/DecentralizedBetting.sol\":{\"keccak256\":\"0x784745e5661ffd9710521f361adb4d490e64700ed0f7c4e0e2885aef3a17b659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ead0af467df3398981756046b0ea0f8374fa9fb027ca0a1ef86a8387f0421fea\",\"dweb:/ipfs/QmT8HQvHixjWTn3ByPMiQun1sMqY8mXRADD8AnmyoRKgK9\"]}},\"version\":1}"
        },
        "IMatchNFT": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "mint(uint256,address)": "94bf804d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentralizedBetting.sol\":\"IMatchNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/DecentralizedBetting.sol\":{\"keccak256\":\"0x784745e5661ffd9710521f361adb4d490e64700ed0f7c4e0e2885aef3a17b659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ead0af467df3398981756046b0ea0f8374fa9fb027ca0a1ef86a8387f0421fea\",\"dweb:/ipfs/QmT8HQvHixjWTn3ByPMiQun1sMqY8mXRADD8AnmyoRKgK9\"]}},\"version\":1}"
        },
        "ISocialOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_deadline",
                  "type": "uint256"
                }
              ],
              "name": "addQuestion",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_questionId",
                  "type": "uint256"
                }
              ],
              "name": "getQuestionOutcome",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "outcome",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "determined",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addQuestion(uint256,uint256)": "938cfd67",
              "getQuestionOutcome(uint256)": "25aaf905"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"addQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"getQuestionOutcome\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"determined\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentralizedBetting.sol\":\"ISocialOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/DecentralizedBetting.sol\":{\"keccak256\":\"0x784745e5661ffd9710521f361adb4d490e64700ed0f7c4e0e2885aef3a17b659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ead0af467df3398981756046b0ea0f8374fa9fb027ca0a1ef86a8387f0421fea\",\"dweb:/ipfs/QmT8HQvHixjWTn3ByPMiQun1sMqY8mXRADD8AnmyoRKgK9\"]}},\"version\":1}"
        }
      }
    }
  }
}