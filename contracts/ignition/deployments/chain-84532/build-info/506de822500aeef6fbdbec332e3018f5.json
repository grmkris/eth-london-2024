{
  "id": "506de822500aeef6fbdbec332e3018f5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/DecentralizedBetting.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ISocialOracle {\n    function addQuestion(uint256 _id, uint256 _deadline) external;\n    function getQuestionOutcome(uint256 _questionId) external view returns (bool outcome, bool determined);\n}\n\ninterface IMatchNFT {\n    function mint(uint256 eventId, address to) external;\n}\n\n\ncontract DecentralizedBetting {\n    struct Bet {\n        uint256 amount;\n        bool prediction;\n    }\n\n    struct Event {\n        uint256 id;\n        uint256 timestamp;\n        bool outcome;\n        bool resolved;\n        uint256 totalPot;\n        uint256 winningPot;\n        bool emergencyStop;\n    }\n\n    address public owner;\n    uint256 private nextEventId;\n\n    mapping(uint256 => Event) public events;\n    mapping(uint256 => mapping(address => Bet)) public bets;\n\n    address public socialOracleAddress;\n    address public matchNFTAddress;\n\n    constructor(address _socialOracleAddress, address _matchNFTAddress) {\n        owner = msg.sender;\n        nextEventId = 1;\n        socialOracleAddress = _socialOracleAddress;\n        matchNFTAddress = _matchNFTAddress;\n    }\n\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function.\");\n        _;\n    }\n\n    modifier eventNotResolved(uint256 eventId) {\n        require(!events[eventId].resolved, \"Event has been resolved.\");\n        _;\n    }\n\n    function createEvent(uint256 timestamp) external onlyOwner {\n        uint256 eventId = nextEventId++;\n        events[eventId].id = eventId;\n        events[eventId].timestamp = timestamp;\n\n        // Assuming SocialOracle has a function to add a question directly\n        // and the deadline is set as the event's timestamp\n        ISocialOracle(socialOracleAddress).addQuestion(eventId, timestamp);\n        IMatchNFT(matchNFTAddress).mint(eventId, msg.sender);\n    }\n\n\n    function placeBet(uint256 eventId, bool prediction) external payable eventNotResolved(eventId) {\n        require(!events[eventId].emergencyStop, \"Betting is temporarily suspended.\");\n        require(msg.value > 0, \"Bet amount must be greater than 0.\");\n        require(bets[eventId][msg.sender].amount == 0, \"User has already placed a bet.\");\n        require(events[eventId].id != 0, \"Invalid event ID.\");\n\n        bets[eventId][msg.sender] = Bet({\n            amount: msg.value,\n            prediction: prediction\n        });\n\n        events[eventId].totalPot += msg.value;\n        if (prediction) {\n            events[eventId].winningPot += msg.value;\n        }\n    }\n\n    function resolveEvent(uint256 eventId) external onlyOwner eventNotResolved(eventId) {\n        require(events[eventId].id != 0, \"Invalid event ID.\");\n        // require(block.timestamp >= events[eventId].timestamp, \"Event has not occurred yet.\");\n\n        // Get outcome from SocialOracle\n        (bool outcome, bool determined) = ISocialOracle(socialOracleAddress).getQuestionOutcome(eventId);\n        require(determined, \"Question outcome not determined yet.\");\n\n        events[eventId].outcome = outcome;\n        events[eventId].resolved = true;\n    }\n\n\n    function claimWinnings(uint256 eventId) external {\n        require(events[eventId].resolved, \"Event has not been resolved.\");\n        Bet storage bet = bets[eventId][msg.sender];\n        require(bet.amount > 0, \"User has no bet to claim.\");\n\n        if (bet.prediction == events[eventId].outcome) {\n            uint256 totalPot = events[eventId].totalPot;\n            uint256 winningPot = events[eventId].winningPot;\n            uint256 winnings = (bet.amount * totalPot) / winningPot;\n\n            bet.amount = 0;\n            require(address(this).balance >= winnings, \"Insufficient contract balance to pay out winnings.\");\n            payable(msg.sender).transfer(winnings);\n        } else {\n            bet.amount = 0;\n        }\n    }\n\n    function toggleEmergencyStop(uint256 eventId) external onlyOwner {\n        events[eventId].emergencyStop = !events[eventId].emergencyStop;\n    }\n\n    function withdraw() external onlyOwner {\n        uint256 amount = address(this).balance;\n        payable(owner).transfer(amount);\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 200,
        "details": {
          "yulDetails": {
            "optimizerSteps": "u"
          }
        }
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "contracts/DecentralizedBetting.sol": {
        "ast": {
          "absolutePath": "contracts/DecentralizedBetting.sol",
          "exportedSymbols": {
            "DecentralizedBetting": [
              436
            ],
            "IMatchNFT": [
              26
            ],
            "ISocialOracle": [
              18
            ]
          },
          "id": 437,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISocialOracle",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 18,
              "linearizedBaseContracts": [
                18
              ],
              "name": "ISocialOracle",
              "nameLocation": "67:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "938cfd67",
                  "id": 8,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addQuestion",
                  "nameLocation": "96:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "116:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 8,
                        "src": "108:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "108:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "_deadline",
                        "nameLocation": "129:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 8,
                        "src": "121:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "121:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "107:32:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "148:0:0"
                  },
                  "scope": 18,
                  "src": "87:62:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "25aaf905",
                  "id": 17,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getQuestionOutcome",
                  "nameLocation": "163:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 10,
                        "mutability": "mutable",
                        "name": "_questionId",
                        "nameLocation": "190:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "182:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "182:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "181:21:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "outcome",
                        "nameLocation": "231:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "226:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "determined",
                        "nameLocation": "245:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "240:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "240:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "225:31:0"
                  },
                  "scope": 18,
                  "src": "154:103:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 437,
              "src": "57:202:0",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IMatchNFT",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 26,
              "linearizedBaseContracts": [
                26
              ],
              "name": "IMatchNFT",
              "nameLocation": "271:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "94bf804d",
                  "id": 25,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "296:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "309:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "301:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "301:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "326:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "318:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "318:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "300:29:0"
                  },
                  "returnParameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "338:0:0"
                  },
                  "scope": 26,
                  "src": "287:52:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 437,
              "src": "261:80:0",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "DecentralizedBetting",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 436,
              "linearizedBaseContracts": [
                436
              ],
              "name": "DecentralizedBetting",
              "nameLocation": "353:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "DecentralizedBetting.Bet",
                  "id": 31,
                  "members": [
                    {
                      "constant": false,
                      "id": 28,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "409:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 31,
                      "src": "401:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "401:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30,
                      "mutability": "mutable",
                      "name": "prediction",
                      "nameLocation": "430:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 31,
                      "src": "425:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "425:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Bet",
                  "nameLocation": "387:3:0",
                  "nodeType": "StructDefinition",
                  "scope": 436,
                  "src": "380:67:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DecentralizedBetting.Event",
                  "id": 46,
                  "members": [
                    {
                      "constant": false,
                      "id": 33,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "484:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "476:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 35,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "504:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "496:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "496:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "outcome",
                      "nameLocation": "528:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "523:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "523:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "resolved",
                      "nameLocation": "550:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "545:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "545:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41,
                      "mutability": "mutable",
                      "name": "totalPot",
                      "nameLocation": "576:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "568:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "568:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "winningPot",
                      "nameLocation": "602:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "594:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "594:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45,
                      "mutability": "mutable",
                      "name": "emergencyStop",
                      "nameLocation": "627:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "622:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 44,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "622:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Event",
                  "nameLocation": "460:5:0",
                  "nodeType": "StructDefinition",
                  "scope": 436,
                  "src": "453:194:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 48,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "668:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "653:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "nextEventId",
                  "nameLocation": "695:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "679:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "0b791430",
                  "id": 55,
                  "mutability": "mutable",
                  "name": "events",
                  "nameLocation": "746:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "713:39:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                    "typeString": "mapping(uint256 => struct DecentralizedBetting.Event)"
                  },
                  "typeName": {
                    "id": 54,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 51,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "721:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "713:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 53,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 52,
                        "name": "Event",
                        "nameLocations": [
                          "732:5:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "732:5:0"
                      },
                      "referencedDeclaration": 46,
                      "src": "732:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Event_$46_storage_ptr",
                        "typeString": "struct DecentralizedBetting.Event"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f644b3bb",
                  "id": 62,
                  "mutability": "mutable",
                  "name": "bets",
                  "nameLocation": "809:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "758:55:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$_$",
                    "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet))"
                  },
                  "typeName": {
                    "id": 61,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 56,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "766:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "758:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$_$",
                      "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 60,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 57,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "785:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "777:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$",
                        "typeString": "mapping(address => struct DecentralizedBetting.Bet)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 59,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58,
                          "name": "Bet",
                          "nameLocations": [
                            "796:3:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31,
                          "src": "796:3:0"
                        },
                        "referencedDeclaration": 31,
                        "src": "796:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$31_storage_ptr",
                          "typeString": "struct DecentralizedBetting.Bet"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "30658198",
                  "id": 64,
                  "mutability": "mutable",
                  "name": "socialOracleAddress",
                  "nameLocation": "835:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "820:34:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9a2e8240",
                  "id": 66,
                  "mutability": "mutable",
                  "name": "matchNFTAddress",
                  "nameLocation": "875:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "860:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "965:156:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 73,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "975:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 74,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "983:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "987:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "983:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "975:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "975:18:0"
                      },
                      {
                        "expression": {
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 78,
                            "name": "nextEventId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1003:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1017:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1003:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "1003:15:0"
                      },
                      {
                        "expression": {
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 82,
                            "name": "socialOracleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1028:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 83,
                            "name": "_socialOracleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "1050:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1028:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "1028:42:0"
                      },
                      {
                        "expression": {
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 86,
                            "name": "matchNFTAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1080:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 87,
                            "name": "_matchNFTAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1098:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1080:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "1080:34:0"
                      }
                    ]
                  },
                  "id": 91,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 68,
                        "mutability": "mutable",
                        "name": "_socialOracleAddress",
                        "nameLocation": "917:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 91,
                        "src": "909:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 67,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "909:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "_matchNFTAddress",
                        "nameLocation": "947:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 91,
                        "src": "939:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "939:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "908:56:0"
                  },
                  "returnParameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "965:0:0"
                  },
                  "scope": 436,
                  "src": "897:224:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "1149:94:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 94,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1167:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1171:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1167:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 96,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "1181:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1167:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e2e",
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1188:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                                "typeString": "literal_string \"Only owner can call this function.\""
                              },
                              "value": "Only owner can call this function."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                                "typeString": "literal_string \"Only owner can call this function.\""
                              }
                            ],
                            "id": 93,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1159:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1159:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100,
                        "nodeType": "ExpressionStatement",
                        "src": "1159:66:0"
                      },
                      {
                        "id": 101,
                        "nodeType": "PlaceholderStatement",
                        "src": "1235:1:0"
                      }
                    ]
                  },
                  "id": 103,
                  "name": "onlyOwner",
                  "nameLocation": "1137:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1146:2:0"
                  },
                  "src": "1128:115:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1292:90:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1310:25:0",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 108,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "1311:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 110,
                                  "indexExpression": {
                                    "id": 109,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 105,
                                    "src": "1318:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1311:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$46_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 111,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1327:8:0",
                                "memberName": "resolved",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39,
                                "src": "1311:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4576656e7420686173206265656e207265736f6c7665642e",
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1337:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_52a1acb2d1a25435bd0079d3441dae800274afaf2e0ac3e6a407b9e6733ed0ed",
                                "typeString": "literal_string \"Event has been resolved.\""
                              },
                              "value": "Event has been resolved."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_52a1acb2d1a25435bd0079d3441dae800274afaf2e0ac3e6a407b9e6733ed0ed",
                                "typeString": "literal_string \"Event has been resolved.\""
                              }
                            ],
                            "id": 107,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1302:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1302:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "1302:62:0"
                      },
                      {
                        "id": 116,
                        "nodeType": "PlaceholderStatement",
                        "src": "1374:1:0"
                      }
                    ]
                  },
                  "id": 118,
                  "name": "eventNotResolved",
                  "nameLocation": "1258:16:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 105,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "1283:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "1275:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1275:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1274:17:0"
                  },
                  "src": "1249:133:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 161,
                    "nodeType": "Block",
                    "src": "1447:407:0",
                    "statements": [
                      {
                        "assignments": [
                          126
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 126,
                            "mutability": "mutable",
                            "name": "eventId",
                            "nameLocation": "1465:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 161,
                            "src": "1457:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 125,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1457:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 129,
                        "initialValue": {
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1475:13:0",
                          "subExpression": {
                            "id": 127,
                            "name": "nextEventId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1475:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1457:31:0"
                      },
                      {
                        "expression": {
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 130,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "1498:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 132,
                              "indexExpression": {
                                "id": 131,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "1505:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1498:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$46_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1514:2:0",
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "1498:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 134,
                            "name": "eventId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1519:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1498:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "1498:28:0"
                      },
                      {
                        "expression": {
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 137,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "1536:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 139,
                              "indexExpression": {
                                "id": 138,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "1543:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1536:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$46_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1552:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "1536:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 141,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "1564:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1536:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 143,
                        "nodeType": "ExpressionStatement",
                        "src": "1536:37:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 148,
                              "name": "eventId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 126,
                              "src": "1766:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 149,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1775:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 145,
                                  "name": "socialOracleAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "1733:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 144,
                                "name": "ISocialOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "1719:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISocialOracle_$18_$",
                                  "typeString": "type(contract ISocialOracle)"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1719:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISocialOracle_$18",
                                "typeString": "contract ISocialOracle"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1754:11:0",
                            "memberName": "addQuestion",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "1719:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1719:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 151,
                        "nodeType": "ExpressionStatement",
                        "src": "1719:66:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "eventId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 126,
                              "src": "1827:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 157,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1836:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1840:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1836:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 153,
                                  "name": "matchNFTAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66,
                                  "src": "1805:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 152,
                                "name": "IMatchNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "1795:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMatchNFT_$26_$",
                                  "typeString": "type(contract IMatchNFT)"
                                }
                              },
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1795:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMatchNFT_$26",
                                "typeString": "contract IMatchNFT"
                              }
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1822:4:0",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "1795:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1795:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "1795:52:0"
                      }
                    ]
                  },
                  "functionSelector": "977d996d",
                  "id": 162,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 123,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 122,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1437:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 103,
                        "src": "1437:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1437:9:0"
                    }
                  ],
                  "name": "createEvent",
                  "nameLocation": "1397:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1417:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "1409:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1409:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1408:19:0"
                  },
                  "returnParameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1447:0:0"
                  },
                  "scope": 436,
                  "src": "1388:466:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 244,
                    "nodeType": "Block",
                    "src": "1956:574:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1974:30:0",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 173,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "1975:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 175,
                                  "indexExpression": {
                                    "id": 174,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 164,
                                    "src": "1982:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1975:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$46_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1991:13:0",
                                "memberName": "emergencyStop",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45,
                                "src": "1975:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657474696e672069732074656d706f726172696c792073757370656e6465642e",
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2006:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a43c32c6bd75a941910da7f2376eccfceb77541edab81c68bc9b8ce1daccb3d",
                                "typeString": "literal_string \"Betting is temporarily suspended.\""
                              },
                              "value": "Betting is temporarily suspended."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4a43c32c6bd75a941910da7f2376eccfceb77541edab81c68bc9b8ce1daccb3d",
                                "typeString": "literal_string \"Betting is temporarily suspended.\""
                              }
                            ],
                            "id": 172,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1966:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1966:76:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "1966:76:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 182,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2060:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2064:5:0",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2060:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2072:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2060:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42657420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2075:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7836ea2c7cfc79c93ea92b719fa63a8572d19683acc4b19b3878e3eaa197ef6d",
                                "typeString": "literal_string \"Bet amount must be greater than 0.\""
                              },
                              "value": "Bet amount must be greater than 0."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7836ea2c7cfc79c93ea92b719fa63a8572d19683acc4b19b3878e3eaa197ef6d",
                                "typeString": "literal_string \"Bet amount must be greater than 0.\""
                              }
                            ],
                            "id": 181,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2052:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2052:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 188,
                        "nodeType": "ExpressionStatement",
                        "src": "2052:60:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 190,
                                      "name": "bets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62,
                                      "src": "2130:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet storage ref))"
                                      }
                                    },
                                    "id": 192,
                                    "indexExpression": {
                                      "id": 191,
                                      "name": "eventId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 164,
                                      "src": "2135:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2130:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$",
                                      "typeString": "mapping(address => struct DecentralizedBetting.Bet storage ref)"
                                    }
                                  },
                                  "id": 195,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 193,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2144:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 194,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2148:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2144:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2130:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$31_storage",
                                    "typeString": "struct DecentralizedBetting.Bet storage ref"
                                  }
                                },
                                "id": 196,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2156:6:0",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 28,
                                "src": "2130:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2166:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2130:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "557365722068617320616c726561647920706c616365642061206265742e",
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2169:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96913544ff29fe8a60e7cae7a4daaed83d4e1a5a149a55fc3f7b64553246f3ee",
                                "typeString": "literal_string \"User has already placed a bet.\""
                              },
                              "value": "User has already placed a bet."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_96913544ff29fe8a60e7cae7a4daaed83d4e1a5a149a55fc3f7b64553246f3ee",
                                "typeString": "literal_string \"User has already placed a bet.\""
                              }
                            ],
                            "id": 189,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2122:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2122:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 201,
                        "nodeType": "ExpressionStatement",
                        "src": "2122:80:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 203,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "2220:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 205,
                                  "indexExpression": {
                                    "id": 204,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 164,
                                    "src": "2227:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2220:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$46_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 206,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2236:2:0",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 33,
                                "src": "2220:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2242:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2220:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206576656e742049442e",
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2245:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d",
                                "typeString": "literal_string \"Invalid event ID.\""
                              },
                              "value": "Invalid event ID."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d",
                                "typeString": "literal_string \"Invalid event ID.\""
                              }
                            ],
                            "id": 202,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2212:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2212:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 211,
                        "nodeType": "ExpressionStatement",
                        "src": "2212:53:0"
                      },
                      {
                        "expression": {
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 212,
                                "name": "bets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62,
                                "src": "2276:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet storage ref))"
                                }
                              },
                              "id": 216,
                              "indexExpression": {
                                "id": 213,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "2281:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2276:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$",
                                "typeString": "mapping(address => struct DecentralizedBetting.Bet storage ref)"
                              }
                            },
                            "id": 217,
                            "indexExpression": {
                              "expression": {
                                "id": 214,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2290:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2294:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2290:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2276:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$31_storage",
                              "typeString": "struct DecentralizedBetting.Bet storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 219,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2330:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2334:5:0",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2330:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 221,
                                "name": "prediction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "2365:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 218,
                              "name": "Bet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "2304:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Bet_$31_storage_ptr_$",
                                "typeString": "type(struct DecentralizedBetting.Bet storage pointer)"
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "2322:6:0",
                              "2353:10:0"
                            ],
                            "names": [
                              "amount",
                              "prediction"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2304:82:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$31_memory_ptr",
                              "typeString": "struct DecentralizedBetting.Bet memory"
                            }
                          },
                          "src": "2276:110:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$31_storage",
                            "typeString": "struct DecentralizedBetting.Bet storage ref"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "2276:110:0"
                      },
                      {
                        "expression": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 225,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "2397:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 227,
                              "indexExpression": {
                                "id": 226,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "2404:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2397:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$46_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2413:8:0",
                            "memberName": "totalPot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "2397:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 229,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2425:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2429:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2425:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2397:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 232,
                        "nodeType": "ExpressionStatement",
                        "src": "2397:37:0"
                      },
                      {
                        "condition": {
                          "id": 233,
                          "name": "prediction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "2448:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 243,
                        "nodeType": "IfStatement",
                        "src": "2444:80:0",
                        "trueBody": {
                          "id": 242,
                          "nodeType": "Block",
                          "src": "2460:64:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 234,
                                      "name": "events",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55,
                                      "src": "2474:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                        "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                      }
                                    },
                                    "id": 236,
                                    "indexExpression": {
                                      "id": 235,
                                      "name": "eventId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 164,
                                      "src": "2481:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2474:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Event_$46_storage",
                                      "typeString": "struct DecentralizedBetting.Event storage ref"
                                    }
                                  },
                                  "id": 237,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2490:10:0",
                                  "memberName": "winningPot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43,
                                  "src": "2474:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 238,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2504:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2508:5:0",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "2504:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2474:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 241,
                              "nodeType": "ExpressionStatement",
                              "src": "2474:39:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "9ed9c74d",
                  "id": 245,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 169,
                          "name": "eventId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "1947:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 170,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 168,
                        "name": "eventNotResolved",
                        "nameLocations": [
                          "1930:16:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 118,
                        "src": "1930:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1930:25:0"
                    }
                  ],
                  "name": "placeBet",
                  "nameLocation": "1870:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "1887:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1879:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1879:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "prediction",
                        "nameLocation": "1901:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1896:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1896:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1878:34:0"
                  },
                  "returnParameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1956:0:0"
                  },
                  "scope": 436,
                  "src": "1861:669:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "2620:469:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 256,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "2638:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 258,
                                  "indexExpression": {
                                    "id": 257,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 247,
                                    "src": "2645:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2638:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$46_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 259,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2654:2:0",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 33,
                                "src": "2638:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2660:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2638:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206576656e742049442e",
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2663:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d",
                                "typeString": "literal_string \"Invalid event ID.\""
                              },
                              "value": "Invalid event ID."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d",
                                "typeString": "literal_string \"Invalid event ID.\""
                              }
                            ],
                            "id": 255,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2630:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2630:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "2630:53:0"
                      },
                      {
                        "assignments": [
                          266,
                          268
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 266,
                            "mutability": "mutable",
                            "name": "outcome",
                            "nameLocation": "2838:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 295,
                            "src": "2833:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 265,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2833:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 268,
                            "mutability": "mutable",
                            "name": "determined",
                            "nameLocation": "2852:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 295,
                            "src": "2847:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 267,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2847:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 275,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 273,
                              "name": "eventId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "2920:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 270,
                                  "name": "socialOracleAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "2880:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 269,
                                "name": "ISocialOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "2866:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISocialOracle_$18_$",
                                  "typeString": "type(contract ISocialOracle)"
                                }
                              },
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2866:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISocialOracle_$18",
                                "typeString": "contract ISocialOracle"
                              }
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2901:18:0",
                            "memberName": "getQuestionOutcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "2866:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_bool_$",
                              "typeString": "function (uint256) view external returns (bool,bool)"
                            }
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2866:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2832:96:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 277,
                              "name": "determined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "2946:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5175657374696f6e206f7574636f6d65206e6f742064657465726d696e6564207965742e",
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2958:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_16e238f7883fb4fb82ddbc44a9f331fb5f3a15ef3e1511f41f4c80bef4c39405",
                                "typeString": "literal_string \"Question outcome not determined yet.\""
                              },
                              "value": "Question outcome not determined yet."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_16e238f7883fb4fb82ddbc44a9f331fb5f3a15ef3e1511f41f4c80bef4c39405",
                                "typeString": "literal_string \"Question outcome not determined yet.\""
                              }
                            ],
                            "id": 276,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2938:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2938:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "2938:59:0"
                      },
                      {
                        "expression": {
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 281,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "3008:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 283,
                              "indexExpression": {
                                "id": 282,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 247,
                                "src": "3015:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3008:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$46_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3024:7:0",
                            "memberName": "outcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37,
                            "src": "3008:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 285,
                            "name": "outcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3034:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3008:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "3008:33:0"
                      },
                      {
                        "expression": {
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 288,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "3051:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 290,
                              "indexExpression": {
                                "id": 289,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 247,
                                "src": "3058:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3051:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$46_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3067:8:0",
                            "memberName": "resolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "3051:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3078:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3051:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "3051:31:0"
                      }
                    ]
                  },
                  "functionSelector": "bed524d6",
                  "id": 296,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 250,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 249,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2584:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 103,
                        "src": "2584:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2584:9:0"
                    },
                    {
                      "arguments": [
                        {
                          "id": 252,
                          "name": "eventId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "2611:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 253,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 251,
                        "name": "eventNotResolved",
                        "nameLocations": [
                          "2594:16:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 118,
                        "src": "2594:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2594:25:0"
                    }
                  ],
                  "name": "resolveEvent",
                  "nameLocation": "2545:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "2566:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2558:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2558:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2557:17:0"
                  },
                  "returnParameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2620:0:0"
                  },
                  "scope": 436,
                  "src": "2536:553:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 393,
                    "nodeType": "Block",
                    "src": "3145:688:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 302,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "3163:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                    "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                  }
                                },
                                "id": 304,
                                "indexExpression": {
                                  "id": 303,
                                  "name": "eventId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "3170:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3163:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Event_$46_storage",
                                  "typeString": "struct DecentralizedBetting.Event storage ref"
                                }
                              },
                              "id": 305,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3179:8:0",
                              "memberName": "resolved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39,
                              "src": "3163:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4576656e7420686173206e6f74206265656e207265736f6c7665642e",
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3189:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c2a178c9284e5d0a5c9fbf1b3a7f27d86500c02009f06d49123410a5e03b3a1d",
                                "typeString": "literal_string \"Event has not been resolved.\""
                              },
                              "value": "Event has not been resolved."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c2a178c9284e5d0a5c9fbf1b3a7f27d86500c02009f06d49123410a5e03b3a1d",
                                "typeString": "literal_string \"Event has not been resolved.\""
                              }
                            ],
                            "id": 301,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3155:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3155:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 308,
                        "nodeType": "ExpressionStatement",
                        "src": "3155:65:0"
                      },
                      {
                        "assignments": [
                          311
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 311,
                            "mutability": "mutable",
                            "name": "bet",
                            "nameLocation": "3242:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 393,
                            "src": "3230:15:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bet_$31_storage_ptr",
                              "typeString": "struct DecentralizedBetting.Bet"
                            },
                            "typeName": {
                              "id": 310,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 309,
                                "name": "Bet",
                                "nameLocations": [
                                  "3230:3:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 31,
                                "src": "3230:3:0"
                              },
                              "referencedDeclaration": 31,
                              "src": "3230:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$31_storage_ptr",
                                "typeString": "struct DecentralizedBetting.Bet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 318,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 312,
                              "name": "bets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "3248:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct DecentralizedBetting.Bet storage ref))"
                              }
                            },
                            "id": 314,
                            "indexExpression": {
                              "id": 313,
                              "name": "eventId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "3253:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3248:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bet_$31_storage_$",
                              "typeString": "mapping(address => struct DecentralizedBetting.Bet storage ref)"
                            }
                          },
                          "id": 317,
                          "indexExpression": {
                            "expression": {
                              "id": 315,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3262:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3266:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3262:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3248:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$31_storage",
                            "typeString": "struct DecentralizedBetting.Bet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3230:43:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 320,
                                  "name": "bet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 311,
                                  "src": "3291:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$31_storage_ptr",
                                    "typeString": "struct DecentralizedBetting.Bet storage pointer"
                                  }
                                },
                                "id": 321,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3295:6:0",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 28,
                                "src": "3291:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3304:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3291:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5573657220686173206e6f2062657420746f20636c61696d2e",
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3307:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_40d556fd9e2a3fa92702df8f90e763972d93be83403bff576df4ecf8e3433fba",
                                "typeString": "literal_string \"User has no bet to claim.\""
                              },
                              "value": "User has no bet to claim."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_40d556fd9e2a3fa92702df8f90e763972d93be83403bff576df4ecf8e3433fba",
                                "typeString": "literal_string \"User has no bet to claim.\""
                              }
                            ],
                            "id": 319,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3283:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3283:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 326,
                        "nodeType": "ExpressionStatement",
                        "src": "3283:52:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 327,
                              "name": "bet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 311,
                              "src": "3350:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bet_$31_storage_ptr",
                                "typeString": "struct DecentralizedBetting.Bet storage pointer"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3354:10:0",
                            "memberName": "prediction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "3350:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 329,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "3368:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 331,
                              "indexExpression": {
                                "id": 330,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 298,
                                "src": "3375:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3368:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$46_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3384:7:0",
                            "memberName": "outcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37,
                            "src": "3368:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3350:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 391,
                          "nodeType": "Block",
                          "src": "3788:39:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 385,
                                    "name": "bet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 311,
                                    "src": "3802:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bet_$31_storage_ptr",
                                      "typeString": "struct DecentralizedBetting.Bet storage pointer"
                                    }
                                  },
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3806:6:0",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28,
                                  "src": "3802:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3815:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3802:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 390,
                              "nodeType": "ExpressionStatement",
                              "src": "3802:14:0"
                            }
                          ]
                        },
                        "id": 392,
                        "nodeType": "IfStatement",
                        "src": "3346:481:0",
                        "trueBody": {
                          "id": 384,
                          "nodeType": "Block",
                          "src": "3393:389:0",
                          "statements": [
                            {
                              "assignments": [
                                335
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 335,
                                  "mutability": "mutable",
                                  "name": "totalPot",
                                  "nameLocation": "3415:8:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 384,
                                  "src": "3407:16:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 334,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3407:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 340,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 336,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "3426:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 338,
                                  "indexExpression": {
                                    "id": 337,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 298,
                                    "src": "3433:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3426:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$46_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 339,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3442:8:0",
                                "memberName": "totalPot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 41,
                                "src": "3426:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3407:43:0"
                            },
                            {
                              "assignments": [
                                342
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 342,
                                  "mutability": "mutable",
                                  "name": "winningPot",
                                  "nameLocation": "3472:10:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 384,
                                  "src": "3464:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 341,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3464:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 347,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 343,
                                    "name": "events",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "3485:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                      "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                    }
                                  },
                                  "id": 345,
                                  "indexExpression": {
                                    "id": 344,
                                    "name": "eventId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 298,
                                    "src": "3492:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3485:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Event_$46_storage",
                                    "typeString": "struct DecentralizedBetting.Event storage ref"
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3501:10:0",
                                "memberName": "winningPot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43,
                                "src": "3485:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3464:47:0"
                            },
                            {
                              "assignments": [
                                349
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 349,
                                  "mutability": "mutable",
                                  "name": "winnings",
                                  "nameLocation": "3533:8:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 384,
                                  "src": "3525:16:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 348,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3525:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 357,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 353,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 350,
                                          "name": "bet",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 311,
                                          "src": "3545:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bet_$31_storage_ptr",
                                            "typeString": "struct DecentralizedBetting.Bet storage pointer"
                                          }
                                        },
                                        "id": 351,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3549:6:0",
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 28,
                                        "src": "3545:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 352,
                                        "name": "totalPot",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 335,
                                        "src": "3558:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3545:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 354,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3544:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 355,
                                  "name": "winningPot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 342,
                                  "src": "3570:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3544:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3525:55:0"
                            },
                            {
                              "expression": {
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 358,
                                    "name": "bet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 311,
                                    "src": "3595:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bet_$31_storage_ptr",
                                      "typeString": "struct DecentralizedBetting.Bet storage pointer"
                                    }
                                  },
                                  "id": 360,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3599:6:0",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28,
                                  "src": "3595:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3608:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3595:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 363,
                              "nodeType": "ExpressionStatement",
                              "src": "3595:14:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 371,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 367,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "3639:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DecentralizedBetting_$436",
                                              "typeString": "contract DecentralizedBetting"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_DecentralizedBetting_$436",
                                              "typeString": "contract DecentralizedBetting"
                                            }
                                          ],
                                          "id": 366,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3631:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 365,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3631:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3631:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 369,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3645:7:0",
                                      "memberName": "balance",
                                      "nodeType": "MemberAccess",
                                      "src": "3631:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 370,
                                      "name": "winnings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 349,
                                      "src": "3656:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3631:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e636520746f20706179206f75742077696e6e696e67732e",
                                    "id": 372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3666:52:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4b96e57b5d7f4091de4be9622ad34241ccfb1a700b923347a68e040b594e2a21",
                                      "typeString": "literal_string \"Insufficient contract balance to pay out winnings.\""
                                    },
                                    "value": "Insufficient contract balance to pay out winnings."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_4b96e57b5d7f4091de4be9622ad34241ccfb1a700b923347a68e040b594e2a21",
                                      "typeString": "literal_string \"Insufficient contract balance to pay out winnings.\""
                                    }
                                  ],
                                  "id": 364,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3623:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3623:96:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 374,
                              "nodeType": "ExpressionStatement",
                              "src": "3623:96:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 381,
                                    "name": "winnings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 349,
                                    "src": "3762:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 377,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "3741:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 378,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3745:6:0",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "3741:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 376,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3733:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 375,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3733:8:0",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 379,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3733:19:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3753:8:0",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "3733:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3733:38:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 383,
                              "nodeType": "ExpressionStatement",
                              "src": "3733:38:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "677bd9ff",
                  "id": 394,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimWinnings",
                  "nameLocation": "3105:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "3127:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "3119:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3119:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3118:17:0"
                  },
                  "returnParameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3145:0:0"
                  },
                  "scope": 436,
                  "src": "3096:737:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "3904:79:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 401,
                                "name": "events",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "3914:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                  "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                }
                              },
                              "id": 403,
                              "indexExpression": {
                                "id": 402,
                                "name": "eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 396,
                                "src": "3921:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3914:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Event_$46_storage",
                                "typeString": "struct DecentralizedBetting.Event storage ref"
                              }
                            },
                            "id": 404,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3930:13:0",
                            "memberName": "emergencyStop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45,
                            "src": "3914:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "3946:30:0",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 405,
                                  "name": "events",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "3947:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Event_$46_storage_$",
                                    "typeString": "mapping(uint256 => struct DecentralizedBetting.Event storage ref)"
                                  }
                                },
                                "id": 407,
                                "indexExpression": {
                                  "id": 406,
                                  "name": "eventId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 396,
                                  "src": "3954:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3947:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Event_$46_storage",
                                  "typeString": "struct DecentralizedBetting.Event storage ref"
                                }
                              },
                              "id": 408,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3963:13:0",
                              "memberName": "emergencyStop",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45,
                              "src": "3947:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3914:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 411,
                        "nodeType": "ExpressionStatement",
                        "src": "3914:62:0"
                      }
                    ]
                  },
                  "functionSelector": "8822e6fd",
                  "id": 413,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 399,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 398,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3894:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 103,
                        "src": "3894:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3894:9:0"
                    }
                  ],
                  "name": "toggleEmergencyStop",
                  "nameLocation": "3848:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "eventId",
                        "nameLocation": "3876:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3868:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3868:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3867:17:0"
                  },
                  "returnParameters": {
                    "id": 400,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3904:0:0"
                  },
                  "scope": 436,
                  "src": "3839:144:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 434,
                    "nodeType": "Block",
                    "src": "4028:96:0",
                    "statements": [
                      {
                        "assignments": [
                          419
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 419,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "4046:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 434,
                            "src": "4038:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 418,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4038:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 425,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 422,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4063:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DecentralizedBetting_$436",
                                  "typeString": "contract DecentralizedBetting"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DecentralizedBetting_$436",
                                  "typeString": "contract DecentralizedBetting"
                                }
                              ],
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4055:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 420,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4055:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4055:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4069:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4055:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4038:38:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 431,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "4110:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 428,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "4094:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4086:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 426,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4086:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4086:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4101:8:0",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "4086:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4086:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 433,
                        "nodeType": "ExpressionStatement",
                        "src": "4086:31:0"
                      }
                    ]
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 435,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 416,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 415,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4018:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 103,
                        "src": "4018:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4018:9:0"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "3998:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 414,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4006:2:0"
                  },
                  "returnParameters": {
                    "id": 417,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4028:0:0"
                  },
                  "scope": 436,
                  "src": "3989:135:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 437,
              "src": "344:3782:0",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:4095:0"
        },
        "id": 0
      }
    },
    "contracts": {
      "contracts/DecentralizedBetting.sol": {
        "DecentralizedBetting": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_socialOracleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_matchNFTAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "bets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "prediction",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                }
              ],
              "name": "claimWinnings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "createEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "events",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "outcome",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "resolved",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "totalPot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "winningPot",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "emergencyStop",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "matchNFTAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "prediction",
                  "type": "bool"
                }
              ],
              "name": "placeBet",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                }
              ],
              "name": "resolveEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "socialOracleAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                }
              ],
              "name": "toggleEmergencyStop",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 174,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address_fromMemory": {
                  "entryPoint": 189,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "allocate_memory": {
                  "entryPoint": 116,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 141,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constructor_DecentralizedBetting": {
                  "entryPoint": 420,
                  "id": 91,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 322,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 365,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 311,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_DecentralizedBetting": {
                  "entryPoint": 229,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 2
                },
                "finalize_allocation": {
                  "entryPoint": 76,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 54,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 381,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 268,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_address_to_address": {
                  "entryPoint": 333,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint256_to_uint256": {
                  "entryPoint": 392,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 156,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523462000031576200001f62000018620000e5565b90620001a4565b604051610f2a620001e48239610f2a90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160a01b031690565b90565b6001600160a01b038116036200003157565b905051906200008b826200009c565b9190604083820312620000315762000099906020620000dd8286620000ae565b9401620000ae565b620001086200110e80380380620000fc8162000074565b928339810190620000bd565b9091565b906001600160a01b03905b9181191691161790565b62000099906200008d906001600160a01b031682565b620000999062000121565b620000999062000137565b906200016162000099620001699262000142565b82546200010c565b9055565b6200009962000099620000999290565b906000199062000117565b906200019c6200009962000169926200016d565b82546200017d565b90620001db6200008b92620001bb3360006200014d565b620001d3620001cb60016200016d565b600162000188565b60046200014d565b60056200014d56fe6080604052600436101561001257600080fd5b60003560e01c80630b791430146100c257806330658198146100bd5780633ccfd60b146100b8578063677bd9ff146100b35780638822e6fd146100ae5780638da5cb5b146100a9578063977d996d146100a45780639a2e82401461009f5780639ed9c74d1461009a578063bed524d6146100955763f644b3bb036100d05761044e565b6103aa565b610396565b610343565b61031f565b610304565b6102e1565b6102c9565b6102ac565b610285565b6101fd565b805b036100d057565b600080fd5b905035906100e2826100c7565b565b906020828203126100d0576100f8916100d5565b90565b6100f86100f86100f89290565b90610112906100fb565b600052602052604060002090565b6100f89081565b6100f89054610120565b6100f8905b60ff1690565b6100f89054610131565b6100f89060081c610136565b6100f89054610146565b610167906002610108565b61017081610127565b9161017d60018301610127565b9161018a6002820161013c565b9161019760028301610152565b916101a460038201610127565b916100f860056101b660048501610127565b930161013c565b9052565b90815260e08101979695909490939092909160208601521515604085015215156060840152608083015260a082015260c0016100e29115159052565b346100d0576102316102186102133660046100e4565b61015c565b9361022897959793919360405190565b978897886101c1565b0390f35b60009103126100d057565b6100f8916008021c5b6001600160a01b031690565b906100f89154610240565b6100f860006004610255565b6101bd90610249565b6020810192916100e2919061026c565b346100d057610295366004610235565b6102316102a0610260565b60405191829182610275565b346100d0576102bc366004610235565b6102c461056c565b604051005b346100d0576102c46102dc3660046100e4565b6106fc565b346100d0576102c46102f43660046100e4565b610884565b6100f8600080610255565b346100d057610314366004610235565b6102316102a06102f9565b346100d0576102c46103323660046100e4565b610a3b565b6100f860006005610255565b346100d057610353366004610235565b6102316102a0610337565b8015156100c9565b905035906100e28261035e565b91906040838203126100d0576100f890602061038f82866100d5565b9401610366565b6102c46103a4366004610373565b90610d36565b346100d0576102c46103bd3660046100e4565b610eeb565b6100c981610249565b905035906100e2826103c2565b91906040838203126100d0576100f89060206103f482866100d5565b94016103cb565b6100f890610249906001600160a01b031682565b6100f8906103fb565b6100f89061040f565b9061011290610418565b9061043a61043f926003610108565b610421565b906100f860016101b684610127565b346100d0576104676104613660046103d8565b9061042b565b9061023161047460405190565b92839283908152901515602082015260400190565b6100f890610249565b6100f89054610489565b156104a357565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b6064820152608490fd5b6105176105086105036000610492565b610249565b61051133610249565b1461049c565b6100e261052b565b6040513d6000823e3d90fd5b600080808061053930610418565b3161054e61054961054984610492565b610418565b828215610563575bf11561055e57565b61051f565b506108fc610556565b6100e26104f3565b1561057b57565b60405162461bcd60e51b815260206004820152601c60248201527f4576656e7420686173206e6f74206265656e207265736f6c7665642e000000006044820152606490fd5b156105c757565b60405162461bcd60e51b815260206004820152601960248201527f5573657220686173206e6f2062657420746f20636c61696d2e000000000000006044820152606490fd5b90600019905b9181191691161790565b9061062c6100f8610633926100fb565b825461060c565b9055565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561066057565b610637565b634e487b7160e01b600052601260045260246000fd5b90610685565b9190565b908115610690570490565b610665565b1561069c57565b60405162461bcd60e51b815260206004820152603260248201527f496e73756666696369656e7420636f6e74726163742062616c616e636520746f604482015271103830bc9037baba103bb4b73734b733b99760711b6064820152608490fd5b600261071a6107158261070f8582610108565b01610152565b610574565b6107326100f861072b846003610108565b3390610421565b61073b81610127565b9261075460009461074e610681876100fb565b116105c0565b6107606001830161013c565b61078561077f61077a866107748682610108565b0161013c565b151590565b91151590565b0361080757826107e56107d58695946107d0876107bf60046107b3896107b960036107b3879e9d889e610108565b01610127565b99610108565b9201946107cb86610127565b61064d565b61067b565b916107df846100fb565b9061061c565b6107fb6107f130610418565b8290311015610695565b61054e61054933610418565b509050816108176100e2936100fb565b910161061c565b6100e2906108326105086105036000610492565b610857565b9060ff90610612565b906108506100f86106339261077a565b8254610837565b6100e290600561087e61087661087283610774866002610108565b1590565b926002610108565b01610840565b6100e29061081e565b6100e2906108a16105086105036000610492565b61091b565b60001981146106605760010190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176108ed57604052565b6108b5565b9081526040810192916100e29160200152565b9081526040810192916100e2916020019061026c565b6109256001610127565b90610939610932836108a6565b600161061c565b61095082600061094a826002610108565b0161061c565b61096181600161094a856002610108565b6109716105496105496004610492565b803b156100d0576109a660009291839261098a60405190565b948593849283919063938cfd6760e01b835289600484016108f2565b03925af1801561055e57610a25575b506109c66105496105496005610492565b803b156100d0576109fc6000929183926109df60405190565b94859384928391906394bf804d60e01b8352339060048401610905565b03925af1801561055e57610a0d5750565b6100e2906000610a1d81836108cb565b810190610235565b610a35906000610a1d81836108cb565b386109b5565b6100e29061088d565b15610a4b57565b60405162461bcd60e51b815260206004820152601860248201527f4576656e7420686173206265656e207265736f6c7665642e00000000000000006044820152606490fd5b906100e291610aaf610aaa610872600261070f8582610108565b610a44565b610c4f565b15610abb57565b60405162461bcd60e51b815260206004820152602160248201527f42657474696e672069732074656d706f726172696c792073757370656e6465646044820152601760f91b6064820152608490fd5b15610b1157565b60405162461bcd60e51b815260206004820152602260248201527f42657420616d6f756e74206d7573742062652067726561746572207468616e20604482015261181760f11b6064820152608490fd5b15610b6857565b60405162461bcd60e51b815260206004820152601e60248201527f557365722068617320616c726561647920706c616365642061206265742e00006044820152606490fd5b15610bb457565b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21032bb32b73a1024a21760791b6044820152606490fd5b906100e2610bfa60405190565b92836108cb565b6100f86040610bed565b6001610c3160206100e294610c2a610c24600083015190565b8661061c565b0151151590565b9101610840565b906100e291610c0b565b9190820180921161066057565b600291610c6c610c6761087260056107748688610108565b610ab4565b610d1f6000610c84610c7d826100fb565b3411610b0a565b610d01600391610cb0610c9e826107b361072b8a88610108565b610caa610681846100fb565b14610b61565b610cd4610cc1826107b3898b610108565b610ccd610681846100fb565b1415610bad565b610ce7610cdf610c01565b913490830152565b8415156020820152610cfc61072b8785610108565b610c38565b610d0b8486610108565b016107df610d1882610127565b3490610c42565b610d27575050565b610d0b6004916100e293610108565b906100e291610a90565b6100e290610d546105086105036000610492565b6100e290610d6d610aaa610872600261070f8582610108565b610e1e565b905051906100e28261035e565b91906040838203126100d0576100f8906020610d9b8286610d72565b9401610d72565b15610da957565b60405162461bcd60e51b8152602060048201526024808201527f5175657374696f6e206f7574636f6d65206e6f742064657465726d696e6564206044820152633cb2ba1760e11b6064820152608490fd5b9061ff009060081b610612565b90610e176100f86106339261077a565b8254610dfa565b6002610e3f610e3260006107b38585610108565b610ccd61068160006100fb565b610e4f6105496105496004610492565b906040610e5b60405190565b6325aaf90560e01b81526004810185905292839060249082905afa801561055e576100e293610eaa610eb092600195600080919092610eb6575b50610e9f90610da2565b8461087e8482610108565b82610108565b01610e07565b610e9f9250610edd915060403d604011610ee4575b610ed581836108cb565b810190610d7f565b9091610e95565b503d610ecb565b6100e290610d4056fea264697066735822122075c0e6b6db0e16cb135e2b9236f02764a4f65e70dac71030f9501e0a1dc7327964736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x31 JUMPI PUSH3 0x1F PUSH3 0x18 PUSH3 0xE5 JUMP JUMPDEST SWAP1 PUSH3 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2A PUSH3 0x1E4 DUP3 CODECOPY PUSH2 0xF2A SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x6E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x36 JUMP JUMPDEST SWAP1 PUSH3 0x8B PUSH3 0x83 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH3 0x31 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x8B DUP3 PUSH3 0x9C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH3 0x31 JUMPI PUSH3 0x99 SWAP1 PUSH1 0x20 PUSH3 0xDD DUP3 DUP7 PUSH3 0xAE JUMP JUMPDEST SWAP5 ADD PUSH3 0xAE JUMP JUMPDEST PUSH3 0x108 PUSH3 0x110E DUP1 CODESIZE SUB DUP1 PUSH3 0xFC DUP2 PUSH3 0x74 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xBD JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x8D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x121 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x137 JUMP JUMPDEST SWAP1 PUSH3 0x161 PUSH3 0x99 PUSH3 0x169 SWAP3 PUSH3 0x142 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x10C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x99 PUSH3 0x99 PUSH3 0x99 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH3 0x117 JUMP JUMPDEST SWAP1 PUSH3 0x19C PUSH3 0x99 PUSH3 0x169 SWAP3 PUSH3 0x16D JUMP JUMPDEST DUP3 SLOAD PUSH3 0x17D JUMP JUMPDEST SWAP1 PUSH3 0x1DB PUSH3 0x8B SWAP3 PUSH3 0x1BB CALLER PUSH1 0x0 PUSH3 0x14D JUMP JUMPDEST PUSH3 0x1D3 PUSH3 0x1CB PUSH1 0x1 PUSH3 0x16D JUMP JUMPDEST PUSH1 0x1 PUSH3 0x188 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x14D JUMP JUMPDEST PUSH1 0x5 PUSH3 0x14D JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB791430 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x30658198 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x677BD9FF EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8822E6FD EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x977D996D EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x9A2E8240 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x9ED9C74D EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xBED524D6 EQ PUSH2 0x95 JUMPI PUSH4 0xF644B3BB SUB PUSH2 0xD0 JUMPI PUSH2 0x44E JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0x304 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0xD0 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE2 DUP3 PUSH2 0xC7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xD0 JUMPI PUSH2 0xF8 SWAP2 PUSH2 0xD5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0xF8 PUSH2 0xF8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x112 SWAP1 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xF8 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xF8 SWAP1 SLOAD PUSH2 0x120 JUMP JUMPDEST PUSH2 0xF8 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xF8 SWAP1 SLOAD PUSH2 0x131 JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH1 0x8 SHR PUSH2 0x136 JUMP JUMPDEST PUSH2 0xF8 SWAP1 SLOAD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x167 SWAP1 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x170 DUP2 PUSH2 0x127 JUMP JUMPDEST SWAP2 PUSH2 0x17D PUSH1 0x1 DUP4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP2 PUSH2 0x18A PUSH1 0x2 DUP3 ADD PUSH2 0x13C JUMP JUMPDEST SWAP2 PUSH2 0x197 PUSH1 0x2 DUP4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 PUSH2 0x1A4 PUSH1 0x3 DUP3 ADD PUSH2 0x127 JUMP JUMPDEST SWAP2 PUSH2 0xF8 PUSH1 0x5 PUSH2 0x1B6 PUSH1 0x4 DUP6 ADD PUSH2 0x127 JUMP JUMPDEST SWAP4 ADD PUSH2 0x13C JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD SWAP8 SWAP7 SWAP6 SWAP1 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xE2 SWAP2 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x231 PUSH2 0x218 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST SWAP4 PUSH2 0x228 SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x1C1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xD0 JUMPI JUMP JUMPDEST PUSH2 0xF8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xF8 SWAP2 SLOAD PUSH2 0x240 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH1 0x4 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x1BD SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2A0 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x275 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x2C4 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2C4 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2C4 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 DUP1 PUSH2 0x255 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2A0 PUSH2 0x2F9 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2C4 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH1 0x5 PUSH2 0x255 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2A0 PUSH2 0x337 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xC9 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE2 DUP3 PUSH2 0x35E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD0 JUMPI PUSH2 0xF8 SWAP1 PUSH1 0x20 PUSH2 0x38F DUP3 DUP7 PUSH2 0xD5 JUMP JUMPDEST SWAP5 ADD PUSH2 0x366 JUMP JUMPDEST PUSH2 0x2C4 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x373 JUMP JUMPDEST SWAP1 PUSH2 0xD36 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2C4 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xC9 DUP2 PUSH2 0x249 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE2 DUP3 PUSH2 0x3C2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD0 JUMPI PUSH2 0xF8 SWAP1 PUSH1 0x20 PUSH2 0x3F4 DUP3 DUP7 PUSH2 0xD5 JUMP JUMPDEST SWAP5 ADD PUSH2 0x3CB JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH2 0x249 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH2 0x40F JUMP JUMPDEST SWAP1 PUSH2 0x112 SWAP1 PUSH2 0x418 JUMP JUMPDEST SWAP1 PUSH2 0x43A PUSH2 0x43F SWAP3 PUSH1 0x3 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST SWAP1 PUSH2 0xF8 PUSH1 0x1 PUSH2 0x1B6 DUP5 PUSH2 0x127 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x467 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 PUSH2 0x42B JUMP JUMPDEST SWAP1 PUSH2 0x231 PUSH2 0x474 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 SWAP1 DUP2 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH2 0xF8 SWAP1 SLOAD PUSH2 0x489 JUMP JUMPDEST ISZERO PUSH2 0x4A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x517 PUSH2 0x508 PUSH2 0x503 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x249 JUMP JUMPDEST PUSH2 0x511 CALLER PUSH2 0x249 JUMP JUMPDEST EQ PUSH2 0x49C JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x539 ADDRESS PUSH2 0x418 JUMP JUMPDEST BALANCE PUSH2 0x54E PUSH2 0x549 PUSH2 0x549 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x563 JUMPI JUMPDEST CALL ISZERO PUSH2 0x55E JUMPI JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x556 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x4F3 JUMP JUMPDEST ISZERO PUSH2 0x57B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420686173206E6F74206265656E207265736F6C7665642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x5C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220686173206E6F2062657420746F20636C61696D2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x62C PUSH2 0xF8 PUSH2 0x633 SWAP3 PUSH2 0xFB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x60C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x660 JUMPI JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x685 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x690 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST ISZERO PUSH2 0x69C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520746F PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x103830BC9037BABA103BB4B73734B733B997 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH2 0x71A PUSH2 0x715 DUP3 PUSH2 0x70F DUP6 DUP3 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x732 PUSH2 0xF8 PUSH2 0x72B DUP5 PUSH1 0x3 PUSH2 0x108 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH2 0x127 JUMP JUMPDEST SWAP3 PUSH2 0x754 PUSH1 0x0 SWAP5 PUSH2 0x74E PUSH2 0x681 DUP8 PUSH2 0xFB JUMP JUMPDEST GT PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x760 PUSH1 0x1 DUP4 ADD PUSH2 0x13C JUMP JUMPDEST PUSH2 0x785 PUSH2 0x77F PUSH2 0x77A DUP7 PUSH2 0x774 DUP7 DUP3 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x13C JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ISZERO ISZERO SWAP1 JUMP JUMPDEST SUB PUSH2 0x807 JUMPI DUP3 PUSH2 0x7E5 PUSH2 0x7D5 DUP7 SWAP6 SWAP5 PUSH2 0x7D0 DUP8 PUSH2 0x7BF PUSH1 0x4 PUSH2 0x7B3 DUP10 PUSH2 0x7B9 PUSH1 0x3 PUSH2 0x7B3 DUP8 SWAP15 SWAP14 DUP9 SWAP15 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x127 JUMP JUMPDEST SWAP10 PUSH2 0x108 JUMP JUMPDEST SWAP3 ADD SWAP5 PUSH2 0x7CB DUP7 PUSH2 0x127 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST SWAP2 PUSH2 0x7DF DUP5 PUSH2 0xFB JUMP JUMPDEST SWAP1 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x7FB PUSH2 0x7F1 ADDRESS PUSH2 0x418 JUMP JUMPDEST DUP3 SWAP1 BALANCE LT ISZERO PUSH2 0x695 JUMP JUMPDEST PUSH2 0x54E PUSH2 0x549 CALLER PUSH2 0x418 JUMP JUMPDEST POP SWAP1 POP DUP2 PUSH2 0x817 PUSH2 0xE2 SWAP4 PUSH2 0xFB JUMP JUMPDEST SWAP2 ADD PUSH2 0x61C JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0x832 PUSH2 0x508 PUSH2 0x503 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x612 JUMP JUMPDEST SWAP1 PUSH2 0x850 PUSH2 0xF8 PUSH2 0x633 SWAP3 PUSH2 0x77A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x837 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH1 0x5 PUSH2 0x87E PUSH2 0x876 PUSH2 0x872 DUP4 PUSH2 0x774 DUP7 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x840 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0x8A1 PUSH2 0x508 PUSH2 0x503 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x660 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE2 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x925 PUSH1 0x1 PUSH2 0x127 JUMP JUMPDEST SWAP1 PUSH2 0x939 PUSH2 0x932 DUP4 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x950 DUP3 PUSH1 0x0 PUSH2 0x94A DUP3 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x61C JUMP JUMPDEST PUSH2 0x961 DUP2 PUSH1 0x1 PUSH2 0x94A DUP6 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x971 PUSH2 0x549 PUSH2 0x549 PUSH1 0x4 PUSH2 0x492 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xD0 JUMPI PUSH2 0x9A6 PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH2 0x98A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x938CFD67 PUSH1 0xE0 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD PUSH2 0x8F2 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x55E JUMPI PUSH2 0xA25 JUMPI JUMPDEST POP PUSH2 0x9C6 PUSH2 0x549 PUSH2 0x549 PUSH1 0x5 PUSH2 0x492 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xD0 JUMPI PUSH2 0x9FC PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH2 0x9DF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x94BF804D PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 PUSH1 0x4 DUP5 ADD PUSH2 0x905 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x55E JUMPI PUSH2 0xA0D JUMPI POP JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH1 0x0 PUSH2 0xA1D DUP2 DUP4 PUSH2 0x8CB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x235 JUMP JUMPDEST PUSH2 0xA35 SWAP1 PUSH1 0x0 PUSH2 0xA1D DUP2 DUP4 PUSH2 0x8CB JUMP JUMPDEST CODESIZE PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0x88D JUMP JUMPDEST ISZERO PUSH2 0xA4B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420686173206265656E207265736F6C7665642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xE2 SWAP2 PUSH2 0xAAF PUSH2 0xAAA PUSH2 0x872 PUSH1 0x2 PUSH2 0x70F DUP6 DUP3 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST ISZERO PUSH2 0xABB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E672069732074656D706F726172696C792073757370656E646564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xB11 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1817 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xB68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C726561647920706C616365642061206265742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xBB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x24B73B30B634B21032BB32B73A1024A217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xE2 PUSH2 0xBFA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x40 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x1 PUSH2 0xC31 PUSH1 0x20 PUSH2 0xE2 SWAP5 PUSH2 0xC2A PUSH2 0xC24 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x61C JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x840 JUMP JUMPDEST SWAP1 PUSH2 0xE2 SWAP2 PUSH2 0xC0B JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x660 JUMPI JUMP JUMPDEST PUSH1 0x2 SWAP2 PUSH2 0xC6C PUSH2 0xC67 PUSH2 0x872 PUSH1 0x5 PUSH2 0x774 DUP7 DUP9 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0xD1F PUSH1 0x0 PUSH2 0xC84 PUSH2 0xC7D DUP3 PUSH2 0xFB JUMP JUMPDEST CALLVALUE GT PUSH2 0xB0A JUMP JUMPDEST PUSH2 0xD01 PUSH1 0x3 SWAP2 PUSH2 0xCB0 PUSH2 0xC9E DUP3 PUSH2 0x7B3 PUSH2 0x72B DUP11 DUP9 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xCAA PUSH2 0x681 DUP5 PUSH2 0xFB JUMP JUMPDEST EQ PUSH2 0xB61 JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0xCC1 DUP3 PUSH2 0x7B3 DUP10 DUP12 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x681 DUP5 PUSH2 0xFB JUMP JUMPDEST EQ ISZERO PUSH2 0xBAD JUMP JUMPDEST PUSH2 0xCE7 PUSH2 0xCDF PUSH2 0xC01 JUMP JUMPDEST SWAP2 CALLVALUE SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST DUP5 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xCFC PUSH2 0x72B DUP8 DUP6 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST PUSH2 0xD0B DUP5 DUP7 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x7DF PUSH2 0xD18 DUP3 PUSH2 0x127 JUMP JUMPDEST CALLVALUE SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xD27 JUMPI POP POP JUMP JUMPDEST PUSH2 0xD0B PUSH1 0x4 SWAP2 PUSH2 0xE2 SWAP4 PUSH2 0x108 JUMP JUMPDEST SWAP1 PUSH2 0xE2 SWAP2 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0xD54 PUSH2 0x508 PUSH2 0x503 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0xD6D PUSH2 0xAAA PUSH2 0x872 PUSH1 0x2 PUSH2 0x70F DUP6 DUP3 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE2 DUP3 PUSH2 0x35E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD0 JUMPI PUSH2 0xF8 SWAP1 PUSH1 0x20 PUSH2 0xD9B DUP3 DUP7 PUSH2 0xD72 JUMP JUMPDEST SWAP5 ADD PUSH2 0xD72 JUMP JUMPDEST ISZERO PUSH2 0xDA9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5175657374696F6E206F7574636F6D65206E6F742064657465726D696E656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3CB2BA17 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x612 JUMP JUMPDEST SWAP1 PUSH2 0xE17 PUSH2 0xF8 PUSH2 0x633 SWAP3 PUSH2 0x77A JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE3F PUSH2 0xE32 PUSH1 0x0 PUSH2 0x7B3 DUP6 DUP6 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x681 PUSH1 0x0 PUSH2 0xFB JUMP JUMPDEST PUSH2 0xE4F PUSH2 0x549 PUSH2 0x549 PUSH1 0x4 PUSH2 0x492 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0xE5B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x25AAF905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP3 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x55E JUMPI PUSH2 0xE2 SWAP4 PUSH2 0xEAA PUSH2 0xEB0 SWAP3 PUSH1 0x1 SWAP6 PUSH1 0x0 DUP1 SWAP2 SWAP1 SWAP3 PUSH2 0xEB6 JUMPI JUMPDEST POP PUSH2 0xE9F SWAP1 PUSH2 0xDA2 JUMP JUMPDEST DUP5 PUSH2 0x87E DUP5 DUP3 PUSH2 0x108 JUMP JUMPDEST DUP3 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0xE07 JUMP JUMPDEST PUSH2 0xE9F SWAP3 POP PUSH2 0xEDD SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xEE4 JUMPI JUMPDEST PUSH2 0xED5 DUP2 DUP4 PUSH2 0x8CB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xD7F JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0xE95 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xECB JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0xD40 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xC0E6B6DB0E16CB135E2B9236F02764A4F65E70DAC710 ADDRESS 0xF9 POP 0x1E EXP SAR 0xC7 ORIGIN PUSH26 0x64736F6C63430008180033000000000000000000000000000000 ",
              "sourceMap": "344:3782:0:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;344:3782:0;;;;;;-1:-1:-1;;;;;344:3782:0;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;344:3782:0;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;344:3782:0;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;;;;344:3782:0;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;344:3782:0;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;;344:3782:0;;;;;;;;;;:::i;:::-;;;;:::i;897:224::-;;1028:42;1080:34;897:224;975:18;983:10;975:18;;:::i;:::-;1003:15;;1017:1;1003:15;:::i;:::-;1017:1;1003:15;:::i;:::-;1028:42;;:::i;:::-;1080:34;;:::i"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 565,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 971,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 870,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 3442,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_boolt_bool_fromMemory": {
                  "entryPoint": 3455,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_fromMemory": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 228,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 213,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256t_address": {
                  "entryPoint": 984,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_uint256t_bool": {
                  "entryPoint": 883,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_address": {
                  "entryPoint": 620,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_stringliteral": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_0fce": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_16e2": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_16e238f7883fb4fb82ddbc44a9f331fb5f3a15ef3e1511f41f4c80bef4c39405": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_40d5": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_4a43": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_4a43c32c6bd75a941910da7f2376eccfceb77541edab81c68bc9b8ce1daccb3d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_4b96": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_52a1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_7836": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_7836ea2c7cfc79c93ea92b719fa63a8572d19683acc4b19b3878e3eaa197ef6d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_9691": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_c2a1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_d6e1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 629,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_0fce": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_40d5": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_4b96": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_52a1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_c2a1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_address": {
                  "entryPoint": 2309,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 445,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 2290,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_bool_bool_uint256_uint256_bool": {
                  "entryPoint": 449,
                  "id": null,
                  "parameterSlots": 8,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 3053,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_struct_struct_Bet_storage_ptr": {
                  "entryPoint": 3073,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 3138,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 1659,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 1613,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_payable_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 1048,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address_payable": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IMatchNFT": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_ISocialOracle": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DecentralizedBetting_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IMatchNFT_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_ISocialOracle_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_struct_Bet_storage_to_struct_Bet_ptr": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1039,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address_payable": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IMatchNFT": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_ISocialOracle": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1019,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 251,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_struct_to_storage_from_struct_Bet_to_struct_Bet": {
                  "entryPoint": 3083,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "external_fun_bets": {
                  "entryPoint": 1102,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_claimWinnings": {
                  "entryPoint": 713,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_createEvent": {
                  "entryPoint": 799,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_events": {
                  "entryPoint": 509,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_matchNFTAddress": {
                  "entryPoint": 835,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 772,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_placeBet": {
                  "entryPoint": 918,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_resolveEvent": {
                  "entryPoint": 938,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_socialOracleAddress": {
                  "entryPoint": 645,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_toggleEmergencyStop": {
                  "entryPoint": 737,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_withdraw": {
                  "entryPoint": 684,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 576,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_1t_bool": {
                  "entryPoint": 326,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_address": {
                  "entryPoint": 1161,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_bool": {
                  "entryPoint": 305,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_uint256": {
                  "entryPoint": 288,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2251,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_claimWinnings": {
                  "entryPoint": 1788,
                  "id": 394,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_createEvent": {
                  "entryPoint": 2619,
                  "id": 162,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_createEvent_inner": {
                  "entryPoint": 2331,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_placeBet": {
                  "entryPoint": 3382,
                  "id": 245,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_placeBet_inner": {
                  "entryPoint": 3151,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_resolveEvent": {
                  "entryPoint": 3819,
                  "id": 296,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_resolveEvent_inner": {
                  "entryPoint": 3614,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_toggleEmergencyStop": {
                  "entryPoint": 2180,
                  "id": 413,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_toggleEmergencyStop_inner": {
                  "entryPoint": 2135,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_withdraw": {
                  "entryPoint": 1388,
                  "id": 435,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_withdraw_inner": {
                  "entryPoint": 1323,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "getter_fun_bets": {
                  "entryPoint": 1067,
                  "id": 62,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "getter_fun_events": {
                  "entryPoint": 348,
                  "id": 55,
                  "parameterSlots": 1,
                  "returnSlots": 7
                },
                "getter_fun_matchNFTAddress": {
                  "entryPoint": 823,
                  "id": 66,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_owner": {
                  "entryPoint": 761,
                  "id": 48,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_socialOracleAddress": {
                  "entryPoint": 608,
                  "id": 64,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 2214,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_struct_Bet_storage_of_address": {
                  "entryPoint": 1057,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_mapping_address_struct_Bet_storage_of_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_struct_Event_storage_of_uint256": {
                  "entryPoint": 264,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_eventNotResolved": {
                  "entryPoint": null,
                  "id": 118,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_eventNotResolved_170": {
                  "entryPoint": 2704,
                  "id": 118,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner": {
                  "entryPoint": 2189,
                  "id": 103,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_250": {
                  "entryPoint": 3392,
                  "id": 103,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_399": {
                  "entryPoint": 2078,
                  "id": 103,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_416": {
                  "entryPoint": 1267,
                  "id": 103,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 1591,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 1637,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2229,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 597,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 1170,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": 338,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_t_bool": {
                  "entryPoint": 316,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 295,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 2826,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_0fce": {
                  "entryPoint": 1180,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_16e2": {
                  "entryPoint": 3490,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_40d5": {
                  "entryPoint": 1472,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_4a43": {
                  "entryPoint": 2740,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_4b96": {
                  "entryPoint": 1685,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_52a1": {
                  "entryPoint": 2628,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_9691": {
                  "entryPoint": 2913,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c2a1": {
                  "entryPoint": 1396,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_d6e1": {
                  "entryPoint": 2989,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 1311,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_0": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_8_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "store_literal_in_memory_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_16e238f7883fb4fb82ddbc44a9f331fb5f3a15ef3e1511f41f4c80bef4c39405": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_40d556fd9e2a3fa92702df8f90e763972d93be83403bff576df4ecf8e3433fba": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_4a43c32c6bd75a941910da7f2376eccfceb77541edab81c68bc9b8ce1daccb3d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_4b96e57b5d7f4091de4be9622ad34241ccfb1a700b923347a68e040b594e2a21": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_52a1acb2d1a25435bd0079d3441dae800274afaf2e0ac3e6a407b9e6733ed0ed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_7836ea2c7cfc79c93ea92b719fa63a8572d19683acc4b19b3878e3eaa197ef6d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_96913544ff29fe8a60e7cae7a4daaed83d4e1a5a149a55fc3f7b64553246f3ee": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_c2a178c9284e5d0a5c9fbf1b3a7f27d86500c02009f06d49123410a5e03b3a1d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_d6e17c358c741c8d421a59fbb90647947f8a9578e0009b061eb5bf936b97f81d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_shift": {
                  "entryPoint": 1548,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 2103,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_1": {
                  "entryPoint": 3578,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_bool_to_bool": {
                  "entryPoint": 3591,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_t_bool": {
                  "entryPoint": 2112,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_struct_Bet_to_struct_Bet": {
                  "entryPoint": 3128,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint256_to_uint256": {
                  "entryPoint": 1564,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 962,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 862,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 199,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "write_to_memory_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c80630b791430146100c257806330658198146100bd5780633ccfd60b146100b8578063677bd9ff146100b35780638822e6fd146100ae5780638da5cb5b146100a9578063977d996d146100a45780639a2e82401461009f5780639ed9c74d1461009a578063bed524d6146100955763f644b3bb036100d05761044e565b6103aa565b610396565b610343565b61031f565b610304565b6102e1565b6102c9565b6102ac565b610285565b6101fd565b805b036100d057565b600080fd5b905035906100e2826100c7565b565b906020828203126100d0576100f8916100d5565b90565b6100f86100f86100f89290565b90610112906100fb565b600052602052604060002090565b6100f89081565b6100f89054610120565b6100f8905b60ff1690565b6100f89054610131565b6100f89060081c610136565b6100f89054610146565b610167906002610108565b61017081610127565b9161017d60018301610127565b9161018a6002820161013c565b9161019760028301610152565b916101a460038201610127565b916100f860056101b660048501610127565b930161013c565b9052565b90815260e08101979695909490939092909160208601521515604085015215156060840152608083015260a082015260c0016100e29115159052565b346100d0576102316102186102133660046100e4565b61015c565b9361022897959793919360405190565b978897886101c1565b0390f35b60009103126100d057565b6100f8916008021c5b6001600160a01b031690565b906100f89154610240565b6100f860006004610255565b6101bd90610249565b6020810192916100e2919061026c565b346100d057610295366004610235565b6102316102a0610260565b60405191829182610275565b346100d0576102bc366004610235565b6102c461056c565b604051005b346100d0576102c46102dc3660046100e4565b6106fc565b346100d0576102c46102f43660046100e4565b610884565b6100f8600080610255565b346100d057610314366004610235565b6102316102a06102f9565b346100d0576102c46103323660046100e4565b610a3b565b6100f860006005610255565b346100d057610353366004610235565b6102316102a0610337565b8015156100c9565b905035906100e28261035e565b91906040838203126100d0576100f890602061038f82866100d5565b9401610366565b6102c46103a4366004610373565b90610d36565b346100d0576102c46103bd3660046100e4565b610eeb565b6100c981610249565b905035906100e2826103c2565b91906040838203126100d0576100f89060206103f482866100d5565b94016103cb565b6100f890610249906001600160a01b031682565b6100f8906103fb565b6100f89061040f565b9061011290610418565b9061043a61043f926003610108565b610421565b906100f860016101b684610127565b346100d0576104676104613660046103d8565b9061042b565b9061023161047460405190565b92839283908152901515602082015260400190565b6100f890610249565b6100f89054610489565b156104a357565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b6064820152608490fd5b6105176105086105036000610492565b610249565b61051133610249565b1461049c565b6100e261052b565b6040513d6000823e3d90fd5b600080808061053930610418565b3161054e61054961054984610492565b610418565b828215610563575bf11561055e57565b61051f565b506108fc610556565b6100e26104f3565b1561057b57565b60405162461bcd60e51b815260206004820152601c60248201527f4576656e7420686173206e6f74206265656e207265736f6c7665642e000000006044820152606490fd5b156105c757565b60405162461bcd60e51b815260206004820152601960248201527f5573657220686173206e6f2062657420746f20636c61696d2e000000000000006044820152606490fd5b90600019905b9181191691161790565b9061062c6100f8610633926100fb565b825461060c565b9055565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561066057565b610637565b634e487b7160e01b600052601260045260246000fd5b90610685565b9190565b908115610690570490565b610665565b1561069c57565b60405162461bcd60e51b815260206004820152603260248201527f496e73756666696369656e7420636f6e74726163742062616c616e636520746f604482015271103830bc9037baba103bb4b73734b733b99760711b6064820152608490fd5b600261071a6107158261070f8582610108565b01610152565b610574565b6107326100f861072b846003610108565b3390610421565b61073b81610127565b9261075460009461074e610681876100fb565b116105c0565b6107606001830161013c565b61078561077f61077a866107748682610108565b0161013c565b151590565b91151590565b0361080757826107e56107d58695946107d0876107bf60046107b3896107b960036107b3879e9d889e610108565b01610127565b99610108565b9201946107cb86610127565b61064d565b61067b565b916107df846100fb565b9061061c565b6107fb6107f130610418565b8290311015610695565b61054e61054933610418565b509050816108176100e2936100fb565b910161061c565b6100e2906108326105086105036000610492565b610857565b9060ff90610612565b906108506100f86106339261077a565b8254610837565b6100e290600561087e61087661087283610774866002610108565b1590565b926002610108565b01610840565b6100e29061081e565b6100e2906108a16105086105036000610492565b61091b565b60001981146106605760010190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176108ed57604052565b6108b5565b9081526040810192916100e29160200152565b9081526040810192916100e2916020019061026c565b6109256001610127565b90610939610932836108a6565b600161061c565b61095082600061094a826002610108565b0161061c565b61096181600161094a856002610108565b6109716105496105496004610492565b803b156100d0576109a660009291839261098a60405190565b948593849283919063938cfd6760e01b835289600484016108f2565b03925af1801561055e57610a25575b506109c66105496105496005610492565b803b156100d0576109fc6000929183926109df60405190565b94859384928391906394bf804d60e01b8352339060048401610905565b03925af1801561055e57610a0d5750565b6100e2906000610a1d81836108cb565b810190610235565b610a35906000610a1d81836108cb565b386109b5565b6100e29061088d565b15610a4b57565b60405162461bcd60e51b815260206004820152601860248201527f4576656e7420686173206265656e207265736f6c7665642e00000000000000006044820152606490fd5b906100e291610aaf610aaa610872600261070f8582610108565b610a44565b610c4f565b15610abb57565b60405162461bcd60e51b815260206004820152602160248201527f42657474696e672069732074656d706f726172696c792073757370656e6465646044820152601760f91b6064820152608490fd5b15610b1157565b60405162461bcd60e51b815260206004820152602260248201527f42657420616d6f756e74206d7573742062652067726561746572207468616e20604482015261181760f11b6064820152608490fd5b15610b6857565b60405162461bcd60e51b815260206004820152601e60248201527f557365722068617320616c726561647920706c616365642061206265742e00006044820152606490fd5b15610bb457565b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21032bb32b73a1024a21760791b6044820152606490fd5b906100e2610bfa60405190565b92836108cb565b6100f86040610bed565b6001610c3160206100e294610c2a610c24600083015190565b8661061c565b0151151590565b9101610840565b906100e291610c0b565b9190820180921161066057565b600291610c6c610c6761087260056107748688610108565b610ab4565b610d1f6000610c84610c7d826100fb565b3411610b0a565b610d01600391610cb0610c9e826107b361072b8a88610108565b610caa610681846100fb565b14610b61565b610cd4610cc1826107b3898b610108565b610ccd610681846100fb565b1415610bad565b610ce7610cdf610c01565b913490830152565b8415156020820152610cfc61072b8785610108565b610c38565b610d0b8486610108565b016107df610d1882610127565b3490610c42565b610d27575050565b610d0b6004916100e293610108565b906100e291610a90565b6100e290610d546105086105036000610492565b6100e290610d6d610aaa610872600261070f8582610108565b610e1e565b905051906100e28261035e565b91906040838203126100d0576100f8906020610d9b8286610d72565b9401610d72565b15610da957565b60405162461bcd60e51b8152602060048201526024808201527f5175657374696f6e206f7574636f6d65206e6f742064657465726d696e6564206044820152633cb2ba1760e11b6064820152608490fd5b9061ff009060081b610612565b90610e176100f86106339261077a565b8254610dfa565b6002610e3f610e3260006107b38585610108565b610ccd61068160006100fb565b610e4f6105496105496004610492565b906040610e5b60405190565b6325aaf90560e01b81526004810185905292839060249082905afa801561055e576100e293610eaa610eb092600195600080919092610eb6575b50610e9f90610da2565b8461087e8482610108565b82610108565b01610e07565b610e9f9250610edd915060403d604011610ee4575b610ed581836108cb565b810190610d7f565b9091610e95565b503d610ecb565b6100e290610d4056fea264697066735822122075c0e6b6db0e16cb135e2b9236f02764a4f65e70dac71030f9501e0a1dc7327964736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB791430 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x30658198 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x677BD9FF EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8822E6FD EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x977D996D EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x9A2E8240 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x9ED9C74D EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xBED524D6 EQ PUSH2 0x95 JUMPI PUSH4 0xF644B3BB SUB PUSH2 0xD0 JUMPI PUSH2 0x44E JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0x304 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0xD0 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE2 DUP3 PUSH2 0xC7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xD0 JUMPI PUSH2 0xF8 SWAP2 PUSH2 0xD5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0xF8 PUSH2 0xF8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x112 SWAP1 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xF8 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xF8 SWAP1 SLOAD PUSH2 0x120 JUMP JUMPDEST PUSH2 0xF8 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xF8 SWAP1 SLOAD PUSH2 0x131 JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH1 0x8 SHR PUSH2 0x136 JUMP JUMPDEST PUSH2 0xF8 SWAP1 SLOAD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x167 SWAP1 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x170 DUP2 PUSH2 0x127 JUMP JUMPDEST SWAP2 PUSH2 0x17D PUSH1 0x1 DUP4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP2 PUSH2 0x18A PUSH1 0x2 DUP3 ADD PUSH2 0x13C JUMP JUMPDEST SWAP2 PUSH2 0x197 PUSH1 0x2 DUP4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 PUSH2 0x1A4 PUSH1 0x3 DUP3 ADD PUSH2 0x127 JUMP JUMPDEST SWAP2 PUSH2 0xF8 PUSH1 0x5 PUSH2 0x1B6 PUSH1 0x4 DUP6 ADD PUSH2 0x127 JUMP JUMPDEST SWAP4 ADD PUSH2 0x13C JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD SWAP8 SWAP7 SWAP6 SWAP1 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xE2 SWAP2 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x231 PUSH2 0x218 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST SWAP4 PUSH2 0x228 SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x1C1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xD0 JUMPI JUMP JUMPDEST PUSH2 0xF8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xF8 SWAP2 SLOAD PUSH2 0x240 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH1 0x4 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x1BD SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2A0 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x275 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x2C4 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2C4 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2C4 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 DUP1 PUSH2 0x255 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2A0 PUSH2 0x2F9 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2C4 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x0 PUSH1 0x5 PUSH2 0x255 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x235 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2A0 PUSH2 0x337 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xC9 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE2 DUP3 PUSH2 0x35E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD0 JUMPI PUSH2 0xF8 SWAP1 PUSH1 0x20 PUSH2 0x38F DUP3 DUP7 PUSH2 0xD5 JUMP JUMPDEST SWAP5 ADD PUSH2 0x366 JUMP JUMPDEST PUSH2 0x2C4 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x373 JUMP JUMPDEST SWAP1 PUSH2 0xD36 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x2C4 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xC9 DUP2 PUSH2 0x249 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE2 DUP3 PUSH2 0x3C2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD0 JUMPI PUSH2 0xF8 SWAP1 PUSH1 0x20 PUSH2 0x3F4 DUP3 DUP7 PUSH2 0xD5 JUMP JUMPDEST SWAP5 ADD PUSH2 0x3CB JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH2 0x249 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH2 0x40F JUMP JUMPDEST SWAP1 PUSH2 0x112 SWAP1 PUSH2 0x418 JUMP JUMPDEST SWAP1 PUSH2 0x43A PUSH2 0x43F SWAP3 PUSH1 0x3 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST SWAP1 PUSH2 0xF8 PUSH1 0x1 PUSH2 0x1B6 DUP5 PUSH2 0x127 JUMP JUMPDEST CALLVALUE PUSH2 0xD0 JUMPI PUSH2 0x467 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 PUSH2 0x42B JUMP JUMPDEST SWAP1 PUSH2 0x231 PUSH2 0x474 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 SWAP1 DUP2 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF8 SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH2 0xF8 SWAP1 SLOAD PUSH2 0x489 JUMP JUMPDEST ISZERO PUSH2 0x4A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x517 PUSH2 0x508 PUSH2 0x503 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x249 JUMP JUMPDEST PUSH2 0x511 CALLER PUSH2 0x249 JUMP JUMPDEST EQ PUSH2 0x49C JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x539 ADDRESS PUSH2 0x418 JUMP JUMPDEST BALANCE PUSH2 0x54E PUSH2 0x549 PUSH2 0x549 DUP5 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x563 JUMPI JUMPDEST CALL ISZERO PUSH2 0x55E JUMPI JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x556 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x4F3 JUMP JUMPDEST ISZERO PUSH2 0x57B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420686173206E6F74206265656E207265736F6C7665642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x5C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220686173206E6F2062657420746F20636C61696D2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x62C PUSH2 0xF8 PUSH2 0x633 SWAP3 PUSH2 0xFB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x60C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x660 JUMPI JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x685 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x690 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST ISZERO PUSH2 0x69C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E636520746F PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x103830BC9037BABA103BB4B73734B733B997 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH2 0x71A PUSH2 0x715 DUP3 PUSH2 0x70F DUP6 DUP3 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x732 PUSH2 0xF8 PUSH2 0x72B DUP5 PUSH1 0x3 PUSH2 0x108 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH2 0x127 JUMP JUMPDEST SWAP3 PUSH2 0x754 PUSH1 0x0 SWAP5 PUSH2 0x74E PUSH2 0x681 DUP8 PUSH2 0xFB JUMP JUMPDEST GT PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x760 PUSH1 0x1 DUP4 ADD PUSH2 0x13C JUMP JUMPDEST PUSH2 0x785 PUSH2 0x77F PUSH2 0x77A DUP7 PUSH2 0x774 DUP7 DUP3 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x13C JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ISZERO ISZERO SWAP1 JUMP JUMPDEST SUB PUSH2 0x807 JUMPI DUP3 PUSH2 0x7E5 PUSH2 0x7D5 DUP7 SWAP6 SWAP5 PUSH2 0x7D0 DUP8 PUSH2 0x7BF PUSH1 0x4 PUSH2 0x7B3 DUP10 PUSH2 0x7B9 PUSH1 0x3 PUSH2 0x7B3 DUP8 SWAP15 SWAP14 DUP9 SWAP15 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x127 JUMP JUMPDEST SWAP10 PUSH2 0x108 JUMP JUMPDEST SWAP3 ADD SWAP5 PUSH2 0x7CB DUP7 PUSH2 0x127 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST SWAP2 PUSH2 0x7DF DUP5 PUSH2 0xFB JUMP JUMPDEST SWAP1 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x7FB PUSH2 0x7F1 ADDRESS PUSH2 0x418 JUMP JUMPDEST DUP3 SWAP1 BALANCE LT ISZERO PUSH2 0x695 JUMP JUMPDEST PUSH2 0x54E PUSH2 0x549 CALLER PUSH2 0x418 JUMP JUMPDEST POP SWAP1 POP DUP2 PUSH2 0x817 PUSH2 0xE2 SWAP4 PUSH2 0xFB JUMP JUMPDEST SWAP2 ADD PUSH2 0x61C JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0x832 PUSH2 0x508 PUSH2 0x503 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x612 JUMP JUMPDEST SWAP1 PUSH2 0x850 PUSH2 0xF8 PUSH2 0x633 SWAP3 PUSH2 0x77A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x837 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH1 0x5 PUSH2 0x87E PUSH2 0x876 PUSH2 0x872 DUP4 PUSH2 0x774 DUP7 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x840 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0x8A1 PUSH2 0x508 PUSH2 0x503 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x660 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE2 SWAP2 PUSH1 0x20 ADD SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x925 PUSH1 0x1 PUSH2 0x127 JUMP JUMPDEST SWAP1 PUSH2 0x939 PUSH2 0x932 DUP4 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x950 DUP3 PUSH1 0x0 PUSH2 0x94A DUP3 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x61C JUMP JUMPDEST PUSH2 0x961 DUP2 PUSH1 0x1 PUSH2 0x94A DUP6 PUSH1 0x2 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x971 PUSH2 0x549 PUSH2 0x549 PUSH1 0x4 PUSH2 0x492 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xD0 JUMPI PUSH2 0x9A6 PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH2 0x98A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x938CFD67 PUSH1 0xE0 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD PUSH2 0x8F2 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x55E JUMPI PUSH2 0xA25 JUMPI JUMPDEST POP PUSH2 0x9C6 PUSH2 0x549 PUSH2 0x549 PUSH1 0x5 PUSH2 0x492 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xD0 JUMPI PUSH2 0x9FC PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH2 0x9DF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x94BF804D PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 PUSH1 0x4 DUP5 ADD PUSH2 0x905 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x55E JUMPI PUSH2 0xA0D JUMPI POP JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH1 0x0 PUSH2 0xA1D DUP2 DUP4 PUSH2 0x8CB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x235 JUMP JUMPDEST PUSH2 0xA35 SWAP1 PUSH1 0x0 PUSH2 0xA1D DUP2 DUP4 PUSH2 0x8CB JUMP JUMPDEST CODESIZE PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0x88D JUMP JUMPDEST ISZERO PUSH2 0xA4B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420686173206265656E207265736F6C7665642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xE2 SWAP2 PUSH2 0xAAF PUSH2 0xAAA PUSH2 0x872 PUSH1 0x2 PUSH2 0x70F DUP6 DUP3 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST ISZERO PUSH2 0xABB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E672069732074656D706F726172696C792073757370656E646564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xB11 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1817 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xB68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C726561647920706C616365642061206265742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xBB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x24B73B30B634B21032BB32B73A1024A217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xE2 PUSH2 0xBFA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0xF8 PUSH1 0x40 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x1 PUSH2 0xC31 PUSH1 0x20 PUSH2 0xE2 SWAP5 PUSH2 0xC2A PUSH2 0xC24 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x61C JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x840 JUMP JUMPDEST SWAP1 PUSH2 0xE2 SWAP2 PUSH2 0xC0B JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x660 JUMPI JUMP JUMPDEST PUSH1 0x2 SWAP2 PUSH2 0xC6C PUSH2 0xC67 PUSH2 0x872 PUSH1 0x5 PUSH2 0x774 DUP7 DUP9 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0xD1F PUSH1 0x0 PUSH2 0xC84 PUSH2 0xC7D DUP3 PUSH2 0xFB JUMP JUMPDEST CALLVALUE GT PUSH2 0xB0A JUMP JUMPDEST PUSH2 0xD01 PUSH1 0x3 SWAP2 PUSH2 0xCB0 PUSH2 0xC9E DUP3 PUSH2 0x7B3 PUSH2 0x72B DUP11 DUP9 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xCAA PUSH2 0x681 DUP5 PUSH2 0xFB JUMP JUMPDEST EQ PUSH2 0xB61 JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0xCC1 DUP3 PUSH2 0x7B3 DUP10 DUP12 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x681 DUP5 PUSH2 0xFB JUMP JUMPDEST EQ ISZERO PUSH2 0xBAD JUMP JUMPDEST PUSH2 0xCE7 PUSH2 0xCDF PUSH2 0xC01 JUMP JUMPDEST SWAP2 CALLVALUE SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST DUP5 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xCFC PUSH2 0x72B DUP8 DUP6 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST PUSH2 0xD0B DUP5 DUP7 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0x7DF PUSH2 0xD18 DUP3 PUSH2 0x127 JUMP JUMPDEST CALLVALUE SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xD27 JUMPI POP POP JUMP JUMPDEST PUSH2 0xD0B PUSH1 0x4 SWAP2 PUSH2 0xE2 SWAP4 PUSH2 0x108 JUMP JUMPDEST SWAP1 PUSH2 0xE2 SWAP2 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0xD54 PUSH2 0x508 PUSH2 0x503 PUSH1 0x0 PUSH2 0x492 JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0xD6D PUSH2 0xAAA PUSH2 0x872 PUSH1 0x2 PUSH2 0x70F DUP6 DUP3 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE2 DUP3 PUSH2 0x35E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD0 JUMPI PUSH2 0xF8 SWAP1 PUSH1 0x20 PUSH2 0xD9B DUP3 DUP7 PUSH2 0xD72 JUMP JUMPDEST SWAP5 ADD PUSH2 0xD72 JUMP JUMPDEST ISZERO PUSH2 0xDA9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5175657374696F6E206F7574636F6D65206E6F742064657465726D696E656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3CB2BA17 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x612 JUMP JUMPDEST SWAP1 PUSH2 0xE17 PUSH2 0xF8 PUSH2 0x633 SWAP3 PUSH2 0x77A JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE3F PUSH2 0xE32 PUSH1 0x0 PUSH2 0x7B3 DUP6 DUP6 PUSH2 0x108 JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x681 PUSH1 0x0 PUSH2 0xFB JUMP JUMPDEST PUSH2 0xE4F PUSH2 0x549 PUSH2 0x549 PUSH1 0x4 PUSH2 0x492 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0xE5B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x25AAF905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP3 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x55E JUMPI PUSH2 0xE2 SWAP4 PUSH2 0xEAA PUSH2 0xEB0 SWAP3 PUSH1 0x1 SWAP6 PUSH1 0x0 DUP1 SWAP2 SWAP1 SWAP3 PUSH2 0xEB6 JUMPI JUMPDEST POP PUSH2 0xE9F SWAP1 PUSH2 0xDA2 JUMP JUMPDEST DUP5 PUSH2 0x87E DUP5 DUP3 PUSH2 0x108 JUMP JUMPDEST DUP3 PUSH2 0x108 JUMP JUMPDEST ADD PUSH2 0xE07 JUMP JUMPDEST PUSH2 0xE9F SWAP3 POP PUSH2 0xEDD SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xEE4 JUMPI JUMPDEST PUSH2 0xED5 DUP2 DUP4 PUSH2 0x8CB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xD7F JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0xE95 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xECB JUMP JUMPDEST PUSH2 0xE2 SWAP1 PUSH2 0xD40 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xC0E6B6DB0E16CB135E2B9236F02764A4F65E70DAC710 ADDRESS 0xF9 POP 0x1E EXP SAR 0xC7 ORIGIN PUSH26 0x64736F6C63430008180033000000000000000000000000000000 ",
              "sourceMap": "344:3782:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;713:39::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;344:3782::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;344:3782:0;;;;;;;;;:::i;820:34::-;;;;;:::i;344:3782::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;344:3782:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;653:20::-;;;;;:::i;344:3782::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;860:30::-;;;;;:::i;344:3782::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;;;;344:3782:0;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;758:55::-;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;344:3782::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;344:3782:0;;;;;;;1128:115;1159:66;1167:19;1181:5;;;:::i;:::-;1167:19;:::i;:::-;;:10;:19;:::i;:::-;;1159:66;:::i;:::-;1235:1;;:::i;344:3782::-;;;;;;;;;;3989:135;4086:31;4063:4;;;4055:13;4063:4;4055:13;:::i;:::-;:21;4086:23;:14;4094:5;;;:::i;:::-;4086:14;:::i;:23::-;:31;;;;;3989:135;4086:31;;;;3989:135::o;4086:31::-;;:::i;:::-;;;;;3989:135;;;:::i;344:3782::-;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;344:3782:0;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;344:3782:0;;;;;;;3096:737;3163:6;3155:65;3163:24;:15;;;;;:::i;:::-;:24;;:::i;:::-;3155:65;:::i;:::-;3230:43;3248:25;:13;;:4;:13;:::i;:::-;3262:10;3248:25;;:::i;3230:43::-;3291:10;;;:::i;:::-;3304:1;3283:52;3304:1;3291:14;;;;;:::i;:::-;;3283:52;:::i;:::-;3350:14;;;;;:::i;:::-;:41;;3368:23;:15;;;;;:::i;:::-;:23;;:::i;:::-;344:3782;;;;3350:41;;344:3782;;;;3350:41;;3346:481;;3426:15;3595:14;3544:36;3426:15;;;3545:21;3426:15;3485:26;;:15;3426;:24;3248:4;3426:15;;;;;;;:::i;:::-;:24;;:::i;:::-;3485:15;;:::i;:26::-;3545:10;;;;;;:::i;:::-;:21;:::i;:::-;3544:36;:::i;:::-;3595:14;;;;:::i;:::-;;;:::i;:::-;3623:96;3631:13;3639:4;3631:13;:::i;:::-;:33;;:21;:33;;3623:96;:::i;:::-;3733:28;:19;3262:10;3733:19;:::i;3346:481::-;3802:14;;;;;;;;:::i;:::-;:10;;:14;:::i;1128:115::-;1235:1;1128:115;1159:66;1167:19;1181:5;;;:::i;1159:66::-;1235:1;:::i;344:3782::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;3839:144::-;3914:62;3839:144;3914:29;:15;3946:30;3947:29;:15;;;:6;:15;:::i;:29::-;3946:30;;344:3782;3946:30;3914:15;3947:6;3914:15;:::i;:::-;:29;:62;:::i;3839:144::-;;;;:::i;1128:115::-;1235:1;1128:115;1159:66;1167:19;1181:5;;;:::i;1159:66::-;1235:1;:::i;344:3782::-;-1:-1:-1;;344:3782:0;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;344:3782:0;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1388:466::-;1475:13;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;1498:28;:15;:18;:15;;:6;:15;:::i;:::-;:18;:28;:::i;:::-;1536:37;:15;:25;:15;;1498:6;1536:15;:::i;:37::-;1719:46;:34;1733:19;;;:::i;1719:46::-;:66;;;;;;;;;;;;344:3782;;;;1719:66;;;;;;;;;-1:-1:-1;;;1719:66:0;;;;;;;:::i;:::-;;;;;;;;;;;1388:466;1805:15;1795:31;:26;1805:15;;;:::i;1795:31::-;:52;;;;;;;;;;;;344:3782;;;;1795:52;;;;;;;;;-1:-1:-1;;;1795:52:0;;1836:10;1795:52;;;;;:::i;:::-;;;;;;;;;;;1388:466;:::o;1795:52::-;;;;;;;;:::i;:::-;;;;;:::i;1719:66::-;;;;;;;;:::i;:::-;;;;1388:466;;;;:::i;344:3782::-;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;;;;1249:133;;1374:1;1249:133;1302:62;1310:25;1311:24;:6;:15;;;;:::i;1310:25::-;1302:62;:::i;:::-;1374:1;:::i;344:3782::-;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::o;1861:669::-;1975:6;:15;1966:76;1974:30;1975:29;;:15;;;;:::i;1974:30::-;1966:76;:::i;:::-;2397:37;2072:1;2052:60;2060:13;;;:::i;:::-;:9;:13;2052:60;:::i;:::-;2276:110;2130:4;:13;2122:80;2130:32;:13;:25;:13;;;;:::i;:32::-;:37;;;;:::i;:::-;;2122:80;:::i;:::-;2212:53;2220:18;:15;;;;;:::i;:18::-;:23;;;;:::i;:::-;;;2212:53;:::i;:::-;2304:82;;;:::i;:::-;2060:9;;2304:82;;;344:3782;;2304:82;344:3782;;;2304:82;;;344:3782;2276:25;:13;;;;:::i;:25::-;:110;:::i;:::-;2397:15;;;;:::i;:::-;:24;:37;;;;:::i;:::-;2060:9;2397:37;;:::i;:::-;2444:80;;1861:669;;:::o;2444:80::-;2474:15;:26;:15;:39;:15;;:::i;1861:669::-;;;;;:::i;1128:115::-;1235:1;1128:115;1159:66;1167:19;1181:5;;;:::i;1159:66::-;1374:1;1249:133;1302:62;1310:25;1311:24;:6;:15;;;;:::i;1302:62::-;1374:1;:::i;344:3782::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;344:3782:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;2536:553::-;2638:6;2630:53;2638:18;;:15;;;;:::i;:18::-;:23;;2660:1;2638:23;:::i;2630:53::-;2866;:34;2880:19;;;:::i;2866:53::-;:62;;;344:3782;;;;2866:62;-1:-1:-1;;;2866:62:0;;;;;344:3782;;;2866:62;;;344:3782;;2866:62;;;;;;;;3051:31;2866:62;3008:33;3051:15;2866:62;3078:4;2866:62;;;;;;;;2536:553;2938:59;;;;:::i;:::-;3008:15;;;;;:::i;:33::-;3051:15;;:::i;:::-;:24;:31;:::i;2866:62::-;2938:59;2866:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2536:553;;;;:::i"
            },
            "methodIdentifiers": {
              "bets(uint256,address)": "f644b3bb",
              "claimWinnings(uint256)": "677bd9ff",
              "createEvent(uint256)": "977d996d",
              "events(uint256)": "0b791430",
              "matchNFTAddress()": "9a2e8240",
              "owner()": "8da5cb5b",
              "placeBet(uint256,bool)": "9ed9c74d",
              "resolveEvent(uint256)": "bed524d6",
              "socialOracleAddress()": "30658198",
              "toggleEmergencyStop(uint256)": "8822e6fd",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_socialOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_matchNFTAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prediction\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"claimWinnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"createEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"winningPot\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"emergencyStop\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"matchNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prediction\",\"type\":\"bool\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"resolveEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"socialOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"toggleEmergencyStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentralizedBetting.sol\":\"DecentralizedBetting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/DecentralizedBetting.sol\":{\"keccak256\":\"0x39d58ee2daa18cbb6396092a684fd2f91a8748e17d33e1335528978931f9dc00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0068d0fae385f80748455ef8805fac423481aaadffff297d0f110bae6114cbe0\",\"dweb:/ipfs/QmfEc8fFsXW48BBQxHrxSfNsUWLJyo5EHBvvHiRCLgTXQ9\"]}},\"version\":1}"
        },
        "IMatchNFT": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "eventId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "mint(uint256,address)": "94bf804d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentralizedBetting.sol\":\"IMatchNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/DecentralizedBetting.sol\":{\"keccak256\":\"0x39d58ee2daa18cbb6396092a684fd2f91a8748e17d33e1335528978931f9dc00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0068d0fae385f80748455ef8805fac423481aaadffff297d0f110bae6114cbe0\",\"dweb:/ipfs/QmfEc8fFsXW48BBQxHrxSfNsUWLJyo5EHBvvHiRCLgTXQ9\"]}},\"version\":1}"
        },
        "ISocialOracle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_deadline",
                  "type": "uint256"
                }
              ],
              "name": "addQuestion",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_questionId",
                  "type": "uint256"
                }
              ],
              "name": "getQuestionOutcome",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "outcome",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "determined",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addQuestion(uint256,uint256)": "938cfd67",
              "getQuestionOutcome(uint256)": "25aaf905"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"addQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"getQuestionOutcome\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"determined\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentralizedBetting.sol\":\"ISocialOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/DecentralizedBetting.sol\":{\"keccak256\":\"0x39d58ee2daa18cbb6396092a684fd2f91a8748e17d33e1335528978931f9dc00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0068d0fae385f80748455ef8805fac423481aaadffff297d0f110bae6114cbe0\",\"dweb:/ipfs/QmfEc8fFsXW48BBQxHrxSfNsUWLJyo5EHBvvHiRCLgTXQ9\"]}},\"version\":1}"
        }
      }
    }
  }
}